Grammar

    0 $accept: input $end

    1 input: program_start

    2 program_start: program_main
    3              | const_declaration program_start
    4              | var_decl program_start
    5              | fun_definition program_start

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    8 function_body: local_declarations statements
    9              | statements

   10 var_const_decl: var_decl
   11               | const_declaration

   12 local_declarations: local_declarations var_const_decl
   13                   | var_const_decl

   14 const_declaration: KW_CONST const_assign COLON data_type SEMICOLON

   15 const_assign: TK_IDENTIFIER OP_ASSIGN expression
   16             | TK_IDENTIFIER OP_ASSIGN TK_STRING

   17 var_decl: var_strings COLON data_type SEMICOLON
   18         | var_strings COMMA var_decl_member

   19 var_decl_member: var_strings COMMA var_decl_member
   20                | var_strings COLON data_type SEMICOLON

   21 var_strings: TK_IDENTIFIER
   22            | TK_IDENTIFIER L_BRACKET expression R_BRACKET

   23 data_type: KW_INTEGER
   24          | KW_STR
   25          | KW_REAL
   26          | KW_BOOLEAN

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

   29 fun_parameters: fun_parameter_member COMMA fun_parameters
   30               | fun_parameter_member
   31               | %empty

   32 fun_parameter_member: TK_IDENTIFIER COLON data_type
   33                     | TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

   34 statements: statement
   35           | statements statement

   36 statement: assign_object SEMICOLON
   37          | function_call SEMICOLON
   38          | KW_CONTINUE SEMICOLON
   39          | KW_BREAK SEMICOLON
   40          | for_loop
   41          | while_loop
   42          | if_block
   43          | return_statement
   44          | syscall

   45 assign_object: var_strings OP_ASSIGN expression

   46 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS

   47 function_call_chain: %empty
   48                    | function_call_chain COMMA expression
   49                    | expression

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

   52 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON

   53 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

   55 return_statement: KW_RETURN SEMICOLON
   56                 | KW_RETURN expression SEMICOLON

   57 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | TK_IDENTIFIER L_BRACKET R_BRACKET

   59 expression: OP_MINUS expression
   60           | OP_PLUS expression
   61           | L_PARENTHESIS expression R_PARENTHESIS
   62           | expression OP_PLUS expression
   63           | expression OP_MINUS expression
   64           | expression OP_MUL expression
   65           | expression OP_DIV expression
   66           | expression OP_MOD expression
   67           | expression OP_POW expression
   68           | expression OP_EQ expression
   69           | expression OP_NEQ expression
   70           | expression OP_LESS expression
   71           | expression OP_LESSEQ expression
   72           | expression OP_GREATER expression
   73           | expression OP_GREATEREQ expression
   74           | expression OP_AND expression
   75           | expression OP_OR expression
   76           | OP_NOT expression
   77           | expression OP_ASSIGN_INCR expression
   78           | expression OP_ASSIGN_DEC expression
   79           | expression OP_ASSIGN_MUL expression
   80           | expression OP_ASSIGN_DIV expression
   81           | expression OP_ASSIGN_MOD expression
   82           | array_expression
   83           | TK_IDENTIFIER
   84           | TK_INTEGER
   85           | TK_REAL
   86           | KW_TRUE
   87           | KW_FALSE
   88           | syscall
   89           | function_call

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

   97 syscall_write_content: TK_IDENTIFIER
   98                      | TK_STRING
   99                      | array_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    KW_INTEGER (258) 23
    KW_REAL (259) 25
    KW_STR (260) 24
    KW_BOOLEAN (261) 26
    KW_TRUE (262) 86
    KW_FALSE (263) 87
    KW_CONST (264) 14
    KW_IF (265) 53 54
    KW_ELSE (266) 54
    KW_ENDIF (267) 53 54
    KW_FOR (268) 50 51
    KW_IN (269) 50 51
    KW_ENDFOR (270) 50 51
    KW_WHILE (271) 52
    KW_ENDWHILE (272) 52
    KW_BREAK (273) 39
    KW_CONTINUE (274) 38
    KW_DEF (275) 6 7 27 28
    KW_ENDDEF (276) 6 7 27 28
    KW_MAIN (277) 6 7
    KW_RETURN (278) 55 56
    SEMICOLON (279) 6 7 14 17 20 27 28 36 37 38 39 50 51 52 53 54 55 56 90 91 92 93 94 95 96
    L_PARENTHESIS (280) 6 7 27 28 46 52 53 54 61 90 91 92 93 94 95 96
    R_PARENTHESIS (281) 6 7 27 28 46 52 53 54 61 90 91 92 93 94 95 96
    COMMA (282) 18 19 29 48
    L_BRACKET (283) 22 33 50 51 57 58
    R_BRACKET (284) 22 33 50 51 57 58
    COLON (285) 6 7 14 17 20 27 28 32 33 50 51 52 53 54
    OP_PLUS (286) 60 62
    OP_MINUS (287) 27 59 63
    OP_MUL (288) 64
    OP_DIV (289) 65
    OP_MOD (290) 66
    OP_POW (291) 67
    OP_EQ (292) 68
    OP_NEQ (293) 69
    OP_LESS (294) 70
    OP_LESSEQ (295) 71
    OP_GREATER (296) 27 72
    OP_GREATEREQ (297) 73
    OP_AND (298) 74
    OP_OR (299) 75
    OP_NOT (300) 76
    OP_ASSIGN (301) 15 16 45 90 91 92
    OP_ASSIGN_INCR (302) 77
    OP_ASSIGN_DEC (303) 78
    OP_ASSIGN_MUL (304) 79
    OP_ASSIGN_DIV (305) 80
    OP_ASSIGN_MOD (306) 81
    FUNC_RSTR (307) 90
    FUNC_RINT (308) 92
    FUNC_RSCAL (309) 91
    FUNC_WSTR (310) 93
    FUNC_WINT (311) 95
    FUNC_WSCAL (312) 94
    FUNC_WRT (313) 96
    TK_IDENTIFIER <str> (314) 15 16 21 22 27 28 32 33 46 50 51 57 58 83 97
    TK_INTEGER <str> (315) 84
    TK_REAL <str> (316) 85
    TK_STRING <str> (317) 16 98


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    input (64)
        on left: 1
        on right: 0
    program_start <str> (65)
        on left: 2 3 4 5
        on right: 1 3 4 5
    program_main <str> (66)
        on left: 6 7
        on right: 2
    function_body <str> (67)
        on left: 8 9
        on right: 7 27 28
    var_const_decl <str> (68)
        on left: 10 11
        on right: 12 13
    local_declarations <str> (69)
        on left: 12 13
        on right: 8 12
    const_declaration <str> (70)
        on left: 14
        on right: 3 11
    const_assign <str> (71)
        on left: 15 16
        on right: 14
    var_decl <str> (72)
        on left: 17 18
        on right: 4 10
    var_decl_member <str> (73)
        on left: 19 20
        on right: 18 19
    var_strings <str> (74)
        on left: 21 22
        on right: 17 18 19 20 45 90 91 92
    data_type <str> (75)
        on left: 23 24 25 26
        on right: 14 17 20 27 32 33
    fun_definition <str> (76)
        on left: 27 28
        on right: 5
    fun_parameters <str> (77)
        on left: 29 30 31
        on right: 27 28 29
    fun_parameter_member <str> (78)
        on left: 32 33
        on right: 29 30
    statements <str> (79)
        on left: 34 35
        on right: 8 9 35 50 51 52 53 54
    statement <str> (80)
        on left: 36 37 38 39 40 41 42 43 44
        on right: 34 35
    assign_object <str> (81)
        on left: 45
        on right: 36
    function_call <str> (82)
        on left: 46
        on right: 37 89
    function_call_chain <str> (83)
        on left: 47 48 49
        on right: 46 48
    for_loop <str> (84)
        on left: 50 51
        on right: 40
    while_loop <str> (85)
        on left: 52
        on right: 41
    if_block <str> (86)
        on left: 53 54
        on right: 42
    return_statement <str> (87)
        on left: 55 56
        on right: 43
    array_expression <str> (88)
        on left: 57 58
        on right: 82 99
    expression <str> (89)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
        on right: 15 22 45 48 49 50 51 52 53 54 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    syscall <str> (90)
        on left: 90 91 92 93 94 95 96
        on right: 44 88
    syscall_write_content <str> (91)
        on left: 97 98 99
        on right: 93 94 95 96


State 0

    0 $accept: . input $end
    1 input: . program_start
    2 program_start: . program_main
    3              | . const_declaration program_start
    4              | . var_decl program_start
    5              | . fun_definition program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    input              go to state 4
    program_start      go to state 5
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_strings        go to state 9
    fun_definition     go to state 10


State 1

   14 const_declaration: KW_CONST . const_assign COLON data_type SEMICOLON
   15 const_assign: . TK_IDENTIFIER OP_ASSIGN expression
   16             | . TK_IDENTIFIER OP_ASSIGN TK_STRING

    TK_IDENTIFIER  shift, and go to state 11

    const_assign  go to state 12


State 2

    6 program_main: KW_DEF . KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF . KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   27 fun_definition: KW_DEF . TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF . TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_MAIN        shift, and go to state 13
    TK_IDENTIFIER  shift, and go to state 14


State 3

   21 var_strings: TK_IDENTIFIER .  [COMMA, COLON]
   22            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 15

    $default  reduce using rule 21 (var_strings)


State 4

    0 $accept: input . $end

    $end  shift, and go to state 16


State 5

    1 input: program_start .

    $default  reduce using rule 1 (input)


State 6

    2 program_start: program_main .

    $default  reduce using rule 2 (program_start)


State 7

    2 program_start: . program_main
    3              | . const_declaration program_start
    3              | const_declaration . program_start
    4              | . var_decl program_start
    5              | . fun_definition program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start      go to state 17
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_strings        go to state 9
    fun_definition     go to state 10


State 8

    2 program_start: . program_main
    3              | . const_declaration program_start
    4              | . var_decl program_start
    4              | var_decl . program_start
    5              | . fun_definition program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start      go to state 18
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_strings        go to state 9
    fun_definition     go to state 10


State 9

   17 var_decl: var_strings . COLON data_type SEMICOLON
   18         | var_strings . COMMA var_decl_member

    COMMA  shift, and go to state 19
    COLON  shift, and go to state 20


State 10

    2 program_start: . program_main
    3              | . const_declaration program_start
    4              | . var_decl program_start
    5              | . fun_definition program_start
    5              | fun_definition . program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start      go to state 21
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_strings        go to state 9
    fun_definition     go to state 10


State 11

   15 const_assign: TK_IDENTIFIER . OP_ASSIGN expression
   16             | TK_IDENTIFIER . OP_ASSIGN TK_STRING

    OP_ASSIGN  shift, and go to state 22


State 12

   14 const_declaration: KW_CONST const_assign . COLON data_type SEMICOLON

    COLON  shift, and go to state 23


State 13

    6 program_main: KW_DEF KW_MAIN . L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN . L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    L_PARENTHESIS  shift, and go to state 24


State 14

   27 fun_definition: KW_DEF TK_IDENTIFIER . L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER . L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    L_PARENTHESIS  shift, and go to state 25


State 15

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   22            | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 42
    syscall           go to state 43


State 16

    0 $accept: input $end .

    $default  accept


State 17

    3 program_start: const_declaration program_start .

    $default  reduce using rule 3 (program_start)


State 18

    4 program_start: var_decl program_start .

    $default  reduce using rule 4 (program_start)


State 19

   18 var_decl: var_strings COMMA . var_decl_member
   19 var_decl_member: . var_strings COMMA var_decl_member
   20                | . var_strings COLON data_type SEMICOLON
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET

    TK_IDENTIFIER  shift, and go to state 3

    var_decl_member  go to state 44
    var_strings      go to state 45


State 20

   17 var_decl: var_strings COLON . data_type SEMICOLON
   23 data_type: . KW_INTEGER
   24          | . KW_STR
   25          | . KW_REAL
   26          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 46
    KW_REAL     shift, and go to state 47
    KW_STR      shift, and go to state 48
    KW_BOOLEAN  shift, and go to state 49

    data_type  go to state 50


State 21

    5 program_start: fun_definition program_start .

    $default  reduce using rule 5 (program_start)


State 22

   15 const_assign: TK_IDENTIFIER OP_ASSIGN . expression
   16             | TK_IDENTIFIER OP_ASSIGN . TK_STRING
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38
    TK_STRING      shift, and go to state 51

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 52
    syscall           go to state 43


State 23

   14 const_declaration: KW_CONST const_assign COLON . data_type SEMICOLON
   23 data_type: . KW_INTEGER
   24          | . KW_STR
   25          | . KW_REAL
   26          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 46
    KW_REAL     shift, and go to state 47
    KW_STR      shift, and go to state 48
    KW_BOOLEAN  shift, and go to state 49

    data_type  go to state 53


State 24

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS . R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS . R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    R_PARENTHESIS  shift, and go to state 54


State 25

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS . fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS . fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   29 fun_parameters: . fun_parameter_member COMMA fun_parameters
   30               | . fun_parameter_member
   31               | . %empty  [R_PARENTHESIS]
   32 fun_parameter_member: . TK_IDENTIFIER COLON data_type
   33                     | . TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

    TK_IDENTIFIER  shift, and go to state 55

    $default  reduce using rule 31 (fun_parameters)

    fun_parameters        go to state 56
    fun_parameter_member  go to state 57


State 26

   86 expression: KW_TRUE .

    $default  reduce using rule 86 (expression)


State 27

   87 expression: KW_FALSE .

    $default  reduce using rule 87 (expression)


State 28

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   61           | L_PARENTHESIS . expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 58
    syscall           go to state 43


State 29

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   60           | OP_PLUS . expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 59
    syscall           go to state 43


State 30

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   59           | OP_MINUS . expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 60
    syscall           go to state 43


State 31

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   76           | OP_NOT . expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 61
    syscall           go to state 43


State 32

   93 syscall: FUNC_WSTR . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 62


State 33

   95 syscall: FUNC_WINT . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 63


State 34

   94 syscall: FUNC_WSCAL . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 64


State 35

   96 syscall: FUNC_WRT . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 65


State 36

   21 var_strings: TK_IDENTIFIER .  [OP_ASSIGN]
   22            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   46 function_call: TK_IDENTIFIER . L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   58                 | TK_IDENTIFIER . L_BRACKET R_BRACKET
   83 expression: TK_IDENTIFIER .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL, OP_ASSIGN_DIV, OP_ASSIGN_MOD]

    L_PARENTHESIS  shift, and go to state 66
    L_BRACKET      shift, and go to state 67

    OP_ASSIGN  reduce using rule 21 (var_strings)
    $default   reduce using rule 83 (expression)


State 37

   84 expression: TK_INTEGER .

    $default  reduce using rule 84 (expression)


State 38

   85 expression: TK_REAL .

    $default  reduce using rule 85 (expression)


State 39

   90 syscall: var_strings . OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings . OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings . OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    OP_ASSIGN  shift, and go to state 68


State 40

   89 expression: function_call .

    $default  reduce using rule 89 (expression)


State 41

   82 expression: array_expression .

    $default  reduce using rule 82 (expression)


State 42

   22 var_strings: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 69
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 43

   88 expression: syscall .

    $default  reduce using rule 88 (expression)


State 44

   18 var_decl: var_strings COMMA var_decl_member .

    $default  reduce using rule 18 (var_decl)


State 45

   19 var_decl_member: var_strings . COMMA var_decl_member
   20                | var_strings . COLON data_type SEMICOLON

    COMMA  shift, and go to state 89
    COLON  shift, and go to state 90


State 46

   23 data_type: KW_INTEGER .

    $default  reduce using rule 23 (data_type)


State 47

   25 data_type: KW_REAL .

    $default  reduce using rule 25 (data_type)


State 48

   24 data_type: KW_STR .

    $default  reduce using rule 24 (data_type)


State 49

   26 data_type: KW_BOOLEAN .

    $default  reduce using rule 26 (data_type)


State 50

   17 var_decl: var_strings COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 51

   16 const_assign: TK_IDENTIFIER OP_ASSIGN TK_STRING .

    $default  reduce using rule 16 (const_assign)


State 52

   15 const_assign: TK_IDENTIFIER OP_ASSIGN expression .  [COLON]
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 15 (const_assign)


State 53

   14 const_declaration: KW_CONST const_assign COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 54

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS . COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS . COLON function_body KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 93


State 55

   32 fun_parameter_member: TK_IDENTIFIER . COLON data_type
   33                     | TK_IDENTIFIER . L_BRACKET R_BRACKET COLON data_type

    L_BRACKET  shift, and go to state 94
    COLON      shift, and go to state 95


State 56

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters . R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters . R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    R_PARENTHESIS  shift, and go to state 96


State 57

   29 fun_parameters: fun_parameter_member . COMMA fun_parameters
   30               | fun_parameter_member .  [R_PARENTHESIS]

    COMMA  shift, and go to state 97

    $default  reduce using rule 30 (fun_parameters)


State 58

   61 expression: L_PARENTHESIS expression . R_PARENTHESIS
   62           | expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_PARENTHESIS   shift, and go to state 98
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 59

   60 expression: OP_PLUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS]
   62           | expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 60 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 60 and token OP_MUL resolved as shift (OP_PLUS < OP_MUL).
    Conflict between rule 60 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 60 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 60 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 60 and token OP_EQ resolved as shift (OP_PLUS < OP_EQ).
    Conflict between rule 60 and token OP_NEQ resolved as shift (OP_PLUS < OP_NEQ).
    Conflict between rule 60 and token OP_LESS resolved as shift (OP_PLUS < OP_LESS).
    Conflict between rule 60 and token OP_LESSEQ resolved as shift (OP_PLUS < OP_LESSEQ).
    Conflict between rule 60 and token OP_GREATER resolved as shift (OP_PLUS < OP_GREATER).
    Conflict between rule 60 and token OP_GREATEREQ resolved as shift (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 60 and token OP_AND resolved as shift (OP_PLUS < OP_AND).
    Conflict between rule 60 and token OP_OR resolved as shift (OP_PLUS < OP_OR).
    Conflict between rule 60 and token OP_ASSIGN_INCR resolved as shift (OP_PLUS < OP_ASSIGN_INCR).
    Conflict between rule 60 and token OP_ASSIGN_DEC resolved as shift (OP_PLUS < OP_ASSIGN_DEC).
    Conflict between rule 60 and token OP_ASSIGN_MUL resolved as shift (OP_PLUS < OP_ASSIGN_MUL).
    Conflict between rule 60 and token OP_ASSIGN_DIV resolved as shift (OP_PLUS < OP_ASSIGN_DIV).
    Conflict between rule 60 and token OP_ASSIGN_MOD resolved as shift (OP_PLUS < OP_ASSIGN_MOD).


State 60

   59 expression: OP_MINUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS]
   62           | expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 59 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 59 and token OP_MUL resolved as shift (OP_MINUS < OP_MUL).
    Conflict between rule 59 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 59 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 59 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 59 and token OP_EQ resolved as shift (OP_MINUS < OP_EQ).
    Conflict between rule 59 and token OP_NEQ resolved as shift (OP_MINUS < OP_NEQ).
    Conflict between rule 59 and token OP_LESS resolved as shift (OP_MINUS < OP_LESS).
    Conflict between rule 59 and token OP_LESSEQ resolved as shift (OP_MINUS < OP_LESSEQ).
    Conflict between rule 59 and token OP_GREATER resolved as shift (OP_MINUS < OP_GREATER).
    Conflict between rule 59 and token OP_GREATEREQ resolved as shift (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 59 and token OP_AND resolved as shift (OP_MINUS < OP_AND).
    Conflict between rule 59 and token OP_OR resolved as shift (OP_MINUS < OP_OR).
    Conflict between rule 59 and token OP_ASSIGN_INCR resolved as shift (OP_MINUS < OP_ASSIGN_INCR).
    Conflict between rule 59 and token OP_ASSIGN_DEC resolved as shift (OP_MINUS < OP_ASSIGN_DEC).
    Conflict between rule 59 and token OP_ASSIGN_MUL resolved as shift (OP_MINUS < OP_ASSIGN_MUL).
    Conflict between rule 59 and token OP_ASSIGN_DIV resolved as shift (OP_MINUS < OP_ASSIGN_DIV).
    Conflict between rule 59 and token OP_ASSIGN_MOD resolved as shift (OP_MINUS < OP_ASSIGN_MOD).


State 61

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   76           | OP_NOT expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token OP_PLUS resolved as reduce (OP_PLUS < OP_NOT).
    Conflict between rule 76 and token OP_MINUS resolved as reduce (OP_MINUS < OP_NOT).
    Conflict between rule 76 and token OP_MUL resolved as reduce (OP_MUL < OP_NOT).
    Conflict between rule 76 and token OP_DIV resolved as reduce (OP_DIV < OP_NOT).
    Conflict between rule 76 and token OP_MOD resolved as reduce (OP_MOD < OP_NOT).
    Conflict between rule 76 and token OP_POW resolved as reduce (OP_POW < OP_NOT).
    Conflict between rule 76 and token OP_EQ resolved as reduce (OP_EQ < OP_NOT).
    Conflict between rule 76 and token OP_NEQ resolved as reduce (OP_NEQ < OP_NOT).
    Conflict between rule 76 and token OP_LESS resolved as reduce (OP_LESS < OP_NOT).
    Conflict between rule 76 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_NOT).
    Conflict between rule 76 and token OP_GREATER resolved as reduce (OP_GREATER < OP_NOT).
    Conflict between rule 76 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_NOT).
    Conflict between rule 76 and token OP_AND resolved as reduce (OP_AND < OP_NOT).
    Conflict between rule 76 and token OP_OR resolved as reduce (OP_OR < OP_NOT).
    Conflict between rule 76 and token OP_ASSIGN_INCR resolved as shift (OP_NOT < OP_ASSIGN_INCR).
    Conflict between rule 76 and token OP_ASSIGN_DEC resolved as shift (OP_NOT < OP_ASSIGN_DEC).
    Conflict between rule 76 and token OP_ASSIGN_MUL resolved as shift (OP_NOT < OP_ASSIGN_MUL).
    Conflict between rule 76 and token OP_ASSIGN_DIV resolved as shift (OP_NOT < OP_ASSIGN_DIV).
    Conflict between rule 76 and token OP_ASSIGN_MOD resolved as shift (OP_NOT < OP_ASSIGN_MOD).


State 62

   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   93 syscall: FUNC_WSTR L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 99
    TK_STRING      shift, and go to state 100

    array_expression       go to state 101
    syscall_write_content  go to state 102


State 63

   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   95 syscall: FUNC_WINT L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 99
    TK_STRING      shift, and go to state 100

    array_expression       go to state 101
    syscall_write_content  go to state 103


State 64

   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   94 syscall: FUNC_WSCAL L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 99
    TK_STRING      shift, and go to state 100

    array_expression       go to state 101
    syscall_write_content  go to state 104


State 65

   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   96 syscall: FUNC_WRT L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 99
    TK_STRING      shift, and go to state 100

    array_expression       go to state 101
    syscall_write_content  go to state 105


State 66

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   46              | TK_IDENTIFIER L_PARENTHESIS . function_call_chain R_PARENTHESIS
   47 function_call_chain: . %empty  [R_PARENTHESIS, COMMA]
   48                    | . function_call_chain COMMA expression
   49                    | . expression
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    $default  reduce using rule 47 (function_call_chain)

    var_strings          go to state 39
    function_call        go to state 40
    function_call_chain  go to state 106
    array_expression     go to state 41
    expression           go to state 107
    syscall              go to state 43


State 67

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   22            | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   57                 | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   58                 | TK_IDENTIFIER L_BRACKET . R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    R_BRACKET      shift, and go to state 108
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 109
    syscall           go to state 43


State 68

   90 syscall: var_strings OP_ASSIGN . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings OP_ASSIGN . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings OP_ASSIGN . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    FUNC_RSTR   shift, and go to state 110
    FUNC_RINT   shift, and go to state 111
    FUNC_RSCAL  shift, and go to state 112


State 69

   22 var_strings: TK_IDENTIFIER L_BRACKET expression R_BRACKET .

    $default  reduce using rule 22 (var_strings)


State 70

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   62           | expression OP_PLUS . expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 113
    syscall           go to state 43


State 71

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   63           | expression OP_MINUS . expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 114
    syscall           go to state 43


State 72

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   64           | expression OP_MUL . expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 115
    syscall           go to state 43


State 73

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   65           | expression OP_DIV . expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 116
    syscall           go to state 43


State 74

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   66           | expression OP_MOD . expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 117
    syscall           go to state 43


State 75

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   67           | expression OP_POW . expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 118
    syscall           go to state 43


State 76

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   68           | expression OP_EQ . expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 119
    syscall           go to state 43


State 77

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   69           | expression OP_NEQ . expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 120
    syscall           go to state 43


State 78

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   70           | expression OP_LESS . expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 121
    syscall           go to state 43


State 79

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   71           | expression OP_LESSEQ . expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 122
    syscall           go to state 43


State 80

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   72           | expression OP_GREATER . expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 123
    syscall           go to state 43


State 81

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   73           | expression OP_GREATEREQ . expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 124
    syscall           go to state 43


State 82

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   74           | expression OP_AND . expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 125
    syscall           go to state 43


State 83

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   75           | expression OP_OR . expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 126
    syscall           go to state 43


State 84

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   77           | expression OP_ASSIGN_INCR . expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 127
    syscall           go to state 43


State 85

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   78           | expression OP_ASSIGN_DEC . expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 128
    syscall           go to state 43


State 86

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   79           | expression OP_ASSIGN_MUL . expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 129
    syscall           go to state 43


State 87

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   80           | expression OP_ASSIGN_DIV . expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 130
    syscall           go to state 43


State 88

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   81           | expression OP_ASSIGN_MOD . expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 131
    syscall           go to state 43


State 89

   19 var_decl_member: . var_strings COMMA var_decl_member
   19                | var_strings COMMA . var_decl_member
   20                | . var_strings COLON data_type SEMICOLON
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET

    TK_IDENTIFIER  shift, and go to state 3

    var_decl_member  go to state 132
    var_strings      go to state 45


State 90

   20 var_decl_member: var_strings COLON . data_type SEMICOLON
   23 data_type: . KW_INTEGER
   24          | . KW_STR
   25          | . KW_REAL
   26          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 46
    KW_REAL     shift, and go to state 47
    KW_STR      shift, and go to state 48
    KW_BOOLEAN  shift, and go to state 49

    data_type  go to state 133


State 91

   17 var_decl: var_strings COLON data_type SEMICOLON .

    $default  reduce using rule 17 (var_decl)


State 92

   14 const_declaration: KW_CONST const_assign COLON data_type SEMICOLON .

    $default  reduce using rule 14 (const_declaration)


State 93

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON . KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON . function_body KW_ENDDEF SEMICOLON
    8 function_body: . local_declarations statements
    9              | . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: . local_declarations var_const_decl
   13                   | . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_ENDDEF      shift, and go to state 139
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    function_body       go to state 142
    var_const_decl      go to state 143
    local_declarations  go to state 144
    const_declaration   go to state 145
    var_decl            go to state 146
    var_strings         go to state 147
    statements          go to state 148
    statement           go to state 149
    assign_object       go to state 150
    function_call       go to state 151
    for_loop            go to state 152
    while_loop          go to state 153
    if_block            go to state 154
    return_statement    go to state 155
    syscall             go to state 156


State 94

   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET . R_BRACKET COLON data_type

    R_BRACKET  shift, and go to state 157


State 95

   23 data_type: . KW_INTEGER
   24          | . KW_STR
   25          | . KW_REAL
   26          | . KW_BOOLEAN
   32 fun_parameter_member: TK_IDENTIFIER COLON . data_type

    KW_INTEGER  shift, and go to state 46
    KW_REAL     shift, and go to state 47
    KW_STR      shift, and go to state 48
    KW_BOOLEAN  shift, and go to state 49

    data_type  go to state 158


State 96

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS . OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS . COLON function_body KW_ENDDEF SEMICOLON

    COLON     shift, and go to state 159
    OP_MINUS  shift, and go to state 160


State 97

   29 fun_parameters: . fun_parameter_member COMMA fun_parameters
   29               | fun_parameter_member COMMA . fun_parameters
   30               | . fun_parameter_member
   31               | . %empty  [R_PARENTHESIS]
   32 fun_parameter_member: . TK_IDENTIFIER COLON data_type
   33                     | . TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

    TK_IDENTIFIER  shift, and go to state 55

    $default  reduce using rule 31 (fun_parameters)

    fun_parameters        go to state 161
    fun_parameter_member  go to state 57


State 98

   61 expression: L_PARENTHESIS expression R_PARENTHESIS .

    $default  reduce using rule 61 (expression)


State 99

   57 array_expression: TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   58                 | TK_IDENTIFIER . L_BRACKET R_BRACKET
   97 syscall_write_content: TK_IDENTIFIER .  [R_PARENTHESIS]

    L_BRACKET  shift, and go to state 162

    $default  reduce using rule 97 (syscall_write_content)


State 100

   98 syscall_write_content: TK_STRING .

    $default  reduce using rule 98 (syscall_write_content)


State 101

   99 syscall_write_content: array_expression .

    $default  reduce using rule 99 (syscall_write_content)


State 102

   93 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 163


State 103

   95 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 164


State 104

   94 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 165


State 105

   96 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 166


State 106

   46 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain . R_PARENTHESIS
   48 function_call_chain: function_call_chain . COMMA expression

    R_PARENTHESIS  shift, and go to state 167
    COMMA          shift, and go to state 168


State 107

   49 function_call_chain: expression .  [R_PARENTHESIS, COMMA]
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 49 (function_call_chain)


State 108

   58 array_expression: TK_IDENTIFIER L_BRACKET R_BRACKET .

    $default  reduce using rule 58 (array_expression)


State 109

   22 var_strings: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   57 array_expression: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 169
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 110

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 170


State 111

   92 syscall: var_strings OP_ASSIGN FUNC_RINT . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 171


State 112

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 172


State 113

   62 expression: expression . OP_PLUS expression
   62           | expression OP_PLUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS]
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 62 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 62 and token OP_MUL resolved as shift (OP_PLUS < OP_MUL).
    Conflict between rule 62 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 62 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 62 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 62 and token OP_EQ resolved as shift (OP_PLUS < OP_EQ).
    Conflict between rule 62 and token OP_NEQ resolved as shift (OP_PLUS < OP_NEQ).
    Conflict between rule 62 and token OP_LESS resolved as shift (OP_PLUS < OP_LESS).
    Conflict between rule 62 and token OP_LESSEQ resolved as shift (OP_PLUS < OP_LESSEQ).
    Conflict between rule 62 and token OP_GREATER resolved as shift (OP_PLUS < OP_GREATER).
    Conflict between rule 62 and token OP_GREATEREQ resolved as shift (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 62 and token OP_AND resolved as shift (OP_PLUS < OP_AND).
    Conflict between rule 62 and token OP_OR resolved as shift (OP_PLUS < OP_OR).
    Conflict between rule 62 and token OP_ASSIGN_INCR resolved as shift (OP_PLUS < OP_ASSIGN_INCR).
    Conflict between rule 62 and token OP_ASSIGN_DEC resolved as shift (OP_PLUS < OP_ASSIGN_DEC).
    Conflict between rule 62 and token OP_ASSIGN_MUL resolved as shift (OP_PLUS < OP_ASSIGN_MUL).
    Conflict between rule 62 and token OP_ASSIGN_DIV resolved as shift (OP_PLUS < OP_ASSIGN_DIV).
    Conflict between rule 62 and token OP_ASSIGN_MOD resolved as shift (OP_PLUS < OP_ASSIGN_MOD).


State 114

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   63           | expression OP_MINUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS]
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 63 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 63 and token OP_MUL resolved as shift (OP_MINUS < OP_MUL).
    Conflict between rule 63 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 63 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 63 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 63 and token OP_EQ resolved as shift (OP_MINUS < OP_EQ).
    Conflict between rule 63 and token OP_NEQ resolved as shift (OP_MINUS < OP_NEQ).
    Conflict between rule 63 and token OP_LESS resolved as shift (OP_MINUS < OP_LESS).
    Conflict between rule 63 and token OP_LESSEQ resolved as shift (OP_MINUS < OP_LESSEQ).
    Conflict between rule 63 and token OP_GREATER resolved as shift (OP_MINUS < OP_GREATER).
    Conflict between rule 63 and token OP_GREATEREQ resolved as shift (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 63 and token OP_AND resolved as shift (OP_MINUS < OP_AND).
    Conflict between rule 63 and token OP_OR resolved as shift (OP_MINUS < OP_OR).
    Conflict between rule 63 and token OP_ASSIGN_INCR resolved as shift (OP_MINUS < OP_ASSIGN_INCR).
    Conflict between rule 63 and token OP_ASSIGN_DEC resolved as shift (OP_MINUS < OP_ASSIGN_DEC).
    Conflict between rule 63 and token OP_ASSIGN_MUL resolved as shift (OP_MINUS < OP_ASSIGN_MUL).
    Conflict between rule 63 and token OP_ASSIGN_DIV resolved as shift (OP_MINUS < OP_ASSIGN_DIV).
    Conflict between rule 63 and token OP_ASSIGN_MOD resolved as shift (OP_MINUS < OP_ASSIGN_MOD).


State 115

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   64           | expression OP_MUL expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL]
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MUL).
    Conflict between rule 64 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MUL).
    Conflict between rule 64 and token OP_MUL resolved as reduce (%left OP_MUL).
    Conflict between rule 64 and token OP_DIV resolved as shift (OP_MUL < OP_DIV).
    Conflict between rule 64 and token OP_MOD resolved as shift (OP_MUL < OP_MOD).
    Conflict between rule 64 and token OP_POW resolved as shift (OP_MUL < OP_POW).
    Conflict between rule 64 and token OP_EQ resolved as shift (OP_MUL < OP_EQ).
    Conflict between rule 64 and token OP_NEQ resolved as shift (OP_MUL < OP_NEQ).
    Conflict between rule 64 and token OP_LESS resolved as shift (OP_MUL < OP_LESS).
    Conflict between rule 64 and token OP_LESSEQ resolved as shift (OP_MUL < OP_LESSEQ).
    Conflict between rule 64 and token OP_GREATER resolved as shift (OP_MUL < OP_GREATER).
    Conflict between rule 64 and token OP_GREATEREQ resolved as shift (OP_MUL < OP_GREATEREQ).
    Conflict between rule 64 and token OP_AND resolved as shift (OP_MUL < OP_AND).
    Conflict between rule 64 and token OP_OR resolved as shift (OP_MUL < OP_OR).
    Conflict between rule 64 and token OP_ASSIGN_INCR resolved as shift (OP_MUL < OP_ASSIGN_INCR).
    Conflict between rule 64 and token OP_ASSIGN_DEC resolved as shift (OP_MUL < OP_ASSIGN_DEC).
    Conflict between rule 64 and token OP_ASSIGN_MUL resolved as shift (OP_MUL < OP_ASSIGN_MUL).
    Conflict between rule 64 and token OP_ASSIGN_DIV resolved as shift (OP_MUL < OP_ASSIGN_DIV).
    Conflict between rule 64 and token OP_ASSIGN_MOD resolved as shift (OP_MUL < OP_ASSIGN_MOD).


State 116

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   65           | expression OP_DIV expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV]
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 65 (expression)

    Conflict between rule 65 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 65 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 65 and token OP_MUL resolved as reduce (OP_MUL < OP_DIV).
    Conflict between rule 65 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 65 and token OP_MOD resolved as shift (OP_DIV < OP_MOD).
    Conflict between rule 65 and token OP_POW resolved as shift (OP_DIV < OP_POW).
    Conflict between rule 65 and token OP_EQ resolved as shift (OP_DIV < OP_EQ).
    Conflict between rule 65 and token OP_NEQ resolved as shift (OP_DIV < OP_NEQ).
    Conflict between rule 65 and token OP_LESS resolved as shift (OP_DIV < OP_LESS).
    Conflict between rule 65 and token OP_LESSEQ resolved as shift (OP_DIV < OP_LESSEQ).
    Conflict between rule 65 and token OP_GREATER resolved as shift (OP_DIV < OP_GREATER).
    Conflict between rule 65 and token OP_GREATEREQ resolved as shift (OP_DIV < OP_GREATEREQ).
    Conflict between rule 65 and token OP_AND resolved as shift (OP_DIV < OP_AND).
    Conflict between rule 65 and token OP_OR resolved as shift (OP_DIV < OP_OR).
    Conflict between rule 65 and token OP_ASSIGN_INCR resolved as shift (OP_DIV < OP_ASSIGN_INCR).
    Conflict between rule 65 and token OP_ASSIGN_DEC resolved as shift (OP_DIV < OP_ASSIGN_DEC).
    Conflict between rule 65 and token OP_ASSIGN_MUL resolved as shift (OP_DIV < OP_ASSIGN_MUL).
    Conflict between rule 65 and token OP_ASSIGN_DIV resolved as shift (OP_DIV < OP_ASSIGN_DIV).
    Conflict between rule 65 and token OP_ASSIGN_MOD resolved as shift (OP_DIV < OP_ASSIGN_MOD).


State 117

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   66           | expression OP_MOD expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD]
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 66 (expression)

    Conflict between rule 66 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 66 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 66 and token OP_MUL resolved as reduce (OP_MUL < OP_MOD).
    Conflict between rule 66 and token OP_DIV resolved as reduce (OP_DIV < OP_MOD).
    Conflict between rule 66 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 66 and token OP_POW resolved as shift (OP_MOD < OP_POW).
    Conflict between rule 66 and token OP_EQ resolved as shift (OP_MOD < OP_EQ).
    Conflict between rule 66 and token OP_NEQ resolved as shift (OP_MOD < OP_NEQ).
    Conflict between rule 66 and token OP_LESS resolved as shift (OP_MOD < OP_LESS).
    Conflict between rule 66 and token OP_LESSEQ resolved as shift (OP_MOD < OP_LESSEQ).
    Conflict between rule 66 and token OP_GREATER resolved as shift (OP_MOD < OP_GREATER).
    Conflict between rule 66 and token OP_GREATEREQ resolved as shift (OP_MOD < OP_GREATEREQ).
    Conflict between rule 66 and token OP_AND resolved as shift (OP_MOD < OP_AND).
    Conflict between rule 66 and token OP_OR resolved as shift (OP_MOD < OP_OR).
    Conflict between rule 66 and token OP_ASSIGN_INCR resolved as shift (OP_MOD < OP_ASSIGN_INCR).
    Conflict between rule 66 and token OP_ASSIGN_DEC resolved as shift (OP_MOD < OP_ASSIGN_DEC).
    Conflict between rule 66 and token OP_ASSIGN_MUL resolved as shift (OP_MOD < OP_ASSIGN_MUL).
    Conflict between rule 66 and token OP_ASSIGN_DIV resolved as shift (OP_MOD < OP_ASSIGN_DIV).
    Conflict between rule 66 and token OP_ASSIGN_MOD resolved as shift (OP_MOD < OP_ASSIGN_MOD).


State 118

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   67           | expression OP_POW expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD]
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 67 (expression)

    Conflict between rule 67 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POW).
    Conflict between rule 67 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POW).
    Conflict between rule 67 and token OP_MUL resolved as reduce (OP_MUL < OP_POW).
    Conflict between rule 67 and token OP_DIV resolved as reduce (OP_DIV < OP_POW).
    Conflict between rule 67 and token OP_MOD resolved as reduce (OP_MOD < OP_POW).
    Conflict between rule 67 and token OP_POW resolved as shift (%right OP_POW).
    Conflict between rule 67 and token OP_EQ resolved as shift (OP_POW < OP_EQ).
    Conflict between rule 67 and token OP_NEQ resolved as shift (OP_POW < OP_NEQ).
    Conflict between rule 67 and token OP_LESS resolved as shift (OP_POW < OP_LESS).
    Conflict between rule 67 and token OP_LESSEQ resolved as shift (OP_POW < OP_LESSEQ).
    Conflict between rule 67 and token OP_GREATER resolved as shift (OP_POW < OP_GREATER).
    Conflict between rule 67 and token OP_GREATEREQ resolved as shift (OP_POW < OP_GREATEREQ).
    Conflict between rule 67 and token OP_AND resolved as shift (OP_POW < OP_AND).
    Conflict between rule 67 and token OP_OR resolved as shift (OP_POW < OP_OR).
    Conflict between rule 67 and token OP_ASSIGN_INCR resolved as shift (OP_POW < OP_ASSIGN_INCR).
    Conflict between rule 67 and token OP_ASSIGN_DEC resolved as shift (OP_POW < OP_ASSIGN_DEC).
    Conflict between rule 67 and token OP_ASSIGN_MUL resolved as shift (OP_POW < OP_ASSIGN_MUL).
    Conflict between rule 67 and token OP_ASSIGN_DIV resolved as shift (OP_POW < OP_ASSIGN_DIV).
    Conflict between rule 67 and token OP_ASSIGN_MOD resolved as shift (OP_POW < OP_ASSIGN_MOD).


State 119

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   68           | expression OP_EQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ]
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token OP_PLUS resolved as reduce (OP_PLUS < OP_EQ).
    Conflict between rule 68 and token OP_MINUS resolved as reduce (OP_MINUS < OP_EQ).
    Conflict between rule 68 and token OP_MUL resolved as reduce (OP_MUL < OP_EQ).
    Conflict between rule 68 and token OP_DIV resolved as reduce (OP_DIV < OP_EQ).
    Conflict between rule 68 and token OP_MOD resolved as reduce (OP_MOD < OP_EQ).
    Conflict between rule 68 and token OP_POW resolved as reduce (OP_POW < OP_EQ).
    Conflict between rule 68 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 68 and token OP_NEQ resolved as shift (OP_EQ < OP_NEQ).
    Conflict between rule 68 and token OP_LESS resolved as shift (OP_EQ < OP_LESS).
    Conflict between rule 68 and token OP_LESSEQ resolved as shift (OP_EQ < OP_LESSEQ).
    Conflict between rule 68 and token OP_GREATER resolved as shift (OP_EQ < OP_GREATER).
    Conflict between rule 68 and token OP_GREATEREQ resolved as shift (OP_EQ < OP_GREATEREQ).
    Conflict between rule 68 and token OP_AND resolved as shift (OP_EQ < OP_AND).
    Conflict between rule 68 and token OP_OR resolved as shift (OP_EQ < OP_OR).
    Conflict between rule 68 and token OP_ASSIGN_INCR resolved as shift (OP_EQ < OP_ASSIGN_INCR).
    Conflict between rule 68 and token OP_ASSIGN_DEC resolved as shift (OP_EQ < OP_ASSIGN_DEC).
    Conflict between rule 68 and token OP_ASSIGN_MUL resolved as shift (OP_EQ < OP_ASSIGN_MUL).
    Conflict between rule 68 and token OP_ASSIGN_DIV resolved as shift (OP_EQ < OP_ASSIGN_DIV).
    Conflict between rule 68 and token OP_ASSIGN_MOD resolved as shift (OP_EQ < OP_ASSIGN_MOD).


State 120

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   69           | expression OP_NEQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ]
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token OP_PLUS resolved as reduce (OP_PLUS < OP_NEQ).
    Conflict between rule 69 and token OP_MINUS resolved as reduce (OP_MINUS < OP_NEQ).
    Conflict between rule 69 and token OP_MUL resolved as reduce (OP_MUL < OP_NEQ).
    Conflict between rule 69 and token OP_DIV resolved as reduce (OP_DIV < OP_NEQ).
    Conflict between rule 69 and token OP_MOD resolved as reduce (OP_MOD < OP_NEQ).
    Conflict between rule 69 and token OP_POW resolved as reduce (OP_POW < OP_NEQ).
    Conflict between rule 69 and token OP_EQ resolved as reduce (OP_EQ < OP_NEQ).
    Conflict between rule 69 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 69 and token OP_LESS resolved as shift (OP_NEQ < OP_LESS).
    Conflict between rule 69 and token OP_LESSEQ resolved as shift (OP_NEQ < OP_LESSEQ).
    Conflict between rule 69 and token OP_GREATER resolved as shift (OP_NEQ < OP_GREATER).
    Conflict between rule 69 and token OP_GREATEREQ resolved as shift (OP_NEQ < OP_GREATEREQ).
    Conflict between rule 69 and token OP_AND resolved as shift (OP_NEQ < OP_AND).
    Conflict between rule 69 and token OP_OR resolved as shift (OP_NEQ < OP_OR).
    Conflict between rule 69 and token OP_ASSIGN_INCR resolved as shift (OP_NEQ < OP_ASSIGN_INCR).
    Conflict between rule 69 and token OP_ASSIGN_DEC resolved as shift (OP_NEQ < OP_ASSIGN_DEC).
    Conflict between rule 69 and token OP_ASSIGN_MUL resolved as shift (OP_NEQ < OP_ASSIGN_MUL).
    Conflict between rule 69 and token OP_ASSIGN_DIV resolved as shift (OP_NEQ < OP_ASSIGN_DIV).
    Conflict between rule 69 and token OP_ASSIGN_MOD resolved as shift (OP_NEQ < OP_ASSIGN_MOD).


State 121

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   70           | expression OP_LESS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS]
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token OP_PLUS resolved as reduce (OP_PLUS < OP_LESS).
    Conflict between rule 70 and token OP_MINUS resolved as reduce (OP_MINUS < OP_LESS).
    Conflict between rule 70 and token OP_MUL resolved as reduce (OP_MUL < OP_LESS).
    Conflict between rule 70 and token OP_DIV resolved as reduce (OP_DIV < OP_LESS).
    Conflict between rule 70 and token OP_MOD resolved as reduce (OP_MOD < OP_LESS).
    Conflict between rule 70 and token OP_POW resolved as reduce (OP_POW < OP_LESS).
    Conflict between rule 70 and token OP_EQ resolved as reduce (OP_EQ < OP_LESS).
    Conflict between rule 70 and token OP_NEQ resolved as reduce (OP_NEQ < OP_LESS).
    Conflict between rule 70 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 70 and token OP_LESSEQ resolved as shift (OP_LESS < OP_LESSEQ).
    Conflict between rule 70 and token OP_GREATER resolved as shift (OP_LESS < OP_GREATER).
    Conflict between rule 70 and token OP_GREATEREQ resolved as shift (OP_LESS < OP_GREATEREQ).
    Conflict between rule 70 and token OP_AND resolved as shift (OP_LESS < OP_AND).
    Conflict between rule 70 and token OP_OR resolved as shift (OP_LESS < OP_OR).
    Conflict between rule 70 and token OP_ASSIGN_INCR resolved as shift (OP_LESS < OP_ASSIGN_INCR).
    Conflict between rule 70 and token OP_ASSIGN_DEC resolved as shift (OP_LESS < OP_ASSIGN_DEC).
    Conflict between rule 70 and token OP_ASSIGN_MUL resolved as shift (OP_LESS < OP_ASSIGN_MUL).
    Conflict between rule 70 and token OP_ASSIGN_DIV resolved as shift (OP_LESS < OP_ASSIGN_DIV).
    Conflict between rule 70 and token OP_ASSIGN_MOD resolved as shift (OP_LESS < OP_ASSIGN_MOD).


State 122

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   71           | expression OP_LESSEQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ]
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token OP_PLUS resolved as reduce (OP_PLUS < OP_LESSEQ).
    Conflict between rule 71 and token OP_MINUS resolved as reduce (OP_MINUS < OP_LESSEQ).
    Conflict between rule 71 and token OP_MUL resolved as reduce (OP_MUL < OP_LESSEQ).
    Conflict between rule 71 and token OP_DIV resolved as reduce (OP_DIV < OP_LESSEQ).
    Conflict between rule 71 and token OP_MOD resolved as reduce (OP_MOD < OP_LESSEQ).
    Conflict between rule 71 and token OP_POW resolved as reduce (OP_POW < OP_LESSEQ).
    Conflict between rule 71 and token OP_EQ resolved as reduce (OP_EQ < OP_LESSEQ).
    Conflict between rule 71 and token OP_NEQ resolved as reduce (OP_NEQ < OP_LESSEQ).
    Conflict between rule 71 and token OP_LESS resolved as reduce (OP_LESS < OP_LESSEQ).
    Conflict between rule 71 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 71 and token OP_GREATER resolved as shift (OP_LESSEQ < OP_GREATER).
    Conflict between rule 71 and token OP_GREATEREQ resolved as shift (OP_LESSEQ < OP_GREATEREQ).
    Conflict between rule 71 and token OP_AND resolved as shift (OP_LESSEQ < OP_AND).
    Conflict between rule 71 and token OP_OR resolved as shift (OP_LESSEQ < OP_OR).
    Conflict between rule 71 and token OP_ASSIGN_INCR resolved as shift (OP_LESSEQ < OP_ASSIGN_INCR).
    Conflict between rule 71 and token OP_ASSIGN_DEC resolved as shift (OP_LESSEQ < OP_ASSIGN_DEC).
    Conflict between rule 71 and token OP_ASSIGN_MUL resolved as shift (OP_LESSEQ < OP_ASSIGN_MUL).
    Conflict between rule 71 and token OP_ASSIGN_DIV resolved as shift (OP_LESSEQ < OP_ASSIGN_DIV).
    Conflict between rule 71 and token OP_ASSIGN_MOD resolved as shift (OP_LESSEQ < OP_ASSIGN_MOD).


State 123

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   72           | expression OP_GREATER expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER]
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token OP_PLUS resolved as reduce (OP_PLUS < OP_GREATER).
    Conflict between rule 72 and token OP_MINUS resolved as reduce (OP_MINUS < OP_GREATER).
    Conflict between rule 72 and token OP_MUL resolved as reduce (OP_MUL < OP_GREATER).
    Conflict between rule 72 and token OP_DIV resolved as reduce (OP_DIV < OP_GREATER).
    Conflict between rule 72 and token OP_MOD resolved as reduce (OP_MOD < OP_GREATER).
    Conflict between rule 72 and token OP_POW resolved as reduce (OP_POW < OP_GREATER).
    Conflict between rule 72 and token OP_EQ resolved as reduce (OP_EQ < OP_GREATER).
    Conflict between rule 72 and token OP_NEQ resolved as reduce (OP_NEQ < OP_GREATER).
    Conflict between rule 72 and token OP_LESS resolved as reduce (OP_LESS < OP_GREATER).
    Conflict between rule 72 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_GREATER).
    Conflict between rule 72 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 72 and token OP_GREATEREQ resolved as shift (OP_GREATER < OP_GREATEREQ).
    Conflict between rule 72 and token OP_AND resolved as shift (OP_GREATER < OP_AND).
    Conflict between rule 72 and token OP_OR resolved as shift (OP_GREATER < OP_OR).
    Conflict between rule 72 and token OP_ASSIGN_INCR resolved as shift (OP_GREATER < OP_ASSIGN_INCR).
    Conflict between rule 72 and token OP_ASSIGN_DEC resolved as shift (OP_GREATER < OP_ASSIGN_DEC).
    Conflict between rule 72 and token OP_ASSIGN_MUL resolved as shift (OP_GREATER < OP_ASSIGN_MUL).
    Conflict between rule 72 and token OP_ASSIGN_DIV resolved as shift (OP_GREATER < OP_ASSIGN_DIV).
    Conflict between rule 72 and token OP_ASSIGN_MOD resolved as shift (OP_GREATER < OP_ASSIGN_MOD).


State 124

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   73           | expression OP_GREATEREQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ]
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token OP_PLUS resolved as reduce (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 73 and token OP_MINUS resolved as reduce (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 73 and token OP_MUL resolved as reduce (OP_MUL < OP_GREATEREQ).
    Conflict between rule 73 and token OP_DIV resolved as reduce (OP_DIV < OP_GREATEREQ).
    Conflict between rule 73 and token OP_MOD resolved as reduce (OP_MOD < OP_GREATEREQ).
    Conflict between rule 73 and token OP_POW resolved as reduce (OP_POW < OP_GREATEREQ).
    Conflict between rule 73 and token OP_EQ resolved as reduce (OP_EQ < OP_GREATEREQ).
    Conflict between rule 73 and token OP_NEQ resolved as reduce (OP_NEQ < OP_GREATEREQ).
    Conflict between rule 73 and token OP_LESS resolved as reduce (OP_LESS < OP_GREATEREQ).
    Conflict between rule 73 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_GREATEREQ).
    Conflict between rule 73 and token OP_GREATER resolved as reduce (OP_GREATER < OP_GREATEREQ).
    Conflict between rule 73 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 73 and token OP_AND resolved as shift (OP_GREATEREQ < OP_AND).
    Conflict between rule 73 and token OP_OR resolved as shift (OP_GREATEREQ < OP_OR).
    Conflict between rule 73 and token OP_ASSIGN_INCR resolved as shift (OP_GREATEREQ < OP_ASSIGN_INCR).
    Conflict between rule 73 and token OP_ASSIGN_DEC resolved as shift (OP_GREATEREQ < OP_ASSIGN_DEC).
    Conflict between rule 73 and token OP_ASSIGN_MUL resolved as shift (OP_GREATEREQ < OP_ASSIGN_MUL).
    Conflict between rule 73 and token OP_ASSIGN_DIV resolved as shift (OP_GREATEREQ < OP_ASSIGN_DIV).
    Conflict between rule 73 and token OP_ASSIGN_MOD resolved as shift (OP_GREATEREQ < OP_ASSIGN_MOD).


State 125

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   74           | expression OP_AND expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND]
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token OP_PLUS resolved as reduce (OP_PLUS < OP_AND).
    Conflict between rule 74 and token OP_MINUS resolved as reduce (OP_MINUS < OP_AND).
    Conflict between rule 74 and token OP_MUL resolved as reduce (OP_MUL < OP_AND).
    Conflict between rule 74 and token OP_DIV resolved as reduce (OP_DIV < OP_AND).
    Conflict between rule 74 and token OP_MOD resolved as reduce (OP_MOD < OP_AND).
    Conflict between rule 74 and token OP_POW resolved as reduce (OP_POW < OP_AND).
    Conflict between rule 74 and token OP_EQ resolved as reduce (OP_EQ < OP_AND).
    Conflict between rule 74 and token OP_NEQ resolved as reduce (OP_NEQ < OP_AND).
    Conflict between rule 74 and token OP_LESS resolved as reduce (OP_LESS < OP_AND).
    Conflict between rule 74 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_AND).
    Conflict between rule 74 and token OP_GREATER resolved as reduce (OP_GREATER < OP_AND).
    Conflict between rule 74 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_AND).
    Conflict between rule 74 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 74 and token OP_OR resolved as shift (OP_AND < OP_OR).
    Conflict between rule 74 and token OP_ASSIGN_INCR resolved as shift (OP_AND < OP_ASSIGN_INCR).
    Conflict between rule 74 and token OP_ASSIGN_DEC resolved as shift (OP_AND < OP_ASSIGN_DEC).
    Conflict between rule 74 and token OP_ASSIGN_MUL resolved as shift (OP_AND < OP_ASSIGN_MUL).
    Conflict between rule 74 and token OP_ASSIGN_DIV resolved as shift (OP_AND < OP_ASSIGN_DIV).
    Conflict between rule 74 and token OP_ASSIGN_MOD resolved as shift (OP_AND < OP_ASSIGN_MOD).


State 126

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   75           | expression OP_OR expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token OP_PLUS resolved as reduce (OP_PLUS < OP_OR).
    Conflict between rule 75 and token OP_MINUS resolved as reduce (OP_MINUS < OP_OR).
    Conflict between rule 75 and token OP_MUL resolved as reduce (OP_MUL < OP_OR).
    Conflict between rule 75 and token OP_DIV resolved as reduce (OP_DIV < OP_OR).
    Conflict between rule 75 and token OP_MOD resolved as reduce (OP_MOD < OP_OR).
    Conflict between rule 75 and token OP_POW resolved as reduce (OP_POW < OP_OR).
    Conflict between rule 75 and token OP_EQ resolved as reduce (OP_EQ < OP_OR).
    Conflict between rule 75 and token OP_NEQ resolved as reduce (OP_NEQ < OP_OR).
    Conflict between rule 75 and token OP_LESS resolved as reduce (OP_LESS < OP_OR).
    Conflict between rule 75 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_OR).
    Conflict between rule 75 and token OP_GREATER resolved as reduce (OP_GREATER < OP_OR).
    Conflict between rule 75 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_OR).
    Conflict between rule 75 and token OP_AND resolved as reduce (OP_AND < OP_OR).
    Conflict between rule 75 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 75 and token OP_ASSIGN_INCR resolved as shift (OP_OR < OP_ASSIGN_INCR).
    Conflict between rule 75 and token OP_ASSIGN_DEC resolved as shift (OP_OR < OP_ASSIGN_DEC).
    Conflict between rule 75 and token OP_ASSIGN_MUL resolved as shift (OP_OR < OP_ASSIGN_MUL).
    Conflict between rule 75 and token OP_ASSIGN_DIV resolved as shift (OP_OR < OP_ASSIGN_DIV).
    Conflict between rule 75 and token OP_ASSIGN_MOD resolved as shift (OP_OR < OP_ASSIGN_MOD).


State 127

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   77           | expression OP_ASSIGN_INCR expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_ASSIGN_INCR resolved as shift (%right OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_ASSIGN_DEC resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_DEC).
    Conflict between rule 77 and token OP_ASSIGN_MUL resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_MUL).
    Conflict between rule 77 and token OP_ASSIGN_DIV resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_DIV).
    Conflict between rule 77 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_MOD).


State 128

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   78           | expression OP_ASSIGN_DEC expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR]
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_DEC  shift, and go to state 85
    OP_ASSIGN_MUL  shift, and go to state 86
    OP_ASSIGN_DIV  shift, and go to state 87
    OP_ASSIGN_MOD  shift, and go to state 88

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_ASSIGN_DEC resolved as shift (%right OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_ASSIGN_MUL resolved as shift (OP_ASSIGN_DEC < OP_ASSIGN_MUL).
    Conflict between rule 78 and token OP_ASSIGN_DIV resolved as shift (OP_ASSIGN_DEC < OP_ASSIGN_DIV).
    Conflict between rule 78 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_DEC < OP_ASSIGN_MOD).


State 129

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   79           | expression OP_ASSIGN_MUL expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC]
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_MUL  shift, and go to state 86
    OP_ASSIGN_DIV  shift, and go to state 87
    OP_ASSIGN_MOD  shift, and go to state 88

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_ASSIGN_DEC resolved as reduce (OP_ASSIGN_DEC < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_ASSIGN_MUL resolved as shift (%right OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_ASSIGN_DIV resolved as shift (OP_ASSIGN_MUL < OP_ASSIGN_DIV).
    Conflict between rule 79 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_MUL < OP_ASSIGN_MOD).


State 130

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   80           | expression OP_ASSIGN_DIV expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL]
   81           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_DIV  shift, and go to state 87
    OP_ASSIGN_MOD  shift, and go to state 88

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_ASSIGN_DEC resolved as reduce (OP_ASSIGN_DEC < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_ASSIGN_MUL resolved as reduce (OP_ASSIGN_MUL < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_ASSIGN_DIV resolved as shift (%right OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_DIV < OP_ASSIGN_MOD).


State 131

   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression
   81           | expression OP_ASSIGN_MOD expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL, OP_ASSIGN_DIV]

    OP_ASSIGN_MOD  shift, and go to state 88

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_ASSIGN_DEC resolved as reduce (OP_ASSIGN_DEC < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_ASSIGN_MUL resolved as reduce (OP_ASSIGN_MUL < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_ASSIGN_DIV resolved as reduce (OP_ASSIGN_DIV < OP_ASSIGN_MOD).
    Conflict between rule 81 and token OP_ASSIGN_MOD resolved as shift (%right OP_ASSIGN_MOD).


State 132

   19 var_decl_member: var_strings COMMA var_decl_member .

    $default  reduce using rule 19 (var_decl_member)


State 133

   20 var_decl_member: var_strings COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 134

   53 if_block: KW_IF . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

    L_PARENTHESIS  shift, and go to state 174


State 135

   50 for_loop: KW_FOR . TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR . TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

    TK_IDENTIFIER  shift, and go to state 175


State 136

   52 while_loop: KW_WHILE . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON

    L_PARENTHESIS  shift, and go to state 176


State 137

   39 statement: KW_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 177


State 138

   38 statement: KW_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 178


State 139

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 140

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 return_statement: KW_RETURN . SEMICOLON
   56                 | KW_RETURN . expression SEMICOLON
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    SEMICOLON      shift, and go to state 180
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 181
    syscall           go to state 43


State 141

   21 var_strings: TK_IDENTIFIER .  [COMMA, COLON, OP_ASSIGN]
   22            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   46 function_call: TK_IDENTIFIER . L_PARENTHESIS function_call_chain R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 66
    L_BRACKET      shift, and go to state 15

    $default  reduce using rule 21 (var_strings)


State 142

    7 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body . KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 182


State 143

   13 local_declarations: var_const_decl .

    $default  reduce using rule 13 (local_declarations)


State 144

    8 function_body: local_declarations . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: local_declarations . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_const_decl     go to state 183
    const_declaration  go to state 145
    var_decl           go to state 146
    var_strings        go to state 147
    statements         go to state 184
    statement          go to state 149
    assign_object      go to state 150
    function_call      go to state 151
    for_loop           go to state 152
    while_loop         go to state 153
    if_block           go to state 154
    return_statement   go to state 155
    syscall            go to state 156


State 145

   11 var_const_decl: const_declaration .

    $default  reduce using rule 11 (var_const_decl)


State 146

   10 var_const_decl: var_decl .

    $default  reduce using rule 10 (var_const_decl)


State 147

   17 var_decl: var_strings . COLON data_type SEMICOLON
   18         | var_strings . COMMA var_decl_member
   45 assign_object: var_strings . OP_ASSIGN expression
   90 syscall: var_strings . OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings . OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings . OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    COMMA      shift, and go to state 19
    COLON      shift, and go to state 20
    OP_ASSIGN  shift, and go to state 185


State 148

    9 function_body: statements .  [KW_ENDDEF]
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    $default  reduce using rule 9 (function_body)

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 149

   34 statements: statement .

    $default  reduce using rule 34 (statements)


State 150

   36 statement: assign_object . SEMICOLON

    SEMICOLON  shift, and go to state 188


State 151

   37 statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 189


State 152

   40 statement: for_loop .

    $default  reduce using rule 40 (statement)


State 153

   41 statement: while_loop .

    $default  reduce using rule 41 (statement)


State 154

   42 statement: if_block .

    $default  reduce using rule 42 (statement)


State 155

   43 statement: return_statement .

    $default  reduce using rule 43 (statement)


State 156

   44 statement: syscall .

    $default  reduce using rule 44 (statement)


State 157

   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET . COLON data_type

    COLON  shift, and go to state 190


State 158

   32 fun_parameter_member: TK_IDENTIFIER COLON data_type .

    $default  reduce using rule 32 (fun_parameter_member)


State 159

    8 function_body: . local_declarations statements
    9              | . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: . local_declarations var_const_decl
   13                   | . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON . function_body KW_ENDDEF SEMICOLON
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    function_body       go to state 191
    var_const_decl      go to state 143
    local_declarations  go to state 144
    const_declaration   go to state 145
    var_decl            go to state 146
    var_strings         go to state 147
    statements          go to state 148
    statement           go to state 149
    assign_object       go to state 150
    function_call       go to state 151
    for_loop            go to state 152
    while_loop          go to state 153
    if_block            go to state 154
    return_statement    go to state 155
    syscall             go to state 156


State 160

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS . OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON

    OP_GREATER  shift, and go to state 192


State 161

   29 fun_parameters: fun_parameter_member COMMA fun_parameters .

    $default  reduce using rule 29 (fun_parameters)


State 162

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   57                 | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   58                 | TK_IDENTIFIER L_BRACKET . R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    R_BRACKET      shift, and go to state 108
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 193
    syscall           go to state 43


State 163

   93 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 194


State 164

   95 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 195


State 165

   94 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 196


State 166

   96 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 167

   46 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS .

    $default  reduce using rule 46 (function_call)


State 168

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   48 function_call_chain: function_call_chain COMMA . expression
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 198
    syscall           go to state 43


State 169

   22 var_strings: TK_IDENTIFIER L_BRACKET expression R_BRACKET .  [OP_ASSIGN]
   57 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL, OP_ASSIGN_DIV, OP_ASSIGN_MOD]

    OP_ASSIGN  reduce using rule 22 (var_strings)
    $default   reduce using rule 57 (array_expression)


State 170

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 199


State 171

   92 syscall: var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 200


State 172

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 201


State 173

   20 var_decl_member: var_strings COLON data_type SEMICOLON .

    $default  reduce using rule 20 (var_decl_member)


State 174

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   53 if_block: KW_IF L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 202
    syscall           go to state 43


State 175

   50 for_loop: KW_FOR TK_IDENTIFIER . KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER . KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 203


State 176

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   52 while_loop: KW_WHILE L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 204
    syscall           go to state 43


State 177

   39 statement: KW_BREAK SEMICOLON .

    $default  reduce using rule 39 (statement)


State 178

   38 statement: KW_CONTINUE SEMICOLON .

    $default  reduce using rule 38 (statement)


State 179

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON .

    $default  reduce using rule 6 (program_main)


State 180

   55 return_statement: KW_RETURN SEMICOLON .

    $default  reduce using rule 55 (return_statement)


State 181

   56 return_statement: KW_RETURN expression . SEMICOLON
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    SEMICOLON       shift, and go to state 205
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 182

    7 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 206


State 183

   12 local_declarations: local_declarations var_const_decl .

    $default  reduce using rule 12 (local_declarations)


State 184

    8 function_body: local_declarations statements .  [KW_ENDDEF]
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    $default  reduce using rule 8 (function_body)

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 185

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   45 assign_object: var_strings OP_ASSIGN . expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   90        | var_strings OP_ASSIGN . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings OP_ASSIGN . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings OP_ASSIGN . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_RSTR      shift, and go to state 110
    FUNC_RINT      shift, and go to state 111
    FUNC_RSCAL     shift, and go to state 112
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 207
    syscall           go to state 43


State 186

   45 assign_object: var_strings . OP_ASSIGN expression
   90 syscall: var_strings . OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings . OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings . OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    OP_ASSIGN  shift, and go to state 185


State 187

   35 statements: statements statement .

    $default  reduce using rule 35 (statements)


State 188

   36 statement: assign_object SEMICOLON .

    $default  reduce using rule 36 (statement)


State 189

   37 statement: function_call SEMICOLON .

    $default  reduce using rule 37 (statement)


State 190

   23 data_type: . KW_INTEGER
   24          | . KW_STR
   25          | . KW_REAL
   26          | . KW_BOOLEAN
   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET COLON . data_type

    KW_INTEGER  shift, and go to state 46
    KW_REAL     shift, and go to state 47
    KW_STR      shift, and go to state 48
    KW_BOOLEAN  shift, and go to state 49

    data_type  go to state 208


State 191

   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body . KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 209


State 192

   23 data_type: . KW_INTEGER
   24          | . KW_STR
   25          | . KW_REAL
   26          | . KW_BOOLEAN
   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER . data_type COLON function_body KW_ENDDEF SEMICOLON

    KW_INTEGER  shift, and go to state 46
    KW_REAL     shift, and go to state 47
    KW_STR      shift, and go to state 48
    KW_BOOLEAN  shift, and go to state 49

    data_type  go to state 210


State 193

   57 array_expression: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 211
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 194

   93 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 93 (syscall)


State 195

   95 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 95 (syscall)


State 196

   94 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 94 (syscall)


State 197

   96 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 96 (syscall)


State 198

   48 function_call_chain: function_call_chain COMMA expression .  [R_PARENTHESIS, COMMA]
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 48 (function_call_chain)


State 199

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 212


State 200

   92 syscall: var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 213


State 201

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 214


State 202

   53 if_block: KW_IF L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_PARENTHESIS   shift, and go to state 215
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 203

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN . L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN . L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

    L_BRACKET  shift, and go to state 216


State 204

   52 while_loop: KW_WHILE L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_PARENTHESIS   shift, and go to state 217
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 205

   56 return_statement: KW_RETURN expression SEMICOLON .

    $default  reduce using rule 56 (return_statement)


State 206

    7 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON .

    $default  reduce using rule 7 (program_main)


State 207

   45 assign_object: var_strings OP_ASSIGN expression .  [SEMICOLON]
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88

    $default  reduce using rule 45 (assign_object)


State 208

   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type .

    $default  reduce using rule 33 (fun_parameter_member)


State 209

   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 218


State 210

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type . COLON function_body KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 219


State 211

   57 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET .

    $default  reduce using rule 57 (array_expression)


State 212

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 90 (syscall)


State 213

   92 syscall: var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 92 (syscall)


State 214

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 91 (syscall)


State 215

   53 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

    COLON  shift, and go to state 220


State 216

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET . expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET . expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 221
    syscall           go to state 43


State 217

   52 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 222


State 218

   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON .

    $default  reduce using rule 28 (fun_definition)


State 219

    8 function_body: . local_declarations statements
    9              | . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: . local_declarations var_const_decl
   13                   | . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_strings COLON data_type SEMICOLON
   18         | . var_strings COMMA var_decl_member
   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON . function_body KW_ENDDEF SEMICOLON
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    function_body       go to state 223
    var_const_decl      go to state 143
    local_declarations  go to state 144
    const_declaration   go to state 145
    var_decl            go to state 146
    var_strings         go to state 147
    statements          go to state 148
    statement           go to state 149
    assign_object       go to state 150
    function_call       go to state 151
    for_loop            go to state 152
    while_loop          go to state 153
    if_block            go to state 154
    return_statement    go to state 155
    syscall             go to state 156


State 220

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   53         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statements        go to state 224
    statement         go to state 149
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 221

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression . COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression . COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    COLON           shift, and go to state 225
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 222

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   52           | KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statements        go to state 226
    statement         go to state 149
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 223

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body . KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 227


State 224

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   53         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_ELSE        shift, and go to state 228
    KW_ENDIF       shift, and go to state 229
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 225

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON . expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON . expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 230
    syscall           go to state 43


State 226

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   52           | KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_ENDWHILE    shift, and go to state 231
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 227

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 232


State 228

   54 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE . COLON statements KW_ENDIF SEMICOLON

    COLON  shift, and go to state 233


State 229

   53 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 234


State 230

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression . R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression . COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 235
    COLON           shift, and go to state 236
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 231

   52 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE . SEMICOLON

    SEMICOLON  shift, and go to state 237


State 232

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON .

    $default  reduce using rule 27 (fun_definition)


State 233

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON . statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statements        go to state 238
    statement         go to state 149
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 234

   53 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON .

    $default  reduce using rule 53 (if_block)


State 235

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET . COLON statements KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 239


State 236

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   51 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON . expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   58                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   59 expression: . OP_MINUS expression
   60           | . OP_PLUS expression
   61           | . L_PARENTHESIS expression R_PARENTHESIS
   62           | . expression OP_PLUS expression
   63           | . expression OP_MINUS expression
   64           | . expression OP_MUL expression
   65           | . expression OP_DIV expression
   66           | . expression OP_MOD expression
   67           | . expression OP_POW expression
   68           | . expression OP_EQ expression
   69           | . expression OP_NEQ expression
   70           | . expression OP_LESS expression
   71           | . expression OP_LESSEQ expression
   72           | . expression OP_GREATER expression
   73           | . expression OP_GREATEREQ expression
   74           | . expression OP_AND expression
   75           | . expression OP_OR expression
   76           | . OP_NOT expression
   77           | . expression OP_ASSIGN_INCR expression
   78           | . expression OP_ASSIGN_DEC expression
   79           | . expression OP_ASSIGN_MUL expression
   80           | . expression OP_ASSIGN_DIV expression
   81           | . expression OP_ASSIGN_MOD expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 26
    KW_FALSE       shift, and go to state 27
    L_PARENTHESIS  shift, and go to state 28
    OP_PLUS        shift, and go to state 29
    OP_MINUS       shift, and go to state 30
    OP_NOT         shift, and go to state 31
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    TK_INTEGER     shift, and go to state 37
    TK_REAL        shift, and go to state 38

    var_strings       go to state 39
    function_call     go to state 40
    array_expression  go to state 41
    expression        go to state 240
    syscall           go to state 43


State 237

   52 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON .

    $default  reduce using rule 52 (while_loop)


State 238

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   54         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements . KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_ENDIF       shift, and go to state 241
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 239

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   50         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON . statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statements        go to state 242
    statement         go to state 149
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 240

   51 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression . R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   62 expression: expression . OP_PLUS expression
   63           | expression . OP_MINUS expression
   64           | expression . OP_MUL expression
   65           | expression . OP_DIV expression
   66           | expression . OP_MOD expression
   67           | expression . OP_POW expression
   68           | expression . OP_EQ expression
   69           | expression . OP_NEQ expression
   70           | expression . OP_LESS expression
   71           | expression . OP_LESSEQ expression
   72           | expression . OP_GREATER expression
   73           | expression . OP_GREATEREQ expression
   74           | expression . OP_AND expression
   75           | expression . OP_OR expression
   77           | expression . OP_ASSIGN_INCR expression
   78           | expression . OP_ASSIGN_DEC expression
   79           | expression . OP_ASSIGN_MUL expression
   80           | expression . OP_ASSIGN_DIV expression
   81           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 243
    OP_PLUS         shift, and go to state 70
    OP_MINUS        shift, and go to state 71
    OP_MUL          shift, and go to state 72
    OP_DIV          shift, and go to state 73
    OP_MOD          shift, and go to state 74
    OP_POW          shift, and go to state 75
    OP_EQ           shift, and go to state 76
    OP_NEQ          shift, and go to state 77
    OP_LESS         shift, and go to state 78
    OP_LESSEQ       shift, and go to state 79
    OP_GREATER      shift, and go to state 80
    OP_GREATEREQ    shift, and go to state 81
    OP_AND          shift, and go to state 82
    OP_OR           shift, and go to state 83
    OP_ASSIGN_INCR  shift, and go to state 84
    OP_ASSIGN_DEC   shift, and go to state 85
    OP_ASSIGN_MUL   shift, and go to state 86
    OP_ASSIGN_DIV   shift, and go to state 87
    OP_ASSIGN_MOD   shift, and go to state 88


State 241

   54 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 244


State 242

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   50         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements . KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_ENDFOR      shift, and go to state 245
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 243

   51 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET . COLON statements KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 246


State 244

   54 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON .

    $default  reduce using rule 54 (if_block)


State 245

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR . SEMICOLON

    SEMICOLON  shift, and go to state 247


State 246

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON . statements KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statements        go to state 248
    statement         go to state 149
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 247

   50 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON .

    $default  reduce using rule 50 (for_loop)


State 248

   21 var_strings: . TK_IDENTIFIER
   22            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   51         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements . KW_ENDFOR SEMICOLON
   52 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   53 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   54         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   55 return_statement: . KW_RETURN SEMICOLON
   56                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 134
    KW_FOR         shift, and go to state 135
    KW_ENDFOR      shift, and go to state 249
    KW_WHILE       shift, and go to state 136
    KW_BREAK       shift, and go to state 137
    KW_CONTINUE    shift, and go to state 138
    KW_RETURN      shift, and go to state 140
    FUNC_WSTR      shift, and go to state 32
    FUNC_WINT      shift, and go to state 33
    FUNC_WSCAL     shift, and go to state 34
    FUNC_WRT       shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 141

    var_strings       go to state 186
    statement         go to state 187
    assign_object     go to state 150
    function_call     go to state 151
    for_loop          go to state 152
    while_loop        go to state 153
    if_block          go to state 154
    return_statement  go to state 155
    syscall           go to state 156


State 249

   51 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR . SEMICOLON

    SEMICOLON  shift, and go to state 250


State 250

   51 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON .

    $default  reduce using rule 51 (for_loop)
