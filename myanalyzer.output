Nonterminals useless in grammar

    data_format


Terminals unused in grammar

    KW_ENDFOR


Rules useless in grammar

  104 data_format: TK_INTEGER
  105            | TK_REAL
  106            | TK_STRING
  107            | KW_TRUE
  108            | KW_FALSE


State 21 conflicts: 3 reduce/reduce
State 23 conflicts: 3 reduce/reduce
State 25 conflicts: 3 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: program_start

    2 program_start: program_main
    3              | global_constant_decl program_start
    4              | global_variable_decl program_start
    5              | global_function_decl program_start

    6 global_constant_decl: global_constant_decl const_declaration
    7                     | const_declaration

    8 global_function_decl: global_function_decl fun_definition
    9                     | fun_definition

   10 global_variable_decl: global_variable_decl var_decl
   11                     | var_decl

   12 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF

   14 function_body: local_declarations statements
   15              | statements

   16 var_const_decl: var_decl
   17               | const_declaration

   18 local_declarations: local_declarations var_const_decl
   19                   | var_const_decl

   20 const_declaration: KW_CONST const_assign COLON data_type SEMICOLON

   21 const_assign: TK_IDENTIFIER OP_ASSIGN expression
   22             | TK_IDENTIFIER OP_ASSIGN TK_STRING

   23 var_decl: var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | var_strings COLON data_type SEMICOLON

   25 var_strings: TK_IDENTIFIER
   26            | TK_IDENTIFIER L_BRACKET expression R_BRACKET

   27 data_type: KW_INTEGER
   28          | KW_STR
   29          | KW_REAL
   30          | KW_BOOLEAN

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

   33 fun_parameters: fun_parameter_member COMMA fun_parameters
   34               | fun_parameter_member
   35               | %empty

   36 fun_parameter_member: TK_IDENTIFIER COLON data_type
   37                     | TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

   38 statements: statement
   39           | statements statement

   40 statement: assign_object SEMICOLON
   41          | function_call SEMICOLON
   42          | KW_CONTINUE SEMICOLON
   43          | KW_BREAK SEMICOLON
   44          | for_loop SEMICOLON
   45          | while_loop SEMICOLON
   46          | if_block SEMICOLON
   47          | return_statement
   48          | syscall

   49 assign_object: var_strings OP_ASSIGN expression

   50 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS

   51 function_call_chain: %empty
   52                    | function_call_chain COMMA expression
   53                    | expression

   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF

   56 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON

   57 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

   59 return_statement: KW_RETURN SEMICOLON
   60                 | KW_RETURN expression SEMICOLON

   61 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | TK_IDENTIFIER L_BRACKET R_BRACKET

   63 expression: OP_MINUS expression
   64           | OP_PLUS expression
   65           | L_PARENTHESIS expression R_PARENTHESIS
   66           | expression OP_PLUS expression
   67           | expression OP_MINUS expression
   68           | expression OP_MUL expression
   69           | expression OP_DIV expression
   70           | expression OP_MOD expression
   71           | expression OP_POW expression
   72           | expression OP_EQ expression
   73           | expression OP_NEQ expression
   74           | expression OP_LESS expression
   75           | expression OP_LESSEQ expression
   76           | expression OP_GREATER expression
   77           | expression OP_GREATEREQ expression
   78           | expression OP_AND expression
   79           | expression OP_OR expression
   80           | OP_NOT expression
   81           | expression OP_ASSIGN_INCR expression
   82           | expression OP_ASSIGN_DEC expression
   83           | expression OP_ASSIGN_MUL expression
   84           | expression OP_ASSIGN_DIV expression
   85           | expression OP_ASSIGN_MOD expression
   86           | array_expression
   87           | TK_IDENTIFIER
   88           | TK_INTEGER
   89           | TK_REAL
   90           | KW_TRUE
   91           | KW_FALSE
   92           | syscall
   93           | function_call

   94 syscall: FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

  101 syscall_write_content: TK_IDENTIFIER
  102                      | TK_STRING
  103                      | array_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    KW_INTEGER (258) 27
    KW_REAL (259) 29
    KW_STR (260) 28
    KW_BOOLEAN (261) 30
    KW_TRUE (262) 90
    KW_FALSE (263) 91
    KW_CONST (264) 20
    KW_IF (265) 57 58
    KW_ELSE (266) 58
    KW_ENDIF (267) 54 55 57 58
    KW_FOR (268) 54 55
    KW_IN (269) 54 55
    KW_ENDFOR (270)
    KW_WHILE (271) 56
    KW_ENDWHILE (272) 56
    KW_BREAK (273) 43
    KW_CONTINUE (274) 42
    KW_DEF (275) 12 13 31 32
    KW_ENDDEF (276) 12 13 31 32
    KW_MAIN (277) 12 13
    KW_RETURN (278) 59 60
    SEMICOLON (279) 20 23 24 40 41 42 43 44 45 46 56 57 58 59 60 94 95 96 97 98 99 100
    L_PARENTHESIS (280) 12 13 31 32 50 56 57 58 65 94 95 96 97 98 99 100
    R_PARENTHESIS (281) 12 13 31 32 50 56 57 58 65 94 95 96 97 98 99 100
    COMMA (282) 23 33 52
    L_BRACKET (283) 26 37 54 55 61 62
    R_BRACKET (284) 26 37 54 55 61 62
    COLON (285) 12 13 20 23 24 31 32 36 37 54 55 56 57 58
    OP_PLUS (286) 64 66
    OP_MINUS (287) 31 63 67
    OP_MUL (288) 68
    OP_DIV (289) 69
    OP_MOD (290) 70
    OP_POW (291) 71
    OP_EQ (292) 72
    OP_NEQ (293) 73
    OP_LESS (294) 74
    OP_LESSEQ (295) 75
    OP_GREATER (296) 31 76
    OP_GREATEREQ (297) 77
    OP_AND (298) 78
    OP_OR (299) 79
    OP_NOT (300) 80
    OP_ASSIGN (301) 21 22 49
    OP_ASSIGN_INCR (302) 81
    OP_ASSIGN_DEC (303) 82
    OP_ASSIGN_MUL (304) 83
    OP_ASSIGN_DIV (305) 84
    OP_ASSIGN_MOD (306) 85
    FUNC_RSTR (307) 94
    FUNC_RINT (308) 96
    FUNC_RSCAL (309) 95
    FUNC_WSTR (310) 97
    FUNC_WINT (311) 99
    FUNC_WSCAL (312) 98
    FUNC_WRT (313) 100
    TK_IDENTIFIER <str> (314) 21 22 25 26 31 32 36 37 50 54 55 61 62 87 101
    TK_INTEGER <str> (315) 88
    TK_REAL <str> (316) 89
    TK_STRING <str> (317) 22 102


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    input (64)
        on left: 1
        on right: 0
    program_start <str> (65)
        on left: 2 3 4 5
        on right: 1 3 4 5
    global_constant_decl <str> (66)
        on left: 6 7
        on right: 3 6
    global_function_decl <str> (67)
        on left: 8 9
        on right: 5 8
    global_variable_decl <str> (68)
        on left: 10 11
        on right: 4 10
    program_main <str> (69)
        on left: 12 13
        on right: 2
    function_body <str> (70)
        on left: 14 15
        on right: 13 31 32
    var_const_decl <str> (71)
        on left: 16 17
        on right: 18 19
    local_declarations <str> (72)
        on left: 18 19
        on right: 14 18
    const_declaration <str> (73)
        on left: 20
        on right: 6 7 17
    const_assign <str> (74)
        on left: 21 22
        on right: 20
    var_decl <str> (75)
        on left: 23 24
        on right: 10 11 16 23
    var_strings <str> (76)
        on left: 25 26
        on right: 23 24 49
    data_type <str> (77)
        on left: 27 28 29 30
        on right: 20 23 24 31 36 37
    fun_definition <str> (78)
        on left: 31 32
        on right: 8 9
    fun_parameters <str> (79)
        on left: 33 34 35
        on right: 31 32 33
    fun_parameter_member <str> (80)
        on left: 36 37
        on right: 33 34
    statements <str> (81)
        on left: 38 39
        on right: 14 15 39 54 55 56 57 58
    statement <str> (82)
        on left: 40 41 42 43 44 45 46 47 48
        on right: 38 39
    assign_object <str> (83)
        on left: 49
        on right: 40
    function_call <str> (84)
        on left: 50
        on right: 41 93
    function_call_chain <str> (85)
        on left: 51 52 53
        on right: 50 52
    for_loop <str> (86)
        on left: 54 55
        on right: 44
    while_loop <str> (87)
        on left: 56
        on right: 45
    if_block <str> (88)
        on left: 57 58
        on right: 46
    return_statement <str> (89)
        on left: 59 60
        on right: 47
    array_expression <str> (90)
        on left: 61 62
        on right: 86 103
    expression <str> (91)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
        on right: 21 26 49 52 53 54 55 56 57 58 60 61 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    syscall <str> (92)
        on left: 94 95 96 97 98 99 100
        on right: 48 92
    syscall_write_content <str> (93)
        on left: 101 102 103
        on right: 97 98 99 100


State 0

    0 $accept: . input $end
    1 input: . program_start
    2 program_start: . program_main
    3              | . global_constant_decl program_start
    4              | . global_variable_decl program_start
    5              | . global_function_decl program_start
    6 global_constant_decl: . global_constant_decl const_declaration
    7                     | . const_declaration
    8 global_function_decl: . global_function_decl fun_definition
    9                     | . fun_definition
   10 global_variable_decl: . global_variable_decl var_decl
   11                     | . var_decl
   12 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   31 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    input                 go to state 4
    program_start         go to state 5
    global_constant_decl  go to state 6
    global_function_decl  go to state 7
    global_variable_decl  go to state 8
    program_main          go to state 9
    const_declaration     go to state 10
    var_decl              go to state 11
    var_strings           go to state 12
    fun_definition        go to state 13


State 1

   20 const_declaration: KW_CONST . const_assign COLON data_type SEMICOLON
   21 const_assign: . TK_IDENTIFIER OP_ASSIGN expression
   22             | . TK_IDENTIFIER OP_ASSIGN TK_STRING

    TK_IDENTIFIER  shift, and go to state 14

    const_assign  go to state 15


State 2

   12 program_main: KW_DEF . KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | KW_DEF . KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF
   31 fun_definition: KW_DEF . TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | KW_DEF . TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

    KW_MAIN        shift, and go to state 16
    TK_IDENTIFIER  shift, and go to state 17


State 3

   25 var_strings: TK_IDENTIFIER .  [COMMA, COLON]
   26            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 18

    $default  reduce using rule 25 (var_strings)


State 4

    0 $accept: input . $end

    $end  shift, and go to state 19


State 5

    1 input: program_start .

    $default  reduce using rule 1 (input)


State 6

    2 program_start: . program_main
    3              | . global_constant_decl program_start
    3              | global_constant_decl . program_start
    4              | . global_variable_decl program_start
    5              | . global_function_decl program_start
    6 global_constant_decl: . global_constant_decl const_declaration
    6                     | global_constant_decl . const_declaration
    7                     | . const_declaration
    8 global_function_decl: . global_function_decl fun_definition
    9                     | . fun_definition
   10 global_variable_decl: . global_variable_decl var_decl
   11                     | . var_decl
   12 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   31 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start         go to state 20
    global_constant_decl  go to state 6
    global_function_decl  go to state 7
    global_variable_decl  go to state 8
    program_main          go to state 9
    const_declaration     go to state 21
    var_decl              go to state 11
    var_strings           go to state 12
    fun_definition        go to state 13


State 7

    2 program_start: . program_main
    3              | . global_constant_decl program_start
    4              | . global_variable_decl program_start
    5              | . global_function_decl program_start
    5              | global_function_decl . program_start
    6 global_constant_decl: . global_constant_decl const_declaration
    7                     | . const_declaration
    8 global_function_decl: . global_function_decl fun_definition
    8                     | global_function_decl . fun_definition
    9                     | . fun_definition
   10 global_variable_decl: . global_variable_decl var_decl
   11                     | . var_decl
   12 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   31 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start         go to state 22
    global_constant_decl  go to state 6
    global_function_decl  go to state 7
    global_variable_decl  go to state 8
    program_main          go to state 9
    const_declaration     go to state 10
    var_decl              go to state 11
    var_strings           go to state 12
    fun_definition        go to state 23


State 8

    2 program_start: . program_main
    3              | . global_constant_decl program_start
    4              | . global_variable_decl program_start
    4              | global_variable_decl . program_start
    5              | . global_function_decl program_start
    6 global_constant_decl: . global_constant_decl const_declaration
    7                     | . const_declaration
    8 global_function_decl: . global_function_decl fun_definition
    9                     | . fun_definition
   10 global_variable_decl: . global_variable_decl var_decl
   10                     | global_variable_decl . var_decl
   11                     | . var_decl
   12 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   31 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start         go to state 24
    global_constant_decl  go to state 6
    global_function_decl  go to state 7
    global_variable_decl  go to state 8
    program_main          go to state 9
    const_declaration     go to state 10
    var_decl              go to state 25
    var_strings           go to state 12
    fun_definition        go to state 13


State 9

    2 program_start: program_main .

    $default  reduce using rule 2 (program_start)


State 10

    7 global_constant_decl: const_declaration .

    $default  reduce using rule 7 (global_constant_decl)


State 11

   11 global_variable_decl: var_decl .

    $default  reduce using rule 11 (global_variable_decl)


State 12

   23 var_decl: var_strings . COMMA var_decl COLON data_type SEMICOLON
   24         | var_strings . COLON data_type SEMICOLON

    COMMA  shift, and go to state 26
    COLON  shift, and go to state 27


State 13

    9 global_function_decl: fun_definition .

    $default  reduce using rule 9 (global_function_decl)


State 14

   21 const_assign: TK_IDENTIFIER . OP_ASSIGN expression
   22             | TK_IDENTIFIER . OP_ASSIGN TK_STRING

    OP_ASSIGN  shift, and go to state 28


State 15

   20 const_declaration: KW_CONST const_assign . COLON data_type SEMICOLON

    COLON  shift, and go to state 29


State 16

   12 program_main: KW_DEF KW_MAIN . L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF
   13             | KW_DEF KW_MAIN . L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF

    L_PARENTHESIS  shift, and go to state 30


State 17

   31 fun_definition: KW_DEF TK_IDENTIFIER . L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | KW_DEF TK_IDENTIFIER . L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF

    L_PARENTHESIS  shift, and go to state 31


State 18

   26 var_strings: TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 50
    syscall           go to state 51


State 19

    0 $accept: input $end .

    $default  accept


State 20

    3 program_start: global_constant_decl program_start .

    $default  reduce using rule 3 (program_start)


State 21

    6 global_constant_decl: global_constant_decl const_declaration .  [KW_CONST, KW_DEF, TK_IDENTIFIER]
    7                     | const_declaration .  [KW_CONST, KW_DEF, TK_IDENTIFIER]

    KW_CONST       reduce using rule 6 (global_constant_decl)
    KW_CONST       [reduce using rule 7 (global_constant_decl)]
    KW_DEF         reduce using rule 6 (global_constant_decl)
    KW_DEF         [reduce using rule 7 (global_constant_decl)]
    TK_IDENTIFIER  reduce using rule 6 (global_constant_decl)
    TK_IDENTIFIER  [reduce using rule 7 (global_constant_decl)]
    $default       reduce using rule 6 (global_constant_decl)


State 22

    5 program_start: global_function_decl program_start .

    $default  reduce using rule 5 (program_start)


State 23

    8 global_function_decl: global_function_decl fun_definition .  [KW_CONST, KW_DEF, TK_IDENTIFIER]
    9                     | fun_definition .  [KW_CONST, KW_DEF, TK_IDENTIFIER]

    KW_CONST       reduce using rule 8 (global_function_decl)
    KW_CONST       [reduce using rule 9 (global_function_decl)]
    KW_DEF         reduce using rule 8 (global_function_decl)
    KW_DEF         [reduce using rule 9 (global_function_decl)]
    TK_IDENTIFIER  reduce using rule 8 (global_function_decl)
    TK_IDENTIFIER  [reduce using rule 9 (global_function_decl)]
    $default       reduce using rule 8 (global_function_decl)


State 24

    4 program_start: global_variable_decl program_start .

    $default  reduce using rule 4 (program_start)


State 25

   10 global_variable_decl: global_variable_decl var_decl .  [KW_CONST, KW_DEF, TK_IDENTIFIER]
   11                     | var_decl .  [KW_CONST, KW_DEF, TK_IDENTIFIER]

    KW_CONST       reduce using rule 10 (global_variable_decl)
    KW_CONST       [reduce using rule 11 (global_variable_decl)]
    KW_DEF         reduce using rule 10 (global_variable_decl)
    KW_DEF         [reduce using rule 11 (global_variable_decl)]
    TK_IDENTIFIER  reduce using rule 10 (global_variable_decl)
    TK_IDENTIFIER  [reduce using rule 11 (global_variable_decl)]
    $default       reduce using rule 10 (global_variable_decl)


State 26

   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   23         | var_strings COMMA . var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET

    TK_IDENTIFIER  shift, and go to state 3

    var_decl     go to state 52
    var_strings  go to state 12


State 27

   24 var_decl: var_strings COLON . data_type SEMICOLON
   27 data_type: . KW_INTEGER
   28          | . KW_STR
   29          | . KW_REAL
   30          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 53
    KW_REAL     shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    data_type  go to state 57


State 28

   21 const_assign: TK_IDENTIFIER OP_ASSIGN . expression
   22             | TK_IDENTIFIER OP_ASSIGN . TK_STRING
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47
    TK_STRING      shift, and go to state 58

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 59
    syscall           go to state 51


State 29

   20 const_declaration: KW_CONST const_assign COLON . data_type SEMICOLON
   27 data_type: . KW_INTEGER
   28          | . KW_STR
   29          | . KW_REAL
   30          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 53
    KW_REAL     shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    data_type  go to state 60


State 30

   12 program_main: KW_DEF KW_MAIN L_PARENTHESIS . R_PARENTHESIS COLON KW_ENDDEF
   13             | KW_DEF KW_MAIN L_PARENTHESIS . R_PARENTHESIS COLON function_body KW_ENDDEF

    R_PARENTHESIS  shift, and go to state 61


State 31

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS . fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | KW_DEF TK_IDENTIFIER L_PARENTHESIS . fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF
   33 fun_parameters: . fun_parameter_member COMMA fun_parameters
   34               | . fun_parameter_member
   35               | . %empty  [R_PARENTHESIS]
   36 fun_parameter_member: . TK_IDENTIFIER COLON data_type
   37                     | . TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

    TK_IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 35 (fun_parameters)

    fun_parameters        go to state 63
    fun_parameter_member  go to state 64


State 32

   90 expression: KW_TRUE .

    $default  reduce using rule 90 (expression)


State 33

   91 expression: KW_FALSE .

    $default  reduce using rule 91 (expression)


State 34

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   65           | L_PARENTHESIS . expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 65
    syscall           go to state 51


State 35

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   64           | OP_PLUS . expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 66
    syscall           go to state 51


State 36

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   63           | OP_MINUS . expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 67
    syscall           go to state 51


State 37

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   80           | OP_NOT . expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 68
    syscall           go to state 51


State 38

   94 syscall: FUNC_RSTR . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 69


State 39

   96 syscall: FUNC_RINT . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 70


State 40

   95 syscall: FUNC_RSCAL . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 71


State 41

   97 syscall: FUNC_WSTR . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 72


State 42

   99 syscall: FUNC_WINT . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 73


State 43

   98 syscall: FUNC_WSCAL . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 74


State 44

  100 syscall: FUNC_WRT . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 75


State 45

   50 function_call: TK_IDENTIFIER . L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   62                 | TK_IDENTIFIER . L_BRACKET R_BRACKET
   87 expression: TK_IDENTIFIER .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL, OP_ASSIGN_DIV, OP_ASSIGN_MOD]

    L_PARENTHESIS  shift, and go to state 76
    L_BRACKET      shift, and go to state 77

    $default  reduce using rule 87 (expression)


State 46

   88 expression: TK_INTEGER .

    $default  reduce using rule 88 (expression)


State 47

   89 expression: TK_REAL .

    $default  reduce using rule 89 (expression)


State 48

   93 expression: function_call .

    $default  reduce using rule 93 (expression)


State 49

   86 expression: array_expression .

    $default  reduce using rule 86 (expression)


State 50

   26 var_strings: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 78
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 51

   92 expression: syscall .

    $default  reduce using rule 92 (expression)


State 52

   23 var_decl: var_strings COMMA var_decl . COLON data_type SEMICOLON

    COLON  shift, and go to state 98


State 53

   27 data_type: KW_INTEGER .

    $default  reduce using rule 27 (data_type)


State 54

   29 data_type: KW_REAL .

    $default  reduce using rule 29 (data_type)


State 55

   28 data_type: KW_STR .

    $default  reduce using rule 28 (data_type)


State 56

   30 data_type: KW_BOOLEAN .

    $default  reduce using rule 30 (data_type)


State 57

   24 var_decl: var_strings COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 58

   22 const_assign: TK_IDENTIFIER OP_ASSIGN TK_STRING .

    $default  reduce using rule 22 (const_assign)


State 59

   21 const_assign: TK_IDENTIFIER OP_ASSIGN expression .  [COLON]
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 21 (const_assign)


State 60

   20 const_declaration: KW_CONST const_assign COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 61

   12 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS . COLON KW_ENDDEF
   13             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS . COLON function_body KW_ENDDEF

    COLON  shift, and go to state 101


State 62

   36 fun_parameter_member: TK_IDENTIFIER . COLON data_type
   37                     | TK_IDENTIFIER . L_BRACKET R_BRACKET COLON data_type

    L_BRACKET  shift, and go to state 102
    COLON      shift, and go to state 103


State 63

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters . R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters . R_PARENTHESIS COLON function_body KW_ENDDEF

    R_PARENTHESIS  shift, and go to state 104


State 64

   33 fun_parameters: fun_parameter_member . COMMA fun_parameters
   34               | fun_parameter_member .  [R_PARENTHESIS]

    COMMA  shift, and go to state 105

    $default  reduce using rule 34 (fun_parameters)


State 65

   65 expression: L_PARENTHESIS expression . R_PARENTHESIS
   66           | expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_PARENTHESIS   shift, and go to state 106
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 66

   64 expression: OP_PLUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS]
   66           | expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 64 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 64 and token OP_MUL resolved as shift (OP_PLUS < OP_MUL).
    Conflict between rule 64 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 64 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 64 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 64 and token OP_EQ resolved as shift (OP_PLUS < OP_EQ).
    Conflict between rule 64 and token OP_NEQ resolved as shift (OP_PLUS < OP_NEQ).
    Conflict between rule 64 and token OP_LESS resolved as shift (OP_PLUS < OP_LESS).
    Conflict between rule 64 and token OP_LESSEQ resolved as shift (OP_PLUS < OP_LESSEQ).
    Conflict between rule 64 and token OP_GREATER resolved as shift (OP_PLUS < OP_GREATER).
    Conflict between rule 64 and token OP_GREATEREQ resolved as shift (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 64 and token OP_AND resolved as shift (OP_PLUS < OP_AND).
    Conflict between rule 64 and token OP_OR resolved as shift (OP_PLUS < OP_OR).
    Conflict between rule 64 and token OP_ASSIGN_INCR resolved as shift (OP_PLUS < OP_ASSIGN_INCR).
    Conflict between rule 64 and token OP_ASSIGN_DEC resolved as shift (OP_PLUS < OP_ASSIGN_DEC).
    Conflict between rule 64 and token OP_ASSIGN_MUL resolved as shift (OP_PLUS < OP_ASSIGN_MUL).
    Conflict between rule 64 and token OP_ASSIGN_DIV resolved as shift (OP_PLUS < OP_ASSIGN_DIV).
    Conflict between rule 64 and token OP_ASSIGN_MOD resolved as shift (OP_PLUS < OP_ASSIGN_MOD).


State 67

   63 expression: OP_MINUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS]
   66           | expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 63 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 63 and token OP_MUL resolved as shift (OP_MINUS < OP_MUL).
    Conflict between rule 63 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 63 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 63 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 63 and token OP_EQ resolved as shift (OP_MINUS < OP_EQ).
    Conflict between rule 63 and token OP_NEQ resolved as shift (OP_MINUS < OP_NEQ).
    Conflict between rule 63 and token OP_LESS resolved as shift (OP_MINUS < OP_LESS).
    Conflict between rule 63 and token OP_LESSEQ resolved as shift (OP_MINUS < OP_LESSEQ).
    Conflict between rule 63 and token OP_GREATER resolved as shift (OP_MINUS < OP_GREATER).
    Conflict between rule 63 and token OP_GREATEREQ resolved as shift (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 63 and token OP_AND resolved as shift (OP_MINUS < OP_AND).
    Conflict between rule 63 and token OP_OR resolved as shift (OP_MINUS < OP_OR).
    Conflict between rule 63 and token OP_ASSIGN_INCR resolved as shift (OP_MINUS < OP_ASSIGN_INCR).
    Conflict between rule 63 and token OP_ASSIGN_DEC resolved as shift (OP_MINUS < OP_ASSIGN_DEC).
    Conflict between rule 63 and token OP_ASSIGN_MUL resolved as shift (OP_MINUS < OP_ASSIGN_MUL).
    Conflict between rule 63 and token OP_ASSIGN_DIV resolved as shift (OP_MINUS < OP_ASSIGN_DIV).
    Conflict between rule 63 and token OP_ASSIGN_MOD resolved as shift (OP_MINUS < OP_ASSIGN_MOD).


State 68

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   80           | OP_NOT expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token OP_PLUS resolved as reduce (OP_PLUS < OP_NOT).
    Conflict between rule 80 and token OP_MINUS resolved as reduce (OP_MINUS < OP_NOT).
    Conflict between rule 80 and token OP_MUL resolved as reduce (OP_MUL < OP_NOT).
    Conflict between rule 80 and token OP_DIV resolved as reduce (OP_DIV < OP_NOT).
    Conflict between rule 80 and token OP_MOD resolved as reduce (OP_MOD < OP_NOT).
    Conflict between rule 80 and token OP_POW resolved as reduce (OP_POW < OP_NOT).
    Conflict between rule 80 and token OP_EQ resolved as reduce (OP_EQ < OP_NOT).
    Conflict between rule 80 and token OP_NEQ resolved as reduce (OP_NEQ < OP_NOT).
    Conflict between rule 80 and token OP_LESS resolved as reduce (OP_LESS < OP_NOT).
    Conflict between rule 80 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_NOT).
    Conflict between rule 80 and token OP_GREATER resolved as reduce (OP_GREATER < OP_NOT).
    Conflict between rule 80 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_NOT).
    Conflict between rule 80 and token OP_AND resolved as reduce (OP_AND < OP_NOT).
    Conflict between rule 80 and token OP_OR resolved as reduce (OP_OR < OP_NOT).
    Conflict between rule 80 and token OP_ASSIGN_INCR resolved as shift (OP_NOT < OP_ASSIGN_INCR).
    Conflict between rule 80 and token OP_ASSIGN_DEC resolved as shift (OP_NOT < OP_ASSIGN_DEC).
    Conflict between rule 80 and token OP_ASSIGN_MUL resolved as shift (OP_NOT < OP_ASSIGN_MUL).
    Conflict between rule 80 and token OP_ASSIGN_DIV resolved as shift (OP_NOT < OP_ASSIGN_DIV).
    Conflict between rule 80 and token OP_ASSIGN_MOD resolved as shift (OP_NOT < OP_ASSIGN_MOD).


State 69

   94 syscall: FUNC_RSTR L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 107


State 70

   96 syscall: FUNC_RINT L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 108


State 71

   95 syscall: FUNC_RSCAL L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 109


State 72

   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   97 syscall: FUNC_WSTR L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
  101 syscall_write_content: . TK_IDENTIFIER
  102                      | . TK_STRING
  103                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 110
    TK_STRING      shift, and go to state 111

    array_expression       go to state 112
    syscall_write_content  go to state 113


State 73

   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   99 syscall: FUNC_WINT L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
  101 syscall_write_content: . TK_IDENTIFIER
  102                      | . TK_STRING
  103                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 110
    TK_STRING      shift, and go to state 111

    array_expression       go to state 112
    syscall_write_content  go to state 114


State 74

   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   98 syscall: FUNC_WSCAL L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
  101 syscall_write_content: . TK_IDENTIFIER
  102                      | . TK_STRING
  103                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 110
    TK_STRING      shift, and go to state 111

    array_expression       go to state 112
    syscall_write_content  go to state 115


State 75

   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
  100 syscall: FUNC_WRT L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
  101 syscall_write_content: . TK_IDENTIFIER
  102                      | . TK_STRING
  103                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 110
    TK_STRING      shift, and go to state 111

    array_expression       go to state 112
    syscall_write_content  go to state 116


State 76

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   50              | TK_IDENTIFIER L_PARENTHESIS . function_call_chain R_PARENTHESIS
   51 function_call_chain: . %empty  [R_PARENTHESIS, COMMA]
   52                    | . function_call_chain COMMA expression
   53                    | . expression
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    $default  reduce using rule 51 (function_call_chain)

    function_call        go to state 48
    function_call_chain  go to state 117
    array_expression     go to state 49
    expression           go to state 118
    syscall              go to state 51


State 77

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   61                 | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   62                 | TK_IDENTIFIER L_BRACKET . R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    R_BRACKET      shift, and go to state 119
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 120
    syscall           go to state 51


State 78

   26 var_strings: TK_IDENTIFIER L_BRACKET expression R_BRACKET .

    $default  reduce using rule 26 (var_strings)


State 79

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   66           | expression OP_PLUS . expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 121
    syscall           go to state 51


State 80

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   67           | expression OP_MINUS . expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 122
    syscall           go to state 51


State 81

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   68           | expression OP_MUL . expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 123
    syscall           go to state 51


State 82

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   69           | expression OP_DIV . expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 124
    syscall           go to state 51


State 83

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   70           | expression OP_MOD . expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 125
    syscall           go to state 51


State 84

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   71           | expression OP_POW . expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 126
    syscall           go to state 51


State 85

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   72           | expression OP_EQ . expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 127
    syscall           go to state 51


State 86

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   73           | expression OP_NEQ . expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 128
    syscall           go to state 51


State 87

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   74           | expression OP_LESS . expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 129
    syscall           go to state 51


State 88

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   75           | expression OP_LESSEQ . expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 130
    syscall           go to state 51


State 89

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   76           | expression OP_GREATER . expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 131
    syscall           go to state 51


State 90

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   77           | expression OP_GREATEREQ . expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 132
    syscall           go to state 51


State 91

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   78           | expression OP_AND . expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 133
    syscall           go to state 51


State 92

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   79           | expression OP_OR . expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 134
    syscall           go to state 51


State 93

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   81           | expression OP_ASSIGN_INCR . expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 135
    syscall           go to state 51


State 94

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   82           | expression OP_ASSIGN_DEC . expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 136
    syscall           go to state 51


State 95

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   83           | expression OP_ASSIGN_MUL . expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 137
    syscall           go to state 51


State 96

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   84           | expression OP_ASSIGN_DIV . expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 138
    syscall           go to state 51


State 97

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   85           | expression OP_ASSIGN_MOD . expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 139
    syscall           go to state 51


State 98

   23 var_decl: var_strings COMMA var_decl COLON . data_type SEMICOLON
   27 data_type: . KW_INTEGER
   28          | . KW_STR
   29          | . KW_REAL
   30          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 53
    KW_REAL     shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    data_type  go to state 140


State 99

   24 var_decl: var_strings COLON data_type SEMICOLON .

    $default  reduce using rule 24 (var_decl)


State 100

   20 const_declaration: KW_CONST const_assign COLON data_type SEMICOLON .

    $default  reduce using rule 20 (const_declaration)


State 101

   12 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON . KW_ENDDEF
   13             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON . function_body KW_ENDDEF
   14 function_body: . local_declarations statements
   15              | . statements
   16 var_const_decl: . var_decl
   17               | . const_declaration
   18 local_declarations: . local_declarations var_const_decl
   19                   | . var_const_decl
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_ENDDEF      shift, and go to state 146
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    function_body       go to state 149
    var_const_decl      go to state 150
    local_declarations  go to state 151
    const_declaration   go to state 152
    var_decl            go to state 153
    var_strings         go to state 154
    statements          go to state 155
    statement           go to state 156
    assign_object       go to state 157
    function_call       go to state 158
    for_loop            go to state 159
    while_loop          go to state 160
    if_block            go to state 161
    return_statement    go to state 162
    syscall             go to state 163


State 102

   37 fun_parameter_member: TK_IDENTIFIER L_BRACKET . R_BRACKET COLON data_type

    R_BRACKET  shift, and go to state 164


State 103

   27 data_type: . KW_INTEGER
   28          | . KW_STR
   29          | . KW_REAL
   30          | . KW_BOOLEAN
   36 fun_parameter_member: TK_IDENTIFIER COLON . data_type

    KW_INTEGER  shift, and go to state 53
    KW_REAL     shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    data_type  go to state 165


State 104

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS . OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF
   32               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS . COLON function_body KW_ENDDEF

    COLON     shift, and go to state 166
    OP_MINUS  shift, and go to state 167


State 105

   33 fun_parameters: . fun_parameter_member COMMA fun_parameters
   33               | fun_parameter_member COMMA . fun_parameters
   34               | . fun_parameter_member
   35               | . %empty  [R_PARENTHESIS]
   36 fun_parameter_member: . TK_IDENTIFIER COLON data_type
   37                     | . TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

    TK_IDENTIFIER  shift, and go to state 62

    $default  reduce using rule 35 (fun_parameters)

    fun_parameters        go to state 168
    fun_parameter_member  go to state 64


State 106

   65 expression: L_PARENTHESIS expression R_PARENTHESIS .

    $default  reduce using rule 65 (expression)


State 107

   94 syscall: FUNC_RSTR L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 169


State 108

   96 syscall: FUNC_RINT L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 170


State 109

   95 syscall: FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 171


State 110

   61 array_expression: TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   62                 | TK_IDENTIFIER . L_BRACKET R_BRACKET
  101 syscall_write_content: TK_IDENTIFIER .  [R_PARENTHESIS]

    L_BRACKET  shift, and go to state 77

    $default  reduce using rule 101 (syscall_write_content)


State 111

  102 syscall_write_content: TK_STRING .

    $default  reduce using rule 102 (syscall_write_content)


State 112

  103 syscall_write_content: array_expression .

    $default  reduce using rule 103 (syscall_write_content)


State 113

   97 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 172


State 114

   99 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 173


State 115

   98 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 174


State 116

  100 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 175


State 117

   50 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain . R_PARENTHESIS
   52 function_call_chain: function_call_chain . COMMA expression

    R_PARENTHESIS  shift, and go to state 176
    COMMA          shift, and go to state 177


State 118

   53 function_call_chain: expression .  [R_PARENTHESIS, COMMA]
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 53 (function_call_chain)


State 119

   62 array_expression: TK_IDENTIFIER L_BRACKET R_BRACKET .

    $default  reduce using rule 62 (array_expression)


State 120

   61 array_expression: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 178
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 121

   66 expression: expression . OP_PLUS expression
   66           | expression OP_PLUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS]
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 66 (expression)

    Conflict between rule 66 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 66 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 66 and token OP_MUL resolved as shift (OP_PLUS < OP_MUL).
    Conflict between rule 66 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 66 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 66 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 66 and token OP_EQ resolved as shift (OP_PLUS < OP_EQ).
    Conflict between rule 66 and token OP_NEQ resolved as shift (OP_PLUS < OP_NEQ).
    Conflict between rule 66 and token OP_LESS resolved as shift (OP_PLUS < OP_LESS).
    Conflict between rule 66 and token OP_LESSEQ resolved as shift (OP_PLUS < OP_LESSEQ).
    Conflict between rule 66 and token OP_GREATER resolved as shift (OP_PLUS < OP_GREATER).
    Conflict between rule 66 and token OP_GREATEREQ resolved as shift (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 66 and token OP_AND resolved as shift (OP_PLUS < OP_AND).
    Conflict between rule 66 and token OP_OR resolved as shift (OP_PLUS < OP_OR).
    Conflict between rule 66 and token OP_ASSIGN_INCR resolved as shift (OP_PLUS < OP_ASSIGN_INCR).
    Conflict between rule 66 and token OP_ASSIGN_DEC resolved as shift (OP_PLUS < OP_ASSIGN_DEC).
    Conflict between rule 66 and token OP_ASSIGN_MUL resolved as shift (OP_PLUS < OP_ASSIGN_MUL).
    Conflict between rule 66 and token OP_ASSIGN_DIV resolved as shift (OP_PLUS < OP_ASSIGN_DIV).
    Conflict between rule 66 and token OP_ASSIGN_MOD resolved as shift (OP_PLUS < OP_ASSIGN_MOD).


State 122

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   67           | expression OP_MINUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS]
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 67 (expression)

    Conflict between rule 67 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 67 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 67 and token OP_MUL resolved as shift (OP_MINUS < OP_MUL).
    Conflict between rule 67 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 67 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 67 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 67 and token OP_EQ resolved as shift (OP_MINUS < OP_EQ).
    Conflict between rule 67 and token OP_NEQ resolved as shift (OP_MINUS < OP_NEQ).
    Conflict between rule 67 and token OP_LESS resolved as shift (OP_MINUS < OP_LESS).
    Conflict between rule 67 and token OP_LESSEQ resolved as shift (OP_MINUS < OP_LESSEQ).
    Conflict between rule 67 and token OP_GREATER resolved as shift (OP_MINUS < OP_GREATER).
    Conflict between rule 67 and token OP_GREATEREQ resolved as shift (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 67 and token OP_AND resolved as shift (OP_MINUS < OP_AND).
    Conflict between rule 67 and token OP_OR resolved as shift (OP_MINUS < OP_OR).
    Conflict between rule 67 and token OP_ASSIGN_INCR resolved as shift (OP_MINUS < OP_ASSIGN_INCR).
    Conflict between rule 67 and token OP_ASSIGN_DEC resolved as shift (OP_MINUS < OP_ASSIGN_DEC).
    Conflict between rule 67 and token OP_ASSIGN_MUL resolved as shift (OP_MINUS < OP_ASSIGN_MUL).
    Conflict between rule 67 and token OP_ASSIGN_DIV resolved as shift (OP_MINUS < OP_ASSIGN_DIV).
    Conflict between rule 67 and token OP_ASSIGN_MOD resolved as shift (OP_MINUS < OP_ASSIGN_MOD).


State 123

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   68           | expression OP_MUL expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL]
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MUL).
    Conflict between rule 68 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MUL).
    Conflict between rule 68 and token OP_MUL resolved as reduce (%left OP_MUL).
    Conflict between rule 68 and token OP_DIV resolved as shift (OP_MUL < OP_DIV).
    Conflict between rule 68 and token OP_MOD resolved as shift (OP_MUL < OP_MOD).
    Conflict between rule 68 and token OP_POW resolved as shift (OP_MUL < OP_POW).
    Conflict between rule 68 and token OP_EQ resolved as shift (OP_MUL < OP_EQ).
    Conflict between rule 68 and token OP_NEQ resolved as shift (OP_MUL < OP_NEQ).
    Conflict between rule 68 and token OP_LESS resolved as shift (OP_MUL < OP_LESS).
    Conflict between rule 68 and token OP_LESSEQ resolved as shift (OP_MUL < OP_LESSEQ).
    Conflict between rule 68 and token OP_GREATER resolved as shift (OP_MUL < OP_GREATER).
    Conflict between rule 68 and token OP_GREATEREQ resolved as shift (OP_MUL < OP_GREATEREQ).
    Conflict between rule 68 and token OP_AND resolved as shift (OP_MUL < OP_AND).
    Conflict between rule 68 and token OP_OR resolved as shift (OP_MUL < OP_OR).
    Conflict between rule 68 and token OP_ASSIGN_INCR resolved as shift (OP_MUL < OP_ASSIGN_INCR).
    Conflict between rule 68 and token OP_ASSIGN_DEC resolved as shift (OP_MUL < OP_ASSIGN_DEC).
    Conflict between rule 68 and token OP_ASSIGN_MUL resolved as shift (OP_MUL < OP_ASSIGN_MUL).
    Conflict between rule 68 and token OP_ASSIGN_DIV resolved as shift (OP_MUL < OP_ASSIGN_DIV).
    Conflict between rule 68 and token OP_ASSIGN_MOD resolved as shift (OP_MUL < OP_ASSIGN_MOD).


State 124

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   69           | expression OP_DIV expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV]
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 69 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 69 and token OP_MUL resolved as reduce (OP_MUL < OP_DIV).
    Conflict between rule 69 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 69 and token OP_MOD resolved as shift (OP_DIV < OP_MOD).
    Conflict between rule 69 and token OP_POW resolved as shift (OP_DIV < OP_POW).
    Conflict between rule 69 and token OP_EQ resolved as shift (OP_DIV < OP_EQ).
    Conflict between rule 69 and token OP_NEQ resolved as shift (OP_DIV < OP_NEQ).
    Conflict between rule 69 and token OP_LESS resolved as shift (OP_DIV < OP_LESS).
    Conflict between rule 69 and token OP_LESSEQ resolved as shift (OP_DIV < OP_LESSEQ).
    Conflict between rule 69 and token OP_GREATER resolved as shift (OP_DIV < OP_GREATER).
    Conflict between rule 69 and token OP_GREATEREQ resolved as shift (OP_DIV < OP_GREATEREQ).
    Conflict between rule 69 and token OP_AND resolved as shift (OP_DIV < OP_AND).
    Conflict between rule 69 and token OP_OR resolved as shift (OP_DIV < OP_OR).
    Conflict between rule 69 and token OP_ASSIGN_INCR resolved as shift (OP_DIV < OP_ASSIGN_INCR).
    Conflict between rule 69 and token OP_ASSIGN_DEC resolved as shift (OP_DIV < OP_ASSIGN_DEC).
    Conflict between rule 69 and token OP_ASSIGN_MUL resolved as shift (OP_DIV < OP_ASSIGN_MUL).
    Conflict between rule 69 and token OP_ASSIGN_DIV resolved as shift (OP_DIV < OP_ASSIGN_DIV).
    Conflict between rule 69 and token OP_ASSIGN_MOD resolved as shift (OP_DIV < OP_ASSIGN_MOD).


State 125

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   70           | expression OP_MOD expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD]
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 70 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 70 and token OP_MUL resolved as reduce (OP_MUL < OP_MOD).
    Conflict between rule 70 and token OP_DIV resolved as reduce (OP_DIV < OP_MOD).
    Conflict between rule 70 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 70 and token OP_POW resolved as shift (OP_MOD < OP_POW).
    Conflict between rule 70 and token OP_EQ resolved as shift (OP_MOD < OP_EQ).
    Conflict between rule 70 and token OP_NEQ resolved as shift (OP_MOD < OP_NEQ).
    Conflict between rule 70 and token OP_LESS resolved as shift (OP_MOD < OP_LESS).
    Conflict between rule 70 and token OP_LESSEQ resolved as shift (OP_MOD < OP_LESSEQ).
    Conflict between rule 70 and token OP_GREATER resolved as shift (OP_MOD < OP_GREATER).
    Conflict between rule 70 and token OP_GREATEREQ resolved as shift (OP_MOD < OP_GREATEREQ).
    Conflict between rule 70 and token OP_AND resolved as shift (OP_MOD < OP_AND).
    Conflict between rule 70 and token OP_OR resolved as shift (OP_MOD < OP_OR).
    Conflict between rule 70 and token OP_ASSIGN_INCR resolved as shift (OP_MOD < OP_ASSIGN_INCR).
    Conflict between rule 70 and token OP_ASSIGN_DEC resolved as shift (OP_MOD < OP_ASSIGN_DEC).
    Conflict between rule 70 and token OP_ASSIGN_MUL resolved as shift (OP_MOD < OP_ASSIGN_MUL).
    Conflict between rule 70 and token OP_ASSIGN_DIV resolved as shift (OP_MOD < OP_ASSIGN_DIV).
    Conflict between rule 70 and token OP_ASSIGN_MOD resolved as shift (OP_MOD < OP_ASSIGN_MOD).


State 126

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   71           | expression OP_POW expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD]
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POW).
    Conflict between rule 71 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POW).
    Conflict between rule 71 and token OP_MUL resolved as reduce (OP_MUL < OP_POW).
    Conflict between rule 71 and token OP_DIV resolved as reduce (OP_DIV < OP_POW).
    Conflict between rule 71 and token OP_MOD resolved as reduce (OP_MOD < OP_POW).
    Conflict between rule 71 and token OP_POW resolved as shift (%right OP_POW).
    Conflict between rule 71 and token OP_EQ resolved as shift (OP_POW < OP_EQ).
    Conflict between rule 71 and token OP_NEQ resolved as shift (OP_POW < OP_NEQ).
    Conflict between rule 71 and token OP_LESS resolved as shift (OP_POW < OP_LESS).
    Conflict between rule 71 and token OP_LESSEQ resolved as shift (OP_POW < OP_LESSEQ).
    Conflict between rule 71 and token OP_GREATER resolved as shift (OP_POW < OP_GREATER).
    Conflict between rule 71 and token OP_GREATEREQ resolved as shift (OP_POW < OP_GREATEREQ).
    Conflict between rule 71 and token OP_AND resolved as shift (OP_POW < OP_AND).
    Conflict between rule 71 and token OP_OR resolved as shift (OP_POW < OP_OR).
    Conflict between rule 71 and token OP_ASSIGN_INCR resolved as shift (OP_POW < OP_ASSIGN_INCR).
    Conflict between rule 71 and token OP_ASSIGN_DEC resolved as shift (OP_POW < OP_ASSIGN_DEC).
    Conflict between rule 71 and token OP_ASSIGN_MUL resolved as shift (OP_POW < OP_ASSIGN_MUL).
    Conflict between rule 71 and token OP_ASSIGN_DIV resolved as shift (OP_POW < OP_ASSIGN_DIV).
    Conflict between rule 71 and token OP_ASSIGN_MOD resolved as shift (OP_POW < OP_ASSIGN_MOD).


State 127

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   72           | expression OP_EQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ]
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token OP_PLUS resolved as reduce (OP_PLUS < OP_EQ).
    Conflict between rule 72 and token OP_MINUS resolved as reduce (OP_MINUS < OP_EQ).
    Conflict between rule 72 and token OP_MUL resolved as reduce (OP_MUL < OP_EQ).
    Conflict between rule 72 and token OP_DIV resolved as reduce (OP_DIV < OP_EQ).
    Conflict between rule 72 and token OP_MOD resolved as reduce (OP_MOD < OP_EQ).
    Conflict between rule 72 and token OP_POW resolved as reduce (OP_POW < OP_EQ).
    Conflict between rule 72 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 72 and token OP_NEQ resolved as shift (OP_EQ < OP_NEQ).
    Conflict between rule 72 and token OP_LESS resolved as shift (OP_EQ < OP_LESS).
    Conflict between rule 72 and token OP_LESSEQ resolved as shift (OP_EQ < OP_LESSEQ).
    Conflict between rule 72 and token OP_GREATER resolved as shift (OP_EQ < OP_GREATER).
    Conflict between rule 72 and token OP_GREATEREQ resolved as shift (OP_EQ < OP_GREATEREQ).
    Conflict between rule 72 and token OP_AND resolved as shift (OP_EQ < OP_AND).
    Conflict between rule 72 and token OP_OR resolved as shift (OP_EQ < OP_OR).
    Conflict between rule 72 and token OP_ASSIGN_INCR resolved as shift (OP_EQ < OP_ASSIGN_INCR).
    Conflict between rule 72 and token OP_ASSIGN_DEC resolved as shift (OP_EQ < OP_ASSIGN_DEC).
    Conflict between rule 72 and token OP_ASSIGN_MUL resolved as shift (OP_EQ < OP_ASSIGN_MUL).
    Conflict between rule 72 and token OP_ASSIGN_DIV resolved as shift (OP_EQ < OP_ASSIGN_DIV).
    Conflict between rule 72 and token OP_ASSIGN_MOD resolved as shift (OP_EQ < OP_ASSIGN_MOD).


State 128

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   73           | expression OP_NEQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ]
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token OP_PLUS resolved as reduce (OP_PLUS < OP_NEQ).
    Conflict between rule 73 and token OP_MINUS resolved as reduce (OP_MINUS < OP_NEQ).
    Conflict between rule 73 and token OP_MUL resolved as reduce (OP_MUL < OP_NEQ).
    Conflict between rule 73 and token OP_DIV resolved as reduce (OP_DIV < OP_NEQ).
    Conflict between rule 73 and token OP_MOD resolved as reduce (OP_MOD < OP_NEQ).
    Conflict between rule 73 and token OP_POW resolved as reduce (OP_POW < OP_NEQ).
    Conflict between rule 73 and token OP_EQ resolved as reduce (OP_EQ < OP_NEQ).
    Conflict between rule 73 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 73 and token OP_LESS resolved as shift (OP_NEQ < OP_LESS).
    Conflict between rule 73 and token OP_LESSEQ resolved as shift (OP_NEQ < OP_LESSEQ).
    Conflict between rule 73 and token OP_GREATER resolved as shift (OP_NEQ < OP_GREATER).
    Conflict between rule 73 and token OP_GREATEREQ resolved as shift (OP_NEQ < OP_GREATEREQ).
    Conflict between rule 73 and token OP_AND resolved as shift (OP_NEQ < OP_AND).
    Conflict between rule 73 and token OP_OR resolved as shift (OP_NEQ < OP_OR).
    Conflict between rule 73 and token OP_ASSIGN_INCR resolved as shift (OP_NEQ < OP_ASSIGN_INCR).
    Conflict between rule 73 and token OP_ASSIGN_DEC resolved as shift (OP_NEQ < OP_ASSIGN_DEC).
    Conflict between rule 73 and token OP_ASSIGN_MUL resolved as shift (OP_NEQ < OP_ASSIGN_MUL).
    Conflict between rule 73 and token OP_ASSIGN_DIV resolved as shift (OP_NEQ < OP_ASSIGN_DIV).
    Conflict between rule 73 and token OP_ASSIGN_MOD resolved as shift (OP_NEQ < OP_ASSIGN_MOD).


State 129

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   74           | expression OP_LESS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS]
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token OP_PLUS resolved as reduce (OP_PLUS < OP_LESS).
    Conflict between rule 74 and token OP_MINUS resolved as reduce (OP_MINUS < OP_LESS).
    Conflict between rule 74 and token OP_MUL resolved as reduce (OP_MUL < OP_LESS).
    Conflict between rule 74 and token OP_DIV resolved as reduce (OP_DIV < OP_LESS).
    Conflict between rule 74 and token OP_MOD resolved as reduce (OP_MOD < OP_LESS).
    Conflict between rule 74 and token OP_POW resolved as reduce (OP_POW < OP_LESS).
    Conflict between rule 74 and token OP_EQ resolved as reduce (OP_EQ < OP_LESS).
    Conflict between rule 74 and token OP_NEQ resolved as reduce (OP_NEQ < OP_LESS).
    Conflict between rule 74 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 74 and token OP_LESSEQ resolved as shift (OP_LESS < OP_LESSEQ).
    Conflict between rule 74 and token OP_GREATER resolved as shift (OP_LESS < OP_GREATER).
    Conflict between rule 74 and token OP_GREATEREQ resolved as shift (OP_LESS < OP_GREATEREQ).
    Conflict between rule 74 and token OP_AND resolved as shift (OP_LESS < OP_AND).
    Conflict between rule 74 and token OP_OR resolved as shift (OP_LESS < OP_OR).
    Conflict between rule 74 and token OP_ASSIGN_INCR resolved as shift (OP_LESS < OP_ASSIGN_INCR).
    Conflict between rule 74 and token OP_ASSIGN_DEC resolved as shift (OP_LESS < OP_ASSIGN_DEC).
    Conflict between rule 74 and token OP_ASSIGN_MUL resolved as shift (OP_LESS < OP_ASSIGN_MUL).
    Conflict between rule 74 and token OP_ASSIGN_DIV resolved as shift (OP_LESS < OP_ASSIGN_DIV).
    Conflict between rule 74 and token OP_ASSIGN_MOD resolved as shift (OP_LESS < OP_ASSIGN_MOD).


State 130

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   75           | expression OP_LESSEQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ]
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token OP_PLUS resolved as reduce (OP_PLUS < OP_LESSEQ).
    Conflict between rule 75 and token OP_MINUS resolved as reduce (OP_MINUS < OP_LESSEQ).
    Conflict between rule 75 and token OP_MUL resolved as reduce (OP_MUL < OP_LESSEQ).
    Conflict between rule 75 and token OP_DIV resolved as reduce (OP_DIV < OP_LESSEQ).
    Conflict between rule 75 and token OP_MOD resolved as reduce (OP_MOD < OP_LESSEQ).
    Conflict between rule 75 and token OP_POW resolved as reduce (OP_POW < OP_LESSEQ).
    Conflict between rule 75 and token OP_EQ resolved as reduce (OP_EQ < OP_LESSEQ).
    Conflict between rule 75 and token OP_NEQ resolved as reduce (OP_NEQ < OP_LESSEQ).
    Conflict between rule 75 and token OP_LESS resolved as reduce (OP_LESS < OP_LESSEQ).
    Conflict between rule 75 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 75 and token OP_GREATER resolved as shift (OP_LESSEQ < OP_GREATER).
    Conflict between rule 75 and token OP_GREATEREQ resolved as shift (OP_LESSEQ < OP_GREATEREQ).
    Conflict between rule 75 and token OP_AND resolved as shift (OP_LESSEQ < OP_AND).
    Conflict between rule 75 and token OP_OR resolved as shift (OP_LESSEQ < OP_OR).
    Conflict between rule 75 and token OP_ASSIGN_INCR resolved as shift (OP_LESSEQ < OP_ASSIGN_INCR).
    Conflict between rule 75 and token OP_ASSIGN_DEC resolved as shift (OP_LESSEQ < OP_ASSIGN_DEC).
    Conflict between rule 75 and token OP_ASSIGN_MUL resolved as shift (OP_LESSEQ < OP_ASSIGN_MUL).
    Conflict between rule 75 and token OP_ASSIGN_DIV resolved as shift (OP_LESSEQ < OP_ASSIGN_DIV).
    Conflict between rule 75 and token OP_ASSIGN_MOD resolved as shift (OP_LESSEQ < OP_ASSIGN_MOD).


State 131

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   76           | expression OP_GREATER expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER]
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token OP_PLUS resolved as reduce (OP_PLUS < OP_GREATER).
    Conflict between rule 76 and token OP_MINUS resolved as reduce (OP_MINUS < OP_GREATER).
    Conflict between rule 76 and token OP_MUL resolved as reduce (OP_MUL < OP_GREATER).
    Conflict between rule 76 and token OP_DIV resolved as reduce (OP_DIV < OP_GREATER).
    Conflict between rule 76 and token OP_MOD resolved as reduce (OP_MOD < OP_GREATER).
    Conflict between rule 76 and token OP_POW resolved as reduce (OP_POW < OP_GREATER).
    Conflict between rule 76 and token OP_EQ resolved as reduce (OP_EQ < OP_GREATER).
    Conflict between rule 76 and token OP_NEQ resolved as reduce (OP_NEQ < OP_GREATER).
    Conflict between rule 76 and token OP_LESS resolved as reduce (OP_LESS < OP_GREATER).
    Conflict between rule 76 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_GREATER).
    Conflict between rule 76 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 76 and token OP_GREATEREQ resolved as shift (OP_GREATER < OP_GREATEREQ).
    Conflict between rule 76 and token OP_AND resolved as shift (OP_GREATER < OP_AND).
    Conflict between rule 76 and token OP_OR resolved as shift (OP_GREATER < OP_OR).
    Conflict between rule 76 and token OP_ASSIGN_INCR resolved as shift (OP_GREATER < OP_ASSIGN_INCR).
    Conflict between rule 76 and token OP_ASSIGN_DEC resolved as shift (OP_GREATER < OP_ASSIGN_DEC).
    Conflict between rule 76 and token OP_ASSIGN_MUL resolved as shift (OP_GREATER < OP_ASSIGN_MUL).
    Conflict between rule 76 and token OP_ASSIGN_DIV resolved as shift (OP_GREATER < OP_ASSIGN_DIV).
    Conflict between rule 76 and token OP_ASSIGN_MOD resolved as shift (OP_GREATER < OP_ASSIGN_MOD).


State 132

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   77           | expression OP_GREATEREQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ]
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token OP_PLUS resolved as reduce (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 77 and token OP_MINUS resolved as reduce (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 77 and token OP_MUL resolved as reduce (OP_MUL < OP_GREATEREQ).
    Conflict between rule 77 and token OP_DIV resolved as reduce (OP_DIV < OP_GREATEREQ).
    Conflict between rule 77 and token OP_MOD resolved as reduce (OP_MOD < OP_GREATEREQ).
    Conflict between rule 77 and token OP_POW resolved as reduce (OP_POW < OP_GREATEREQ).
    Conflict between rule 77 and token OP_EQ resolved as reduce (OP_EQ < OP_GREATEREQ).
    Conflict between rule 77 and token OP_NEQ resolved as reduce (OP_NEQ < OP_GREATEREQ).
    Conflict between rule 77 and token OP_LESS resolved as reduce (OP_LESS < OP_GREATEREQ).
    Conflict between rule 77 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_GREATEREQ).
    Conflict between rule 77 and token OP_GREATER resolved as reduce (OP_GREATER < OP_GREATEREQ).
    Conflict between rule 77 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 77 and token OP_AND resolved as shift (OP_GREATEREQ < OP_AND).
    Conflict between rule 77 and token OP_OR resolved as shift (OP_GREATEREQ < OP_OR).
    Conflict between rule 77 and token OP_ASSIGN_INCR resolved as shift (OP_GREATEREQ < OP_ASSIGN_INCR).
    Conflict between rule 77 and token OP_ASSIGN_DEC resolved as shift (OP_GREATEREQ < OP_ASSIGN_DEC).
    Conflict between rule 77 and token OP_ASSIGN_MUL resolved as shift (OP_GREATEREQ < OP_ASSIGN_MUL).
    Conflict between rule 77 and token OP_ASSIGN_DIV resolved as shift (OP_GREATEREQ < OP_ASSIGN_DIV).
    Conflict between rule 77 and token OP_ASSIGN_MOD resolved as shift (OP_GREATEREQ < OP_ASSIGN_MOD).


State 133

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   78           | expression OP_AND expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND]
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token OP_PLUS resolved as reduce (OP_PLUS < OP_AND).
    Conflict between rule 78 and token OP_MINUS resolved as reduce (OP_MINUS < OP_AND).
    Conflict between rule 78 and token OP_MUL resolved as reduce (OP_MUL < OP_AND).
    Conflict between rule 78 and token OP_DIV resolved as reduce (OP_DIV < OP_AND).
    Conflict between rule 78 and token OP_MOD resolved as reduce (OP_MOD < OP_AND).
    Conflict between rule 78 and token OP_POW resolved as reduce (OP_POW < OP_AND).
    Conflict between rule 78 and token OP_EQ resolved as reduce (OP_EQ < OP_AND).
    Conflict between rule 78 and token OP_NEQ resolved as reduce (OP_NEQ < OP_AND).
    Conflict between rule 78 and token OP_LESS resolved as reduce (OP_LESS < OP_AND).
    Conflict between rule 78 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_AND).
    Conflict between rule 78 and token OP_GREATER resolved as reduce (OP_GREATER < OP_AND).
    Conflict between rule 78 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_AND).
    Conflict between rule 78 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 78 and token OP_OR resolved as shift (OP_AND < OP_OR).
    Conflict between rule 78 and token OP_ASSIGN_INCR resolved as shift (OP_AND < OP_ASSIGN_INCR).
    Conflict between rule 78 and token OP_ASSIGN_DEC resolved as shift (OP_AND < OP_ASSIGN_DEC).
    Conflict between rule 78 and token OP_ASSIGN_MUL resolved as shift (OP_AND < OP_ASSIGN_MUL).
    Conflict between rule 78 and token OP_ASSIGN_DIV resolved as shift (OP_AND < OP_ASSIGN_DIV).
    Conflict between rule 78 and token OP_ASSIGN_MOD resolved as shift (OP_AND < OP_ASSIGN_MOD).


State 134

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   79           | expression OP_OR expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token OP_PLUS resolved as reduce (OP_PLUS < OP_OR).
    Conflict between rule 79 and token OP_MINUS resolved as reduce (OP_MINUS < OP_OR).
    Conflict between rule 79 and token OP_MUL resolved as reduce (OP_MUL < OP_OR).
    Conflict between rule 79 and token OP_DIV resolved as reduce (OP_DIV < OP_OR).
    Conflict between rule 79 and token OP_MOD resolved as reduce (OP_MOD < OP_OR).
    Conflict between rule 79 and token OP_POW resolved as reduce (OP_POW < OP_OR).
    Conflict between rule 79 and token OP_EQ resolved as reduce (OP_EQ < OP_OR).
    Conflict between rule 79 and token OP_NEQ resolved as reduce (OP_NEQ < OP_OR).
    Conflict between rule 79 and token OP_LESS resolved as reduce (OP_LESS < OP_OR).
    Conflict between rule 79 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_OR).
    Conflict between rule 79 and token OP_GREATER resolved as reduce (OP_GREATER < OP_OR).
    Conflict between rule 79 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_OR).
    Conflict between rule 79 and token OP_AND resolved as reduce (OP_AND < OP_OR).
    Conflict between rule 79 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 79 and token OP_ASSIGN_INCR resolved as shift (OP_OR < OP_ASSIGN_INCR).
    Conflict between rule 79 and token OP_ASSIGN_DEC resolved as shift (OP_OR < OP_ASSIGN_DEC).
    Conflict between rule 79 and token OP_ASSIGN_MUL resolved as shift (OP_OR < OP_ASSIGN_MUL).
    Conflict between rule 79 and token OP_ASSIGN_DIV resolved as shift (OP_OR < OP_ASSIGN_DIV).
    Conflict between rule 79 and token OP_ASSIGN_MOD resolved as shift (OP_OR < OP_ASSIGN_MOD).


State 135

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   81           | expression OP_ASSIGN_INCR expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_ASSIGN_INCR resolved as shift (%right OP_ASSIGN_INCR).
    Conflict between rule 81 and token OP_ASSIGN_DEC resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_DEC).
    Conflict between rule 81 and token OP_ASSIGN_MUL resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_MUL).
    Conflict between rule 81 and token OP_ASSIGN_DIV resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_DIV).
    Conflict between rule 81 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_INCR < OP_ASSIGN_MOD).


State 136

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   82           | expression OP_ASSIGN_DEC expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR]
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_DEC  shift, and go to state 94
    OP_ASSIGN_MUL  shift, and go to state 95
    OP_ASSIGN_DIV  shift, and go to state 96
    OP_ASSIGN_MOD  shift, and go to state 97

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_ASSIGN_DEC resolved as shift (%right OP_ASSIGN_DEC).
    Conflict between rule 82 and token OP_ASSIGN_MUL resolved as shift (OP_ASSIGN_DEC < OP_ASSIGN_MUL).
    Conflict between rule 82 and token OP_ASSIGN_DIV resolved as shift (OP_ASSIGN_DEC < OP_ASSIGN_DIV).
    Conflict between rule 82 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_DEC < OP_ASSIGN_MOD).


State 137

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   83           | expression OP_ASSIGN_MUL expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC]
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_MUL  shift, and go to state 95
    OP_ASSIGN_DIV  shift, and go to state 96
    OP_ASSIGN_MOD  shift, and go to state 97

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_ASSIGN_DEC resolved as reduce (OP_ASSIGN_DEC < OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_ASSIGN_MUL resolved as shift (%right OP_ASSIGN_MUL).
    Conflict between rule 83 and token OP_ASSIGN_DIV resolved as shift (OP_ASSIGN_MUL < OP_ASSIGN_DIV).
    Conflict between rule 83 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_MUL < OP_ASSIGN_MOD).


State 138

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   84           | expression OP_ASSIGN_DIV expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL]
   85           | expression . OP_ASSIGN_MOD expression

    OP_ASSIGN_DIV  shift, and go to state 96
    OP_ASSIGN_MOD  shift, and go to state 97

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_ASSIGN_DEC resolved as reduce (OP_ASSIGN_DEC < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_ASSIGN_MUL resolved as reduce (OP_ASSIGN_MUL < OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_ASSIGN_DIV resolved as shift (%right OP_ASSIGN_DIV).
    Conflict between rule 84 and token OP_ASSIGN_MOD resolved as shift (OP_ASSIGN_DIV < OP_ASSIGN_MOD).


State 139

   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression
   85           | expression OP_ASSIGN_MOD expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL, OP_ASSIGN_DIV]

    OP_ASSIGN_MOD  shift, and go to state 97

    $default  reduce using rule 85 (expression)

    Conflict between rule 85 and token OP_PLUS resolved as reduce (OP_PLUS < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_MINUS resolved as reduce (OP_MINUS < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_MUL resolved as reduce (OP_MUL < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_DIV resolved as reduce (OP_DIV < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_MOD resolved as reduce (OP_MOD < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_POW resolved as reduce (OP_POW < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_EQ resolved as reduce (OP_EQ < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_NEQ resolved as reduce (OP_NEQ < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_LESS resolved as reduce (OP_LESS < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_GREATER resolved as reduce (OP_GREATER < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_AND resolved as reduce (OP_AND < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_OR resolved as reduce (OP_OR < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_ASSIGN_INCR resolved as reduce (OP_ASSIGN_INCR < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_ASSIGN_DEC resolved as reduce (OP_ASSIGN_DEC < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_ASSIGN_MUL resolved as reduce (OP_ASSIGN_MUL < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_ASSIGN_DIV resolved as reduce (OP_ASSIGN_DIV < OP_ASSIGN_MOD).
    Conflict between rule 85 and token OP_ASSIGN_MOD resolved as shift (%right OP_ASSIGN_MOD).


State 140

   23 var_decl: var_strings COMMA var_decl COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 141

   57 if_block: KW_IF . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

    L_PARENTHESIS  shift, and go to state 180


State 142

   54 for_loop: KW_FOR . TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR . TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF

    TK_IDENTIFIER  shift, and go to state 181


State 143

   56 while_loop: KW_WHILE . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON

    L_PARENTHESIS  shift, and go to state 182


State 144

   43 statement: KW_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 183


State 145

   42 statement: KW_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 184


State 146

   12 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF .

    $default  reduce using rule 12 (program_main)


State 147

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   59 return_statement: KW_RETURN . SEMICOLON
   60                 | KW_RETURN . expression SEMICOLON
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    SEMICOLON      shift, and go to state 185
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 186
    syscall           go to state 51


State 148

   25 var_strings: TK_IDENTIFIER .  [COMMA, COLON, OP_ASSIGN]
   26            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   50 function_call: TK_IDENTIFIER . L_PARENTHESIS function_call_chain R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 76
    L_BRACKET      shift, and go to state 18

    $default  reduce using rule 25 (var_strings)


State 149

   13 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 187


State 150

   19 local_declarations: var_const_decl .

    $default  reduce using rule 19 (local_declarations)


State 151

   14 function_body: local_declarations . statements
   16 var_const_decl: . var_decl
   17               | . const_declaration
   18 local_declarations: local_declarations . var_const_decl
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_const_decl     go to state 188
    const_declaration  go to state 152
    var_decl           go to state 153
    var_strings        go to state 154
    statements         go to state 189
    statement          go to state 156
    assign_object      go to state 157
    function_call      go to state 158
    for_loop           go to state 159
    while_loop         go to state 160
    if_block           go to state 161
    return_statement   go to state 162
    syscall            go to state 163


State 152

   17 var_const_decl: const_declaration .

    $default  reduce using rule 17 (var_const_decl)


State 153

   16 var_const_decl: var_decl .

    $default  reduce using rule 16 (var_const_decl)


State 154

   23 var_decl: var_strings . COMMA var_decl COLON data_type SEMICOLON
   24         | var_strings . COLON data_type SEMICOLON
   49 assign_object: var_strings . OP_ASSIGN expression

    COMMA      shift, and go to state 26
    COLON      shift, and go to state 27
    OP_ASSIGN  shift, and go to state 190


State 155

   15 function_body: statements .  [KW_ENDDEF]
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 15 (function_body)

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 156

   38 statements: statement .

    $default  reduce using rule 38 (statements)


State 157

   40 statement: assign_object . SEMICOLON

    SEMICOLON  shift, and go to state 193


State 158

   41 statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 194


State 159

   44 statement: for_loop . SEMICOLON

    SEMICOLON  shift, and go to state 195


State 160

   45 statement: while_loop . SEMICOLON

    SEMICOLON  shift, and go to state 196


State 161

   46 statement: if_block . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 162

   47 statement: return_statement .

    $default  reduce using rule 47 (statement)


State 163

   48 statement: syscall .

    $default  reduce using rule 48 (statement)


State 164

   37 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET . COLON data_type

    COLON  shift, and go to state 198


State 165

   36 fun_parameter_member: TK_IDENTIFIER COLON data_type .

    $default  reduce using rule 36 (fun_parameter_member)


State 166

   14 function_body: . local_declarations statements
   15              | . statements
   16 var_const_decl: . var_decl
   17               | . const_declaration
   18 local_declarations: . local_declarations var_const_decl
   19                   | . var_const_decl
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   32 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON . function_body KW_ENDDEF
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    function_body       go to state 199
    var_const_decl      go to state 150
    local_declarations  go to state 151
    const_declaration   go to state 152
    var_decl            go to state 153
    var_strings         go to state 154
    statements          go to state 155
    statement           go to state 156
    assign_object       go to state 157
    function_call       go to state 158
    for_loop            go to state 159
    while_loop          go to state 160
    if_block            go to state 161
    return_statement    go to state 162
    syscall             go to state 163


State 167

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS . OP_GREATER data_type COLON function_body KW_ENDDEF

    OP_GREATER  shift, and go to state 200


State 168

   33 fun_parameters: fun_parameter_member COMMA fun_parameters .

    $default  reduce using rule 33 (fun_parameters)


State 169

   94 syscall: FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 94 (syscall)


State 170

   96 syscall: FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 96 (syscall)


State 171

   95 syscall: FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 95 (syscall)


State 172

   97 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 201


State 173

   99 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 202


State 174

   98 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 203


State 175

  100 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 204


State 176

   50 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS .

    $default  reduce using rule 50 (function_call)


State 177

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   52 function_call_chain: function_call_chain COMMA . expression
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 205
    syscall           go to state 51


State 178

   61 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET .

    $default  reduce using rule 61 (array_expression)


State 179

   23 var_decl: var_strings COMMA var_decl COLON data_type SEMICOLON .

    $default  reduce using rule 23 (var_decl)


State 180

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 if_block: KW_IF L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 206
    syscall           go to state 51


State 181

   54 for_loop: KW_FOR TK_IDENTIFIER . KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER . KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF

    KW_IN  shift, and go to state 207


State 182

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   56 while_loop: KW_WHILE L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 208
    syscall           go to state 51


State 183

   43 statement: KW_BREAK SEMICOLON .

    $default  reduce using rule 43 (statement)


State 184

   42 statement: KW_CONTINUE SEMICOLON .

    $default  reduce using rule 42 (statement)


State 185

   59 return_statement: KW_RETURN SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 186

   60 return_statement: KW_RETURN expression . SEMICOLON
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    SEMICOLON       shift, and go to state 209
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 187

   13 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF .

    $default  reduce using rule 13 (program_main)


State 188

   18 local_declarations: local_declarations var_const_decl .

    $default  reduce using rule 18 (local_declarations)


State 189

   14 function_body: local_declarations statements .  [KW_ENDDEF]
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 14 (function_body)

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 190

   49 assign_object: var_strings OP_ASSIGN . expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 210
    syscall           go to state 51


State 191

   49 assign_object: var_strings . OP_ASSIGN expression

    OP_ASSIGN  shift, and go to state 190


State 192

   39 statements: statements statement .

    $default  reduce using rule 39 (statements)


State 193

   40 statement: assign_object SEMICOLON .

    $default  reduce using rule 40 (statement)


State 194

   41 statement: function_call SEMICOLON .

    $default  reduce using rule 41 (statement)


State 195

   44 statement: for_loop SEMICOLON .

    $default  reduce using rule 44 (statement)


State 196

   45 statement: while_loop SEMICOLON .

    $default  reduce using rule 45 (statement)


State 197

   46 statement: if_block SEMICOLON .

    $default  reduce using rule 46 (statement)


State 198

   27 data_type: . KW_INTEGER
   28          | . KW_STR
   29          | . KW_REAL
   30          | . KW_BOOLEAN
   37 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET COLON . data_type

    KW_INTEGER  shift, and go to state 53
    KW_REAL     shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    data_type  go to state 211


State 199

   32 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 212


State 200

   27 data_type: . KW_INTEGER
   28          | . KW_STR
   29          | . KW_REAL
   30          | . KW_BOOLEAN
   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER . data_type COLON function_body KW_ENDDEF

    KW_INTEGER  shift, and go to state 53
    KW_REAL     shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    data_type  go to state 213


State 201

   97 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 97 (syscall)


State 202

   99 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 99 (syscall)


State 203

   98 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 98 (syscall)


State 204

  100 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 100 (syscall)


State 205

   52 function_call_chain: function_call_chain COMMA expression .  [R_PARENTHESIS, COMMA]
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 52 (function_call_chain)


State 206

   57 if_block: KW_IF L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_PARENTHESIS   shift, and go to state 214
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 207

   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN . L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN . L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF

    L_BRACKET  shift, and go to state 215


State 208

   56 while_loop: KW_WHILE L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_PARENTHESIS   shift, and go to state 216
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 209

   60 return_statement: KW_RETURN expression SEMICOLON .

    $default  reduce using rule 60 (return_statement)


State 210

   49 assign_object: var_strings OP_ASSIGN expression .  [SEMICOLON]
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97

    $default  reduce using rule 49 (assign_object)


State 211

   37 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type .

    $default  reduce using rule 37 (fun_parameter_member)


State 212

   32 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF .

    $default  reduce using rule 32 (fun_definition)


State 213

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type . COLON function_body KW_ENDDEF

    COLON  shift, and go to state 217


State 214

   57 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

    COLON  shift, and go to state 218


State 215

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET . expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET . expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 219
    syscall           go to state 51


State 216

   56 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 220


State 217

   14 function_body: . local_declarations statements
   15              | . statements
   16 var_const_decl: . var_decl
   17               | . const_declaration
   18 local_declarations: . local_declarations var_const_decl
   19                   | . var_const_decl
   20 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   23 var_decl: . var_strings COMMA var_decl COLON data_type SEMICOLON
   24         | . var_strings COLON data_type SEMICOLON
   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON . function_body KW_ENDDEF
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    function_body       go to state 221
    var_const_decl      go to state 150
    local_declarations  go to state 151
    const_declaration   go to state 152
    var_decl            go to state 153
    var_strings         go to state 154
    statements          go to state 155
    statement           go to state 156
    assign_object       go to state 157
    function_call       go to state 158
    for_loop            go to state 159
    while_loop          go to state 160
    if_block            go to state 161
    return_statement    go to state 162
    syscall             go to state 163


State 218

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   57         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statements        go to state 222
    statement         go to state 156
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 219

   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression . COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression . COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    COLON           shift, and go to state 223
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 220

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   56           | KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statements        go to state 224
    statement         go to state 156
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 221

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 225


State 222

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   57         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_ELSE        shift, and go to state 226
    KW_ENDIF       shift, and go to state 227
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 223

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON . expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON . expression COLON expression R_BRACKET COLON statements KW_ENDIF
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 228
    syscall           go to state 51


State 224

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   56           | KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_ENDWHILE    shift, and go to state 229
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 225

   31 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF .

    $default  reduce using rule 31 (fun_definition)


State 226

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE . COLON statements KW_ENDIF SEMICOLON

    COLON  shift, and go to state 230


State 227

   57 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 231


State 228

   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression . R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression . COLON expression R_BRACKET COLON statements KW_ENDIF
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 232
    COLON           shift, and go to state 233
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 229

   56 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE . SEMICOLON

    SEMICOLON  shift, and go to state 234


State 230

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON . statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statements        go to state 235
    statement         go to state 156
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 231

   57 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON .

    $default  reduce using rule 57 (if_block)


State 232

   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET . COLON statements KW_ENDIF

    COLON  shift, and go to state 236


State 233

   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON . expression R_BRACKET COLON statements KW_ENDIF
   61 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63 expression: . OP_MINUS expression
   64           | . OP_PLUS expression
   65           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | . expression OP_PLUS expression
   67           | . expression OP_MINUS expression
   68           | . expression OP_MUL expression
   69           | . expression OP_DIV expression
   70           | . expression OP_MOD expression
   71           | . expression OP_POW expression
   72           | . expression OP_EQ expression
   73           | . expression OP_NEQ expression
   74           | . expression OP_LESS expression
   75           | . expression OP_LESSEQ expression
   76           | . expression OP_GREATER expression
   77           | . expression OP_GREATEREQ expression
   78           | . expression OP_AND expression
   79           | . expression OP_OR expression
   80           | . OP_NOT expression
   81           | . expression OP_ASSIGN_INCR expression
   82           | . expression OP_ASSIGN_DEC expression
   83           | . expression OP_ASSIGN_MUL expression
   84           | . expression OP_ASSIGN_DIV expression
   85           | . expression OP_ASSIGN_MOD expression
   86           | . array_expression
   87           | . TK_IDENTIFIER
   88           | . TK_INTEGER
   89           | . TK_REAL
   90           | . KW_TRUE
   91           | . KW_FALSE
   92           | . syscall
   93           | . function_call
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 32
    KW_FALSE       shift, and go to state 33
    L_PARENTHESIS  shift, and go to state 34
    OP_PLUS        shift, and go to state 35
    OP_MINUS       shift, and go to state 36
    OP_NOT         shift, and go to state 37
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    TK_INTEGER     shift, and go to state 46
    TK_REAL        shift, and go to state 47

    function_call     go to state 48
    array_expression  go to state 49
    expression        go to state 237
    syscall           go to state 51


State 234

   56 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON .

    $default  reduce using rule 56 (while_loop)


State 235

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements . KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_ENDIF       shift, and go to state 238
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 236

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   54         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON . statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statements        go to state 239
    statement         go to state 156
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 237

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression . R_BRACKET COLON statements KW_ENDIF
   66 expression: expression . OP_PLUS expression
   67           | expression . OP_MINUS expression
   68           | expression . OP_MUL expression
   69           | expression . OP_DIV expression
   70           | expression . OP_MOD expression
   71           | expression . OP_POW expression
   72           | expression . OP_EQ expression
   73           | expression . OP_NEQ expression
   74           | expression . OP_LESS expression
   75           | expression . OP_LESSEQ expression
   76           | expression . OP_GREATER expression
   77           | expression . OP_GREATEREQ expression
   78           | expression . OP_AND expression
   79           | expression . OP_OR expression
   81           | expression . OP_ASSIGN_INCR expression
   82           | expression . OP_ASSIGN_DEC expression
   83           | expression . OP_ASSIGN_MUL expression
   84           | expression . OP_ASSIGN_DIV expression
   85           | expression . OP_ASSIGN_MOD expression

    R_BRACKET       shift, and go to state 240
    OP_PLUS         shift, and go to state 79
    OP_MINUS        shift, and go to state 80
    OP_MUL          shift, and go to state 81
    OP_DIV          shift, and go to state 82
    OP_MOD          shift, and go to state 83
    OP_POW          shift, and go to state 84
    OP_EQ           shift, and go to state 85
    OP_NEQ          shift, and go to state 86
    OP_LESS         shift, and go to state 87
    OP_LESSEQ       shift, and go to state 88
    OP_GREATER      shift, and go to state 89
    OP_GREATEREQ    shift, and go to state 90
    OP_AND          shift, and go to state 91
    OP_OR           shift, and go to state 92
    OP_ASSIGN_INCR  shift, and go to state 93
    OP_ASSIGN_DEC   shift, and go to state 94
    OP_ASSIGN_MUL   shift, and go to state 95
    OP_ASSIGN_DIV   shift, and go to state 96
    OP_ASSIGN_MOD   shift, and go to state 97


State 238

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 241


State 239

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   54         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements . KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_ENDIF       shift, and go to state 242
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 240

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET . COLON statements KW_ENDIF

    COLON  shift, and go to state 243


State 241

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON .

    $default  reduce using rule 58 (if_block)


State 242

   54 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF .

    $default  reduce using rule 54 (for_loop)


State 243

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   38 statements: . statement
   39           | . statements statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON . statements KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statements        go to state 244
    statement         go to state 156
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 244

   25 var_strings: . TK_IDENTIFIER
   26            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   39 statements: statements . statement
   40 statement: . assign_object SEMICOLON
   41          | . function_call SEMICOLON
   42          | . KW_CONTINUE SEMICOLON
   43          | . KW_BREAK SEMICOLON
   44          | . for_loop SEMICOLON
   45          | . while_loop SEMICOLON
   46          | . if_block SEMICOLON
   47          | . return_statement
   48          | . syscall
   49 assign_object: . var_strings OP_ASSIGN expression
   50 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   54 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements . KW_ENDIF
   56 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59 return_statement: . KW_RETURN SEMICOLON
   60                 | . KW_RETURN expression SEMICOLON
   94 syscall: . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   95        | . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   96        | . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   97        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   98        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   99        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
  100        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 141
    KW_ENDIF       shift, and go to state 245
    KW_FOR         shift, and go to state 142
    KW_WHILE       shift, and go to state 143
    KW_BREAK       shift, and go to state 144
    KW_CONTINUE    shift, and go to state 145
    KW_RETURN      shift, and go to state 147
    FUNC_RSTR      shift, and go to state 38
    FUNC_RINT      shift, and go to state 39
    FUNC_RSCAL     shift, and go to state 40
    FUNC_WSTR      shift, and go to state 41
    FUNC_WINT      shift, and go to state 42
    FUNC_WSCAL     shift, and go to state 43
    FUNC_WRT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 148

    var_strings       go to state 191
    statement         go to state 192
    assign_object     go to state 157
    function_call     go to state 158
    for_loop          go to state 159
    while_loop        go to state 160
    if_block          go to state 161
    return_statement  go to state 162
    syscall           go to state 163


State 245

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDIF .

    $default  reduce using rule 55 (for_loop)
