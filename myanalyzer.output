Grammar

    0 $accept: input $end

    1 input: program_start

    2 program_start: program_main
    3              | const_declaration program_start
    4              | var_decl program_start
    5              | fun_definition program_start

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    8 function_body: local_declarations statements
    9              | statements

   10 var_const_decl: var_decl
   11               | const_declaration

   12 local_declarations: local_declarations var_const_decl
   13                   | var_const_decl

   14 const_declaration: KW_CONST const_assign COLON data_type SEMICOLON

   15 const_assign: TK_IDENTIFIER OP_ASSIGN expression
   16             | TK_IDENTIFIER OP_ASSIGN TK_STRING

   17 var_decl: var_chain COLON data_type SEMICOLON

   18 var_chain: var_strings
   19          | var_chain COMMA var_strings

   20 var_strings: TK_IDENTIFIER
   21            | TK_IDENTIFIER L_BRACKET expression R_BRACKET

   22 data_type: KW_INTEGER
   23          | KW_STR
   24          | KW_REAL
   25          | KW_BOOLEAN
   26          | KW_VOID

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

   29 fun_parameters: fun_parameter_member COMMA fun_parameters
   30               | fun_parameter_member
   31               | %empty

   32 fun_parameter_member: TK_IDENTIFIER COLON data_type
   33                     | TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

   34 statements: statement
   35           | statements statement

   36 statement: assign_object SEMICOLON
   37          | function_call SEMICOLON
   38          | KW_CONTINUE SEMICOLON
   39          | KW_BREAK SEMICOLON
   40          | for_loop
   41          | while_loop
   42          | if_block
   43          | return_statement
   44          | syscall

   45 assign_object: var_strings OP_ASSIGN expression
   46              | var_strings OP_ASSIGN_INCR expression
   47              | var_strings OP_ASSIGN_DEC expression
   48              | var_strings OP_ASSIGN_MUL expression
   49              | var_strings OP_ASSIGN_DIV expression
   50              | var_strings OP_ASSIGN_MOD expression

   51 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS

   52 function_call_chain: %empty
   53                    | function_call_chain COMMA expression
   54                    | expression

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

   57 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

   60 return_statement: KW_RETURN SEMICOLON
   61                 | KW_RETURN expression SEMICOLON

   62 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | TK_IDENTIFIER L_BRACKET R_BRACKET

   64 expression: OP_MINUS expression
   65           | OP_PLUS expression
   66           | L_PARENTHESIS expression R_PARENTHESIS
   67           | expression OP_PLUS expression
   68           | expression OP_MINUS expression
   69           | expression OP_MUL expression
   70           | expression OP_DIV expression
   71           | expression OP_MOD expression
   72           | expression OP_POW expression
   73           | expression OP_EQ expression
   74           | expression OP_NEQ expression
   75           | expression OP_LESS expression
   76           | expression OP_LESSEQ expression
   77           | expression OP_GREATER expression
   78           | expression OP_GREATEREQ expression
   79           | expression OP_AND expression
   80           | expression OP_OR expression
   81           | OP_NOT expression
   82           | array_expression
   83           | TK_IDENTIFIER
   84           | TK_INTEGER
   85           | TK_REAL
   86           | KW_TRUE
   87           | KW_FALSE
   88           | syscall
   89           | function_call

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

   97 syscall_write_content: TK_IDENTIFIER
   98                      | TK_STRING
   99                      | array_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    KW_VOID (258) 26
    KW_INTEGER (259) 22
    KW_REAL (260) 24
    KW_STR (261) 23
    KW_BOOLEAN (262) 25
    KW_TRUE (263) 86
    KW_FALSE (264) 87
    KW_CONST (265) 14
    KW_IF (266) 58 59
    KW_ELSE (267) 59
    KW_ENDIF (268) 58 59
    KW_FOR (269) 55 56
    KW_IN (270) 55 56
    KW_ENDFOR (271) 55 56
    KW_WHILE (272) 57
    KW_ENDWHILE (273) 57
    KW_BREAK (274) 39
    KW_CONTINUE (275) 38
    KW_DEF (276) 6 7 27 28
    KW_ENDDEF (277) 6 7 27 28
    KW_MAIN (278) 6 7
    KW_RETURN (279) 60 61
    SEMICOLON (280) 6 7 14 17 27 28 36 37 38 39 55 56 57 58 59 60 61 90 91 92 93 94 95 96
    L_PARENTHESIS (281) 6 7 27 28 51 57 58 59 66 90 91 92 93 94 95 96
    R_PARENTHESIS (282) 6 7 27 28 51 57 58 59 66 90 91 92 93 94 95 96
    COMMA (283) 19 29 53
    L_BRACKET (284) 21 33 55 56 62 63
    R_BRACKET (285) 21 33 55 56 62 63
    COLON (286) 6 7 14 17 27 28 32 33 55 56 57 58 59
    OP_PLUS (287) 65 67
    OP_MINUS (288) 27 64 68
    OP_MUL (289) 69
    OP_DIV (290) 70
    OP_MOD (291) 71
    OP_POW (292) 72
    OP_EQ (293) 73
    OP_NEQ (294) 74
    OP_LESS (295) 75
    OP_LESSEQ (296) 76
    OP_GREATER (297) 27 77
    OP_GREATEREQ (298) 78
    OP_AND (299) 79
    OP_OR (300) 80
    OP_NOT (301) 81
    OP_ASSIGN (302) 15 16 45 90 91 92
    OP_ASSIGN_INCR (303) 46
    OP_ASSIGN_DEC (304) 47
    OP_ASSIGN_MUL (305) 48
    OP_ASSIGN_DIV (306) 49
    OP_ASSIGN_MOD (307) 50
    FUNC_RSTR (308) 90
    FUNC_RINT (309) 92
    FUNC_RSCAL (310) 91
    FUNC_WSTR (311) 93
    FUNC_WINT (312) 95
    FUNC_WSCAL (313) 94
    FUNC_WRT (314) 96
    TK_IDENTIFIER <str> (315) 15 16 20 21 27 28 32 33 51 55 56 62 63 83 97
    TK_INTEGER <str> (316) 84
    TK_REAL <str> (317) 85
    TK_STRING <str> (318) 16 98


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    input (65)
        on left: 1
        on right: 0
    program_start <str> (66)
        on left: 2 3 4 5
        on right: 1 3 4 5
    program_main <str> (67)
        on left: 6 7
        on right: 2
    function_body <str> (68)
        on left: 8 9
        on right: 7 27 28
    var_const_decl <str> (69)
        on left: 10 11
        on right: 12 13
    local_declarations <str> (70)
        on left: 12 13
        on right: 8 12
    const_declaration <str> (71)
        on left: 14
        on right: 3 11
    const_assign <str> (72)
        on left: 15 16
        on right: 14
    var_decl <str> (73)
        on left: 17
        on right: 4 10
    var_chain <str> (74)
        on left: 18 19
        on right: 17 19
    var_strings <str> (75)
        on left: 20 21
        on right: 18 19 45 46 47 48 49 50 90 91 92
    data_type <str> (76)
        on left: 22 23 24 25 26
        on right: 14 17 27 32 33
    fun_definition <str> (77)
        on left: 27 28
        on right: 5
    fun_parameters <str> (78)
        on left: 29 30 31
        on right: 27 28 29
    fun_parameter_member <str> (79)
        on left: 32 33
        on right: 29 30
    statements <str> (80)
        on left: 34 35
        on right: 8 9 35 55 56 57 58 59
    statement <str> (81)
        on left: 36 37 38 39 40 41 42 43 44
        on right: 34 35
    assign_object <str> (82)
        on left: 45 46 47 48 49 50
        on right: 36
    function_call <str> (83)
        on left: 51
        on right: 37 89
    function_call_chain <str> (84)
        on left: 52 53 54
        on right: 51 53
    for_loop <str> (85)
        on left: 55 56
        on right: 40
    while_loop <str> (86)
        on left: 57
        on right: 41
    if_block <str> (87)
        on left: 58 59
        on right: 42
    return_statement <str> (88)
        on left: 60 61
        on right: 43
    array_expression <str> (89)
        on left: 62 63
        on right: 82 99
    expression <str> (90)
        on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
        on right: 15 21 45 46 47 48 49 50 53 54 55 56 57 58 59 61 62 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    syscall <str> (91)
        on left: 90 91 92 93 94 95 96
        on right: 44 88
    syscall_write_content <str> (92)
        on left: 97 98 99
        on right: 93 94 95 96


State 0

    0 $accept: . input $end
    1 input: . program_start
    2 program_start: . program_main
    3              | . const_declaration program_start
    4              | . var_decl program_start
    5              | . fun_definition program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    input              go to state 4
    program_start      go to state 5
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_chain          go to state 9
    var_strings        go to state 10
    fun_definition     go to state 11


State 1

   14 const_declaration: KW_CONST . const_assign COLON data_type SEMICOLON
   15 const_assign: . TK_IDENTIFIER OP_ASSIGN expression
   16             | . TK_IDENTIFIER OP_ASSIGN TK_STRING

    TK_IDENTIFIER  shift, and go to state 12

    const_assign  go to state 13


State 2

    6 program_main: KW_DEF . KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF . KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   27 fun_definition: KW_DEF . TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF . TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_MAIN        shift, and go to state 14
    TK_IDENTIFIER  shift, and go to state 15


State 3

   20 var_strings: TK_IDENTIFIER .  [COMMA, COLON]
   21            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 16

    $default  reduce using rule 20 (var_strings)


State 4

    0 $accept: input . $end

    $end  shift, and go to state 17


State 5

    1 input: program_start .

    $default  reduce using rule 1 (input)


State 6

    2 program_start: program_main .

    $default  reduce using rule 2 (program_start)


State 7

    2 program_start: . program_main
    3              | . const_declaration program_start
    3              | const_declaration . program_start
    4              | . var_decl program_start
    5              | . fun_definition program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start      go to state 18
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_chain          go to state 9
    var_strings        go to state 10
    fun_definition     go to state 11


State 8

    2 program_start: . program_main
    3              | . const_declaration program_start
    4              | . var_decl program_start
    4              | var_decl . program_start
    5              | . fun_definition program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start      go to state 19
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_chain          go to state 9
    var_strings        go to state 10
    fun_definition     go to state 11


State 9

   17 var_decl: var_chain . COLON data_type SEMICOLON
   19 var_chain: var_chain . COMMA var_strings

    COMMA  shift, and go to state 20
    COLON  shift, and go to state 21


State 10

   18 var_chain: var_strings .

    $default  reduce using rule 18 (var_chain)


State 11

    2 program_start: . program_main
    3              | . const_declaration program_start
    4              | . var_decl program_start
    5              | . fun_definition program_start
    5              | fun_definition . program_start
    6 program_main: . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | . KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | . KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_DEF         shift, and go to state 2
    TK_IDENTIFIER  shift, and go to state 3

    program_start      go to state 22
    program_main       go to state 6
    const_declaration  go to state 7
    var_decl           go to state 8
    var_chain          go to state 9
    var_strings        go to state 10
    fun_definition     go to state 11


State 12

   15 const_assign: TK_IDENTIFIER . OP_ASSIGN expression
   16             | TK_IDENTIFIER . OP_ASSIGN TK_STRING

    OP_ASSIGN  shift, and go to state 23


State 13

   14 const_declaration: KW_CONST const_assign . COLON data_type SEMICOLON

    COLON  shift, and go to state 24


State 14

    6 program_main: KW_DEF KW_MAIN . L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN . L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    L_PARENTHESIS  shift, and go to state 25


State 15

   27 fun_definition: KW_DEF TK_IDENTIFIER . L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER . L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    L_PARENTHESIS  shift, and go to state 26


State 16

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   21            | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 43
    syscall           go to state 44


State 17

    0 $accept: input $end .

    $default  accept


State 18

    3 program_start: const_declaration program_start .

    $default  reduce using rule 3 (program_start)


State 19

    4 program_start: var_decl program_start .

    $default  reduce using rule 4 (program_start)


State 20

   19 var_chain: var_chain COMMA . var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET

    TK_IDENTIFIER  shift, and go to state 3

    var_strings  go to state 45


State 21

   17 var_decl: var_chain COLON . data_type SEMICOLON
   22 data_type: . KW_INTEGER
   23          | . KW_STR
   24          | . KW_REAL
   25          | . KW_BOOLEAN
   26          | . KW_VOID

    KW_VOID     shift, and go to state 46
    KW_INTEGER  shift, and go to state 47
    KW_REAL     shift, and go to state 48
    KW_STR      shift, and go to state 49
    KW_BOOLEAN  shift, and go to state 50

    data_type  go to state 51


State 22

    5 program_start: fun_definition program_start .

    $default  reduce using rule 5 (program_start)


State 23

   15 const_assign: TK_IDENTIFIER OP_ASSIGN . expression
   16             | TK_IDENTIFIER OP_ASSIGN . TK_STRING
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39
    TK_STRING      shift, and go to state 52

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 53
    syscall           go to state 44


State 24

   14 const_declaration: KW_CONST const_assign COLON . data_type SEMICOLON
   22 data_type: . KW_INTEGER
   23          | . KW_STR
   24          | . KW_REAL
   25          | . KW_BOOLEAN
   26          | . KW_VOID

    KW_VOID     shift, and go to state 46
    KW_INTEGER  shift, and go to state 47
    KW_REAL     shift, and go to state 48
    KW_STR      shift, and go to state 49
    KW_BOOLEAN  shift, and go to state 50

    data_type  go to state 54


State 25

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS . R_PARENTHESIS COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS . R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    R_PARENTHESIS  shift, and go to state 55


State 26

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS . fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS . fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON
   29 fun_parameters: . fun_parameter_member COMMA fun_parameters
   30               | . fun_parameter_member
   31               | . %empty  [R_PARENTHESIS]
   32 fun_parameter_member: . TK_IDENTIFIER COLON data_type
   33                     | . TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

    TK_IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 31 (fun_parameters)

    fun_parameters        go to state 57
    fun_parameter_member  go to state 58


State 27

   86 expression: KW_TRUE .

    $default  reduce using rule 86 (expression)


State 28

   87 expression: KW_FALSE .

    $default  reduce using rule 87 (expression)


State 29

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   66           | L_PARENTHESIS . expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 59
    syscall           go to state 44


State 30

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   65           | OP_PLUS . expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 60
    syscall           go to state 44


State 31

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   64           | OP_MINUS . expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 61
    syscall           go to state 44


State 32

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   81           | OP_NOT . expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 62
    syscall           go to state 44


State 33

   93 syscall: FUNC_WSTR . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 63


State 34

   95 syscall: FUNC_WINT . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 64


State 35

   94 syscall: FUNC_WSCAL . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 65


State 36

   96 syscall: FUNC_WRT . L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 66


State 37

   20 var_strings: TK_IDENTIFIER .  [OP_ASSIGN]
   21            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   51 function_call: TK_IDENTIFIER . L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   63                 | TK_IDENTIFIER . L_BRACKET R_BRACKET
   83 expression: TK_IDENTIFIER .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]

    L_PARENTHESIS  shift, and go to state 67
    L_BRACKET      shift, and go to state 68

    OP_ASSIGN  reduce using rule 20 (var_strings)
    $default   reduce using rule 83 (expression)


State 38

   84 expression: TK_INTEGER .

    $default  reduce using rule 84 (expression)


State 39

   85 expression: TK_REAL .

    $default  reduce using rule 85 (expression)


State 40

   90 syscall: var_strings . OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings . OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings . OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    OP_ASSIGN  shift, and go to state 69


State 41

   89 expression: function_call .

    $default  reduce using rule 89 (expression)


State 42

   82 expression: array_expression .

    $default  reduce using rule 82 (expression)


State 43

   21 var_strings: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_BRACKET     shift, and go to state 70
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 44

   88 expression: syscall .

    $default  reduce using rule 88 (expression)


State 45

   19 var_chain: var_chain COMMA var_strings .

    $default  reduce using rule 19 (var_chain)


State 46

   26 data_type: KW_VOID .

    $default  reduce using rule 26 (data_type)


State 47

   22 data_type: KW_INTEGER .

    $default  reduce using rule 22 (data_type)


State 48

   24 data_type: KW_REAL .

    $default  reduce using rule 24 (data_type)


State 49

   23 data_type: KW_STR .

    $default  reduce using rule 23 (data_type)


State 50

   25 data_type: KW_BOOLEAN .

    $default  reduce using rule 25 (data_type)


State 51

   17 var_decl: var_chain COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 52

   16 const_assign: TK_IDENTIFIER OP_ASSIGN TK_STRING .

    $default  reduce using rule 16 (const_assign)


State 53

   15 const_assign: TK_IDENTIFIER OP_ASSIGN expression .  [COLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 15 (const_assign)


State 54

   14 const_declaration: KW_CONST const_assign COLON data_type . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 55

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS . COLON KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS . COLON function_body KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 87


State 56

   32 fun_parameter_member: TK_IDENTIFIER . COLON data_type
   33                     | TK_IDENTIFIER . L_BRACKET R_BRACKET COLON data_type

    L_BRACKET  shift, and go to state 88
    COLON      shift, and go to state 89


State 57

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters . R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters . R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON

    R_PARENTHESIS  shift, and go to state 90


State 58

   29 fun_parameters: fun_parameter_member . COMMA fun_parameters
   30               | fun_parameter_member .  [R_PARENTHESIS]

    COMMA  shift, and go to state 91

    $default  reduce using rule 30 (fun_parameters)


State 59

   66 expression: L_PARENTHESIS expression . R_PARENTHESIS
   67           | expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_PARENTHESIS  shift, and go to state 92
    OP_PLUS        shift, and go to state 71
    OP_MINUS       shift, and go to state 72
    OP_MUL         shift, and go to state 73
    OP_DIV         shift, and go to state 74
    OP_MOD         shift, and go to state 75
    OP_POW         shift, and go to state 76
    OP_EQ          shift, and go to state 77
    OP_NEQ         shift, and go to state 78
    OP_LESS        shift, and go to state 79
    OP_LESSEQ      shift, and go to state 80
    OP_GREATER     shift, and go to state 81
    OP_GREATEREQ   shift, and go to state 82
    OP_AND         shift, and go to state 83
    OP_OR          shift, and go to state 84


State 60

   65 expression: OP_PLUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS]
   67           | expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 65 (expression)

    Conflict between rule 65 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 65 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 65 and token OP_MUL resolved as shift (OP_PLUS < OP_MUL).
    Conflict between rule 65 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 65 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 65 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 65 and token OP_EQ resolved as shift (OP_PLUS < OP_EQ).
    Conflict between rule 65 and token OP_NEQ resolved as shift (OP_PLUS < OP_NEQ).
    Conflict between rule 65 and token OP_LESS resolved as shift (OP_PLUS < OP_LESS).
    Conflict between rule 65 and token OP_LESSEQ resolved as shift (OP_PLUS < OP_LESSEQ).
    Conflict between rule 65 and token OP_GREATER resolved as shift (OP_PLUS < OP_GREATER).
    Conflict between rule 65 and token OP_GREATEREQ resolved as shift (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 65 and token OP_AND resolved as shift (OP_PLUS < OP_AND).
    Conflict between rule 65 and token OP_OR resolved as shift (OP_PLUS < OP_OR).


State 61

   64 expression: OP_MINUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS]
   67           | expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 64 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 64 and token OP_MUL resolved as shift (OP_MINUS < OP_MUL).
    Conflict between rule 64 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 64 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 64 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 64 and token OP_EQ resolved as shift (OP_MINUS < OP_EQ).
    Conflict between rule 64 and token OP_NEQ resolved as shift (OP_MINUS < OP_NEQ).
    Conflict between rule 64 and token OP_LESS resolved as shift (OP_MINUS < OP_LESS).
    Conflict between rule 64 and token OP_LESSEQ resolved as shift (OP_MINUS < OP_LESSEQ).
    Conflict between rule 64 and token OP_GREATER resolved as shift (OP_MINUS < OP_GREATER).
    Conflict between rule 64 and token OP_GREATEREQ resolved as shift (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 64 and token OP_AND resolved as shift (OP_MINUS < OP_AND).
    Conflict between rule 64 and token OP_OR resolved as shift (OP_MINUS < OP_OR).


State 62

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression
   81           | OP_NOT expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token OP_PLUS resolved as reduce (OP_PLUS < OP_NOT).
    Conflict between rule 81 and token OP_MINUS resolved as reduce (OP_MINUS < OP_NOT).
    Conflict between rule 81 and token OP_MUL resolved as reduce (OP_MUL < OP_NOT).
    Conflict between rule 81 and token OP_DIV resolved as reduce (OP_DIV < OP_NOT).
    Conflict between rule 81 and token OP_MOD resolved as reduce (OP_MOD < OP_NOT).
    Conflict between rule 81 and token OP_POW resolved as reduce (OP_POW < OP_NOT).
    Conflict between rule 81 and token OP_EQ resolved as reduce (OP_EQ < OP_NOT).
    Conflict between rule 81 and token OP_NEQ resolved as reduce (OP_NEQ < OP_NOT).
    Conflict between rule 81 and token OP_LESS resolved as reduce (OP_LESS < OP_NOT).
    Conflict between rule 81 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_NOT).
    Conflict between rule 81 and token OP_GREATER resolved as reduce (OP_GREATER < OP_NOT).
    Conflict between rule 81 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_NOT).
    Conflict between rule 81 and token OP_AND resolved as reduce (OP_AND < OP_NOT).
    Conflict between rule 81 and token OP_OR resolved as reduce (OP_OR < OP_NOT).


State 63

   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   93 syscall: FUNC_WSTR L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 93
    TK_STRING      shift, and go to state 94

    array_expression       go to state 95
    syscall_write_content  go to state 96


State 64

   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   95 syscall: FUNC_WINT L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 93
    TK_STRING      shift, and go to state 94

    array_expression       go to state 95
    syscall_write_content  go to state 97


State 65

   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   94 syscall: FUNC_WSCAL L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 93
    TK_STRING      shift, and go to state 94

    array_expression       go to state 95
    syscall_write_content  go to state 98


State 66

   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   96 syscall: FUNC_WRT L_PARENTHESIS . syscall_write_content R_PARENTHESIS SEMICOLON
   97 syscall_write_content: . TK_IDENTIFIER
   98                      | . TK_STRING
   99                      | . array_expression

    TK_IDENTIFIER  shift, and go to state 93
    TK_STRING      shift, and go to state 94

    array_expression       go to state 95
    syscall_write_content  go to state 99


State 67

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   51              | TK_IDENTIFIER L_PARENTHESIS . function_call_chain R_PARENTHESIS
   52 function_call_chain: . %empty  [R_PARENTHESIS, COMMA]
   53                    | . function_call_chain COMMA expression
   54                    | . expression
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    $default  reduce using rule 52 (function_call_chain)

    var_strings          go to state 40
    function_call        go to state 41
    function_call_chain  go to state 100
    array_expression     go to state 42
    expression           go to state 101
    syscall              go to state 44


State 68

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   21            | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63                 | TK_IDENTIFIER L_BRACKET . R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    R_BRACKET      shift, and go to state 102
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 103
    syscall           go to state 44


State 69

   90 syscall: var_strings OP_ASSIGN . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings OP_ASSIGN . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings OP_ASSIGN . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    FUNC_RSTR   shift, and go to state 104
    FUNC_RINT   shift, and go to state 105
    FUNC_RSCAL  shift, and go to state 106


State 70

   21 var_strings: TK_IDENTIFIER L_BRACKET expression R_BRACKET .

    $default  reduce using rule 21 (var_strings)


State 71

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   67           | expression OP_PLUS . expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 107
    syscall           go to state 44


State 72

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   68           | expression OP_MINUS . expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 108
    syscall           go to state 44


State 73

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   69           | expression OP_MUL . expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 109
    syscall           go to state 44


State 74

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   70           | expression OP_DIV . expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 110
    syscall           go to state 44


State 75

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   71           | expression OP_MOD . expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 111
    syscall           go to state 44


State 76

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   72           | expression OP_POW . expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 112
    syscall           go to state 44


State 77

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   73           | expression OP_EQ . expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 113
    syscall           go to state 44


State 78

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   74           | expression OP_NEQ . expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 114
    syscall           go to state 44


State 79

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   75           | expression OP_LESS . expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 115
    syscall           go to state 44


State 80

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   76           | expression OP_LESSEQ . expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 116
    syscall           go to state 44


State 81

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   77           | expression OP_GREATER . expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 117
    syscall           go to state 44


State 82

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   78           | expression OP_GREATEREQ . expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 118
    syscall           go to state 44


State 83

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   79           | expression OP_AND . expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 119
    syscall           go to state 44


State 84

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   80           | expression OP_OR . expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 120
    syscall           go to state 44


State 85

   17 var_decl: var_chain COLON data_type SEMICOLON .

    $default  reduce using rule 17 (var_decl)


State 86

   14 const_declaration: KW_CONST const_assign COLON data_type SEMICOLON .

    $default  reduce using rule 14 (const_declaration)


State 87

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON . KW_ENDDEF SEMICOLON
    7             | KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON . function_body KW_ENDDEF SEMICOLON
    8 function_body: . local_declarations statements
    9              | . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: . local_declarations var_const_decl
   13                   | . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_ENDDEF      shift, and go to state 126
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    function_body       go to state 129
    var_const_decl      go to state 130
    local_declarations  go to state 131
    const_declaration   go to state 132
    var_decl            go to state 133
    var_chain           go to state 9
    var_strings         go to state 134
    statements          go to state 135
    statement           go to state 136
    assign_object       go to state 137
    function_call       go to state 138
    for_loop            go to state 139
    while_loop          go to state 140
    if_block            go to state 141
    return_statement    go to state 142
    syscall             go to state 143


State 88

   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET . R_BRACKET COLON data_type

    R_BRACKET  shift, and go to state 144


State 89

   22 data_type: . KW_INTEGER
   23          | . KW_STR
   24          | . KW_REAL
   25          | . KW_BOOLEAN
   26          | . KW_VOID
   32 fun_parameter_member: TK_IDENTIFIER COLON . data_type

    KW_VOID     shift, and go to state 46
    KW_INTEGER  shift, and go to state 47
    KW_REAL     shift, and go to state 48
    KW_STR      shift, and go to state 49
    KW_BOOLEAN  shift, and go to state 50

    data_type  go to state 145


State 90

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS . OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON
   28               | KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS . COLON function_body KW_ENDDEF SEMICOLON

    COLON     shift, and go to state 146
    OP_MINUS  shift, and go to state 147


State 91

   29 fun_parameters: . fun_parameter_member COMMA fun_parameters
   29               | fun_parameter_member COMMA . fun_parameters
   30               | . fun_parameter_member
   31               | . %empty  [R_PARENTHESIS]
   32 fun_parameter_member: . TK_IDENTIFIER COLON data_type
   33                     | . TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type

    TK_IDENTIFIER  shift, and go to state 56

    $default  reduce using rule 31 (fun_parameters)

    fun_parameters        go to state 148
    fun_parameter_member  go to state 58


State 92

   66 expression: L_PARENTHESIS expression R_PARENTHESIS .

    $default  reduce using rule 66 (expression)


State 93

   62 array_expression: TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   63                 | TK_IDENTIFIER . L_BRACKET R_BRACKET
   97 syscall_write_content: TK_IDENTIFIER .  [R_PARENTHESIS]

    L_BRACKET  shift, and go to state 149

    $default  reduce using rule 97 (syscall_write_content)


State 94

   98 syscall_write_content: TK_STRING .

    $default  reduce using rule 98 (syscall_write_content)


State 95

   99 syscall_write_content: array_expression .

    $default  reduce using rule 99 (syscall_write_content)


State 96

   93 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 150


State 97

   95 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 151


State 98

   94 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 152


State 99

   96 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 153


State 100

   51 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain . R_PARENTHESIS
   53 function_call_chain: function_call_chain . COMMA expression

    R_PARENTHESIS  shift, and go to state 154
    COMMA          shift, and go to state 155


State 101

   54 function_call_chain: expression .  [R_PARENTHESIS, COMMA]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 54 (function_call_chain)


State 102

   63 array_expression: TK_IDENTIFIER L_BRACKET R_BRACKET .

    $default  reduce using rule 63 (array_expression)


State 103

   21 var_strings: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   62 array_expression: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_BRACKET     shift, and go to state 156
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 104

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 157


State 105

   92 syscall: var_strings OP_ASSIGN FUNC_RINT . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 158


State 106

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL . L_PARENTHESIS R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  shift, and go to state 159


State 107

   67 expression: expression . OP_PLUS expression
   67           | expression OP_PLUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS]
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 67 (expression)

    Conflict between rule 67 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 67 and token OP_MINUS resolved as shift (OP_PLUS < OP_MINUS).
    Conflict between rule 67 and token OP_MUL resolved as shift (OP_PLUS < OP_MUL).
    Conflict between rule 67 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 67 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 67 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 67 and token OP_EQ resolved as shift (OP_PLUS < OP_EQ).
    Conflict between rule 67 and token OP_NEQ resolved as shift (OP_PLUS < OP_NEQ).
    Conflict between rule 67 and token OP_LESS resolved as shift (OP_PLUS < OP_LESS).
    Conflict between rule 67 and token OP_LESSEQ resolved as shift (OP_PLUS < OP_LESSEQ).
    Conflict between rule 67 and token OP_GREATER resolved as shift (OP_PLUS < OP_GREATER).
    Conflict between rule 67 and token OP_GREATEREQ resolved as shift (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 67 and token OP_AND resolved as shift (OP_PLUS < OP_AND).
    Conflict between rule 67 and token OP_OR resolved as shift (OP_PLUS < OP_OR).


State 108

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   68           | expression OP_MINUS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS]
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MINUS).
    Conflict between rule 68 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 68 and token OP_MUL resolved as shift (OP_MINUS < OP_MUL).
    Conflict between rule 68 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 68 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 68 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 68 and token OP_EQ resolved as shift (OP_MINUS < OP_EQ).
    Conflict between rule 68 and token OP_NEQ resolved as shift (OP_MINUS < OP_NEQ).
    Conflict between rule 68 and token OP_LESS resolved as shift (OP_MINUS < OP_LESS).
    Conflict between rule 68 and token OP_LESSEQ resolved as shift (OP_MINUS < OP_LESSEQ).
    Conflict between rule 68 and token OP_GREATER resolved as shift (OP_MINUS < OP_GREATER).
    Conflict between rule 68 and token OP_GREATEREQ resolved as shift (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 68 and token OP_AND resolved as shift (OP_MINUS < OP_AND).
    Conflict between rule 68 and token OP_OR resolved as shift (OP_MINUS < OP_OR).


State 109

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   69           | expression OP_MUL expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL]
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MUL).
    Conflict between rule 69 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MUL).
    Conflict between rule 69 and token OP_MUL resolved as reduce (%left OP_MUL).
    Conflict between rule 69 and token OP_DIV resolved as shift (OP_MUL < OP_DIV).
    Conflict between rule 69 and token OP_MOD resolved as shift (OP_MUL < OP_MOD).
    Conflict between rule 69 and token OP_POW resolved as shift (OP_MUL < OP_POW).
    Conflict between rule 69 and token OP_EQ resolved as shift (OP_MUL < OP_EQ).
    Conflict between rule 69 and token OP_NEQ resolved as shift (OP_MUL < OP_NEQ).
    Conflict between rule 69 and token OP_LESS resolved as shift (OP_MUL < OP_LESS).
    Conflict between rule 69 and token OP_LESSEQ resolved as shift (OP_MUL < OP_LESSEQ).
    Conflict between rule 69 and token OP_GREATER resolved as shift (OP_MUL < OP_GREATER).
    Conflict between rule 69 and token OP_GREATEREQ resolved as shift (OP_MUL < OP_GREATEREQ).
    Conflict between rule 69 and token OP_AND resolved as shift (OP_MUL < OP_AND).
    Conflict between rule 69 and token OP_OR resolved as shift (OP_MUL < OP_OR).


State 110

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   70           | expression OP_DIV expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV]
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 70 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 70 and token OP_MUL resolved as reduce (OP_MUL < OP_DIV).
    Conflict between rule 70 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 70 and token OP_MOD resolved as shift (OP_DIV < OP_MOD).
    Conflict between rule 70 and token OP_POW resolved as shift (OP_DIV < OP_POW).
    Conflict between rule 70 and token OP_EQ resolved as shift (OP_DIV < OP_EQ).
    Conflict between rule 70 and token OP_NEQ resolved as shift (OP_DIV < OP_NEQ).
    Conflict between rule 70 and token OP_LESS resolved as shift (OP_DIV < OP_LESS).
    Conflict between rule 70 and token OP_LESSEQ resolved as shift (OP_DIV < OP_LESSEQ).
    Conflict between rule 70 and token OP_GREATER resolved as shift (OP_DIV < OP_GREATER).
    Conflict between rule 70 and token OP_GREATEREQ resolved as shift (OP_DIV < OP_GREATEREQ).
    Conflict between rule 70 and token OP_AND resolved as shift (OP_DIV < OP_AND).
    Conflict between rule 70 and token OP_OR resolved as shift (OP_DIV < OP_OR).


State 111

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   71           | expression OP_MOD expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD]
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 71 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 71 and token OP_MUL resolved as reduce (OP_MUL < OP_MOD).
    Conflict between rule 71 and token OP_DIV resolved as reduce (OP_DIV < OP_MOD).
    Conflict between rule 71 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 71 and token OP_POW resolved as shift (OP_MOD < OP_POW).
    Conflict between rule 71 and token OP_EQ resolved as shift (OP_MOD < OP_EQ).
    Conflict between rule 71 and token OP_NEQ resolved as shift (OP_MOD < OP_NEQ).
    Conflict between rule 71 and token OP_LESS resolved as shift (OP_MOD < OP_LESS).
    Conflict between rule 71 and token OP_LESSEQ resolved as shift (OP_MOD < OP_LESSEQ).
    Conflict between rule 71 and token OP_GREATER resolved as shift (OP_MOD < OP_GREATER).
    Conflict between rule 71 and token OP_GREATEREQ resolved as shift (OP_MOD < OP_GREATEREQ).
    Conflict between rule 71 and token OP_AND resolved as shift (OP_MOD < OP_AND).
    Conflict between rule 71 and token OP_OR resolved as shift (OP_MOD < OP_OR).


State 112

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   72           | expression OP_POW expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD]
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POW).
    Conflict between rule 72 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POW).
    Conflict between rule 72 and token OP_MUL resolved as reduce (OP_MUL < OP_POW).
    Conflict between rule 72 and token OP_DIV resolved as reduce (OP_DIV < OP_POW).
    Conflict between rule 72 and token OP_MOD resolved as reduce (OP_MOD < OP_POW).
    Conflict between rule 72 and token OP_POW resolved as shift (%right OP_POW).
    Conflict between rule 72 and token OP_EQ resolved as shift (OP_POW < OP_EQ).
    Conflict between rule 72 and token OP_NEQ resolved as shift (OP_POW < OP_NEQ).
    Conflict between rule 72 and token OP_LESS resolved as shift (OP_POW < OP_LESS).
    Conflict between rule 72 and token OP_LESSEQ resolved as shift (OP_POW < OP_LESSEQ).
    Conflict between rule 72 and token OP_GREATER resolved as shift (OP_POW < OP_GREATER).
    Conflict between rule 72 and token OP_GREATEREQ resolved as shift (OP_POW < OP_GREATEREQ).
    Conflict between rule 72 and token OP_AND resolved as shift (OP_POW < OP_AND).
    Conflict between rule 72 and token OP_OR resolved as shift (OP_POW < OP_OR).


State 113

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   73           | expression OP_EQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ]
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token OP_PLUS resolved as reduce (OP_PLUS < OP_EQ).
    Conflict between rule 73 and token OP_MINUS resolved as reduce (OP_MINUS < OP_EQ).
    Conflict between rule 73 and token OP_MUL resolved as reduce (OP_MUL < OP_EQ).
    Conflict between rule 73 and token OP_DIV resolved as reduce (OP_DIV < OP_EQ).
    Conflict between rule 73 and token OP_MOD resolved as reduce (OP_MOD < OP_EQ).
    Conflict between rule 73 and token OP_POW resolved as reduce (OP_POW < OP_EQ).
    Conflict between rule 73 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 73 and token OP_NEQ resolved as shift (OP_EQ < OP_NEQ).
    Conflict between rule 73 and token OP_LESS resolved as shift (OP_EQ < OP_LESS).
    Conflict between rule 73 and token OP_LESSEQ resolved as shift (OP_EQ < OP_LESSEQ).
    Conflict between rule 73 and token OP_GREATER resolved as shift (OP_EQ < OP_GREATER).
    Conflict between rule 73 and token OP_GREATEREQ resolved as shift (OP_EQ < OP_GREATEREQ).
    Conflict between rule 73 and token OP_AND resolved as shift (OP_EQ < OP_AND).
    Conflict between rule 73 and token OP_OR resolved as shift (OP_EQ < OP_OR).


State 114

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   74           | expression OP_NEQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ]
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token OP_PLUS resolved as reduce (OP_PLUS < OP_NEQ).
    Conflict between rule 74 and token OP_MINUS resolved as reduce (OP_MINUS < OP_NEQ).
    Conflict between rule 74 and token OP_MUL resolved as reduce (OP_MUL < OP_NEQ).
    Conflict between rule 74 and token OP_DIV resolved as reduce (OP_DIV < OP_NEQ).
    Conflict between rule 74 and token OP_MOD resolved as reduce (OP_MOD < OP_NEQ).
    Conflict between rule 74 and token OP_POW resolved as reduce (OP_POW < OP_NEQ).
    Conflict between rule 74 and token OP_EQ resolved as reduce (OP_EQ < OP_NEQ).
    Conflict between rule 74 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 74 and token OP_LESS resolved as shift (OP_NEQ < OP_LESS).
    Conflict between rule 74 and token OP_LESSEQ resolved as shift (OP_NEQ < OP_LESSEQ).
    Conflict between rule 74 and token OP_GREATER resolved as shift (OP_NEQ < OP_GREATER).
    Conflict between rule 74 and token OP_GREATEREQ resolved as shift (OP_NEQ < OP_GREATEREQ).
    Conflict between rule 74 and token OP_AND resolved as shift (OP_NEQ < OP_AND).
    Conflict between rule 74 and token OP_OR resolved as shift (OP_NEQ < OP_OR).


State 115

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   75           | expression OP_LESS expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS]
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token OP_PLUS resolved as reduce (OP_PLUS < OP_LESS).
    Conflict between rule 75 and token OP_MINUS resolved as reduce (OP_MINUS < OP_LESS).
    Conflict between rule 75 and token OP_MUL resolved as reduce (OP_MUL < OP_LESS).
    Conflict between rule 75 and token OP_DIV resolved as reduce (OP_DIV < OP_LESS).
    Conflict between rule 75 and token OP_MOD resolved as reduce (OP_MOD < OP_LESS).
    Conflict between rule 75 and token OP_POW resolved as reduce (OP_POW < OP_LESS).
    Conflict between rule 75 and token OP_EQ resolved as reduce (OP_EQ < OP_LESS).
    Conflict between rule 75 and token OP_NEQ resolved as reduce (OP_NEQ < OP_LESS).
    Conflict between rule 75 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 75 and token OP_LESSEQ resolved as shift (OP_LESS < OP_LESSEQ).
    Conflict between rule 75 and token OP_GREATER resolved as shift (OP_LESS < OP_GREATER).
    Conflict between rule 75 and token OP_GREATEREQ resolved as shift (OP_LESS < OP_GREATEREQ).
    Conflict between rule 75 and token OP_AND resolved as shift (OP_LESS < OP_AND).
    Conflict between rule 75 and token OP_OR resolved as shift (OP_LESS < OP_OR).


State 116

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   76           | expression OP_LESSEQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ]
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token OP_PLUS resolved as reduce (OP_PLUS < OP_LESSEQ).
    Conflict between rule 76 and token OP_MINUS resolved as reduce (OP_MINUS < OP_LESSEQ).
    Conflict between rule 76 and token OP_MUL resolved as reduce (OP_MUL < OP_LESSEQ).
    Conflict between rule 76 and token OP_DIV resolved as reduce (OP_DIV < OP_LESSEQ).
    Conflict between rule 76 and token OP_MOD resolved as reduce (OP_MOD < OP_LESSEQ).
    Conflict between rule 76 and token OP_POW resolved as reduce (OP_POW < OP_LESSEQ).
    Conflict between rule 76 and token OP_EQ resolved as reduce (OP_EQ < OP_LESSEQ).
    Conflict between rule 76 and token OP_NEQ resolved as reduce (OP_NEQ < OP_LESSEQ).
    Conflict between rule 76 and token OP_LESS resolved as reduce (OP_LESS < OP_LESSEQ).
    Conflict between rule 76 and token OP_LESSEQ resolved as reduce (%left OP_LESSEQ).
    Conflict between rule 76 and token OP_GREATER resolved as shift (OP_LESSEQ < OP_GREATER).
    Conflict between rule 76 and token OP_GREATEREQ resolved as shift (OP_LESSEQ < OP_GREATEREQ).
    Conflict between rule 76 and token OP_AND resolved as shift (OP_LESSEQ < OP_AND).
    Conflict between rule 76 and token OP_OR resolved as shift (OP_LESSEQ < OP_OR).


State 117

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   77           | expression OP_GREATER expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER]
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token OP_PLUS resolved as reduce (OP_PLUS < OP_GREATER).
    Conflict between rule 77 and token OP_MINUS resolved as reduce (OP_MINUS < OP_GREATER).
    Conflict between rule 77 and token OP_MUL resolved as reduce (OP_MUL < OP_GREATER).
    Conflict between rule 77 and token OP_DIV resolved as reduce (OP_DIV < OP_GREATER).
    Conflict between rule 77 and token OP_MOD resolved as reduce (OP_MOD < OP_GREATER).
    Conflict between rule 77 and token OP_POW resolved as reduce (OP_POW < OP_GREATER).
    Conflict between rule 77 and token OP_EQ resolved as reduce (OP_EQ < OP_GREATER).
    Conflict between rule 77 and token OP_NEQ resolved as reduce (OP_NEQ < OP_GREATER).
    Conflict between rule 77 and token OP_LESS resolved as reduce (OP_LESS < OP_GREATER).
    Conflict between rule 77 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_GREATER).
    Conflict between rule 77 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 77 and token OP_GREATEREQ resolved as shift (OP_GREATER < OP_GREATEREQ).
    Conflict between rule 77 and token OP_AND resolved as shift (OP_GREATER < OP_AND).
    Conflict between rule 77 and token OP_OR resolved as shift (OP_GREATER < OP_OR).


State 118

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   78           | expression OP_GREATEREQ expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ]
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_AND  shift, and go to state 83
    OP_OR   shift, and go to state 84

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token OP_PLUS resolved as reduce (OP_PLUS < OP_GREATEREQ).
    Conflict between rule 78 and token OP_MINUS resolved as reduce (OP_MINUS < OP_GREATEREQ).
    Conflict between rule 78 and token OP_MUL resolved as reduce (OP_MUL < OP_GREATEREQ).
    Conflict between rule 78 and token OP_DIV resolved as reduce (OP_DIV < OP_GREATEREQ).
    Conflict between rule 78 and token OP_MOD resolved as reduce (OP_MOD < OP_GREATEREQ).
    Conflict between rule 78 and token OP_POW resolved as reduce (OP_POW < OP_GREATEREQ).
    Conflict between rule 78 and token OP_EQ resolved as reduce (OP_EQ < OP_GREATEREQ).
    Conflict between rule 78 and token OP_NEQ resolved as reduce (OP_NEQ < OP_GREATEREQ).
    Conflict between rule 78 and token OP_LESS resolved as reduce (OP_LESS < OP_GREATEREQ).
    Conflict between rule 78 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_GREATEREQ).
    Conflict between rule 78 and token OP_GREATER resolved as reduce (OP_GREATER < OP_GREATEREQ).
    Conflict between rule 78 and token OP_GREATEREQ resolved as reduce (%left OP_GREATEREQ).
    Conflict between rule 78 and token OP_AND resolved as shift (OP_GREATEREQ < OP_AND).
    Conflict between rule 78 and token OP_OR resolved as shift (OP_GREATEREQ < OP_OR).


State 119

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   79           | expression OP_AND expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND]
   80           | expression . OP_OR expression

    OP_OR  shift, and go to state 84

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token OP_PLUS resolved as reduce (OP_PLUS < OP_AND).
    Conflict between rule 79 and token OP_MINUS resolved as reduce (OP_MINUS < OP_AND).
    Conflict between rule 79 and token OP_MUL resolved as reduce (OP_MUL < OP_AND).
    Conflict between rule 79 and token OP_DIV resolved as reduce (OP_DIV < OP_AND).
    Conflict between rule 79 and token OP_MOD resolved as reduce (OP_MOD < OP_AND).
    Conflict between rule 79 and token OP_POW resolved as reduce (OP_POW < OP_AND).
    Conflict between rule 79 and token OP_EQ resolved as reduce (OP_EQ < OP_AND).
    Conflict between rule 79 and token OP_NEQ resolved as reduce (OP_NEQ < OP_AND).
    Conflict between rule 79 and token OP_LESS resolved as reduce (OP_LESS < OP_AND).
    Conflict between rule 79 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_AND).
    Conflict between rule 79 and token OP_GREATER resolved as reduce (OP_GREATER < OP_AND).
    Conflict between rule 79 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_AND).
    Conflict between rule 79 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 79 and token OP_OR resolved as shift (OP_AND < OP_OR).


State 120

   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression
   80           | expression OP_OR expression .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token OP_PLUS resolved as reduce (OP_PLUS < OP_OR).
    Conflict between rule 80 and token OP_MINUS resolved as reduce (OP_MINUS < OP_OR).
    Conflict between rule 80 and token OP_MUL resolved as reduce (OP_MUL < OP_OR).
    Conflict between rule 80 and token OP_DIV resolved as reduce (OP_DIV < OP_OR).
    Conflict between rule 80 and token OP_MOD resolved as reduce (OP_MOD < OP_OR).
    Conflict between rule 80 and token OP_POW resolved as reduce (OP_POW < OP_OR).
    Conflict between rule 80 and token OP_EQ resolved as reduce (OP_EQ < OP_OR).
    Conflict between rule 80 and token OP_NEQ resolved as reduce (OP_NEQ < OP_OR).
    Conflict between rule 80 and token OP_LESS resolved as reduce (OP_LESS < OP_OR).
    Conflict between rule 80 and token OP_LESSEQ resolved as reduce (OP_LESSEQ < OP_OR).
    Conflict between rule 80 and token OP_GREATER resolved as reduce (OP_GREATER < OP_OR).
    Conflict between rule 80 and token OP_GREATEREQ resolved as reduce (OP_GREATEREQ < OP_OR).
    Conflict between rule 80 and token OP_AND resolved as reduce (OP_AND < OP_OR).
    Conflict between rule 80 and token OP_OR resolved as reduce (%left OP_OR).


State 121

   58 if_block: KW_IF . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

    L_PARENTHESIS  shift, and go to state 160


State 122

   55 for_loop: KW_FOR . TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR . TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

    TK_IDENTIFIER  shift, and go to state 161


State 123

   57 while_loop: KW_WHILE . L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON

    L_PARENTHESIS  shift, and go to state 162


State 124

   39 statement: KW_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 163


State 125

   38 statement: KW_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 164


State 126

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 165


State 127

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   60 return_statement: KW_RETURN . SEMICOLON
   61                 | KW_RETURN . expression SEMICOLON
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    SEMICOLON      shift, and go to state 166
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 167
    syscall           go to state 44


State 128

   20 var_strings: TK_IDENTIFIER .  [COMMA, COLON, OP_ASSIGN, OP_ASSIGN_INCR, OP_ASSIGN_DEC, OP_ASSIGN_MUL, OP_ASSIGN_DIV, OP_ASSIGN_MOD]
   21            | TK_IDENTIFIER . L_BRACKET expression R_BRACKET
   51 function_call: TK_IDENTIFIER . L_PARENTHESIS function_call_chain R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 67
    L_BRACKET      shift, and go to state 16

    $default  reduce using rule 20 (var_strings)


State 129

    7 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body . KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 168


State 130

   13 local_declarations: var_const_decl .

    $default  reduce using rule 13 (local_declarations)


State 131

    8 function_body: local_declarations . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: local_declarations . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_const_decl     go to state 169
    const_declaration  go to state 132
    var_decl           go to state 133
    var_chain          go to state 9
    var_strings        go to state 134
    statements         go to state 170
    statement          go to state 136
    assign_object      go to state 137
    function_call      go to state 138
    for_loop           go to state 139
    while_loop         go to state 140
    if_block           go to state 141
    return_statement   go to state 142
    syscall            go to state 143


State 132

   11 var_const_decl: const_declaration .

    $default  reduce using rule 11 (var_const_decl)


State 133

   10 var_const_decl: var_decl .

    $default  reduce using rule 10 (var_const_decl)


State 134

   18 var_chain: var_strings .  [COMMA, COLON]
   45 assign_object: var_strings . OP_ASSIGN expression
   46              | var_strings . OP_ASSIGN_INCR expression
   47              | var_strings . OP_ASSIGN_DEC expression
   48              | var_strings . OP_ASSIGN_MUL expression
   49              | var_strings . OP_ASSIGN_DIV expression
   50              | var_strings . OP_ASSIGN_MOD expression
   90 syscall: var_strings . OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings . OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings . OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    OP_ASSIGN       shift, and go to state 171
    OP_ASSIGN_INCR  shift, and go to state 172
    OP_ASSIGN_DEC   shift, and go to state 173
    OP_ASSIGN_MUL   shift, and go to state 174
    OP_ASSIGN_DIV   shift, and go to state 175
    OP_ASSIGN_MOD   shift, and go to state 176

    $default  reduce using rule 18 (var_chain)


State 135

    9 function_body: statements .  [KW_ENDDEF]
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    $default  reduce using rule 9 (function_body)

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 136

   34 statements: statement .

    $default  reduce using rule 34 (statements)


State 137

   36 statement: assign_object . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 138

   37 statement: function_call . SEMICOLON

    SEMICOLON  shift, and go to state 180


State 139

   40 statement: for_loop .

    $default  reduce using rule 40 (statement)


State 140

   41 statement: while_loop .

    $default  reduce using rule 41 (statement)


State 141

   42 statement: if_block .

    $default  reduce using rule 42 (statement)


State 142

   43 statement: return_statement .

    $default  reduce using rule 43 (statement)


State 143

   44 statement: syscall .

    $default  reduce using rule 44 (statement)


State 144

   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET . COLON data_type

    COLON  shift, and go to state 181


State 145

   32 fun_parameter_member: TK_IDENTIFIER COLON data_type .

    $default  reduce using rule 32 (fun_parameter_member)


State 146

    8 function_body: . local_declarations statements
    9              | . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: . local_declarations var_const_decl
   13                   | . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON . function_body KW_ENDDEF SEMICOLON
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    function_body       go to state 182
    var_const_decl      go to state 130
    local_declarations  go to state 131
    const_declaration   go to state 132
    var_decl            go to state 133
    var_chain           go to state 9
    var_strings         go to state 134
    statements          go to state 135
    statement           go to state 136
    assign_object       go to state 137
    function_call       go to state 138
    for_loop            go to state 139
    while_loop          go to state 140
    if_block            go to state 141
    return_statement    go to state 142
    syscall             go to state 143


State 147

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS . OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON

    OP_GREATER  shift, and go to state 183


State 148

   29 fun_parameters: fun_parameter_member COMMA fun_parameters .

    $default  reduce using rule 29 (fun_parameters)


State 149

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   62                 | TK_IDENTIFIER L_BRACKET . expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   63                 | TK_IDENTIFIER L_BRACKET . R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    R_BRACKET      shift, and go to state 102
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 184
    syscall           go to state 44


State 150

   93 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 185


State 151

   95 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 186


State 152

   94 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 187


State 153

   96 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 188


State 154

   51 function_call: TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS .

    $default  reduce using rule 51 (function_call)


State 155

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   53 function_call_chain: function_call_chain COMMA . expression
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 189
    syscall           go to state 44


State 156

   21 var_strings: TK_IDENTIFIER L_BRACKET expression R_BRACKET .  [OP_ASSIGN]
   62 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET .  [SEMICOLON, R_PARENTHESIS, COMMA, R_BRACKET, COLON, OP_PLUS, OP_MINUS, OP_MUL, OP_DIV, OP_MOD, OP_POW, OP_EQ, OP_NEQ, OP_LESS, OP_LESSEQ, OP_GREATER, OP_GREATEREQ, OP_AND, OP_OR]

    OP_ASSIGN  reduce using rule 21 (var_strings)
    $default   reduce using rule 62 (array_expression)


State 157

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 190


State 158

   92 syscall: var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 191


State 159

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS . R_PARENTHESIS SEMICOLON

    R_PARENTHESIS  shift, and go to state 192


State 160

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   58 if_block: KW_IF L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 193
    syscall           go to state 44


State 161

   55 for_loop: KW_FOR TK_IDENTIFIER . KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER . KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 194


State 162

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   57 while_loop: KW_WHILE L_PARENTHESIS . expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 195
    syscall           go to state 44


State 163

   39 statement: KW_BREAK SEMICOLON .

    $default  reduce using rule 39 (statement)


State 164

   38 statement: KW_CONTINUE SEMICOLON .

    $default  reduce using rule 38 (statement)


State 165

    6 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON KW_ENDDEF SEMICOLON .

    $default  reduce using rule 6 (program_main)


State 166

   60 return_statement: KW_RETURN SEMICOLON .

    $default  reduce using rule 60 (return_statement)


State 167

   61 return_statement: KW_RETURN expression . SEMICOLON
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    SEMICOLON     shift, and go to state 196
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 168

    7 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 169

   12 local_declarations: local_declarations var_const_decl .

    $default  reduce using rule 12 (local_declarations)


State 170

    8 function_body: local_declarations statements .  [KW_ENDDEF]
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    $default  reduce using rule 8 (function_body)

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 171

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   45 assign_object: var_strings OP_ASSIGN . expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   90        | var_strings OP_ASSIGN . FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings OP_ASSIGN . FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings OP_ASSIGN . FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_RSTR      shift, and go to state 104
    FUNC_RINT      shift, and go to state 105
    FUNC_RSCAL     shift, and go to state 106
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 198
    syscall           go to state 44


State 172

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   46 assign_object: var_strings OP_ASSIGN_INCR . expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 199
    syscall           go to state 44


State 173

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   47 assign_object: var_strings OP_ASSIGN_DEC . expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 200
    syscall           go to state 44


State 174

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   48 assign_object: var_strings OP_ASSIGN_MUL . expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 201
    syscall           go to state 44


State 175

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   49 assign_object: var_strings OP_ASSIGN_DIV . expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 202
    syscall           go to state 44


State 176

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   50 assign_object: var_strings OP_ASSIGN_MOD . expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 203
    syscall           go to state 44


State 177

   45 assign_object: var_strings . OP_ASSIGN expression
   46              | var_strings . OP_ASSIGN_INCR expression
   47              | var_strings . OP_ASSIGN_DEC expression
   48              | var_strings . OP_ASSIGN_MUL expression
   49              | var_strings . OP_ASSIGN_DIV expression
   50              | var_strings . OP_ASSIGN_MOD expression
   90 syscall: var_strings . OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | var_strings . OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | var_strings . OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON

    OP_ASSIGN       shift, and go to state 171
    OP_ASSIGN_INCR  shift, and go to state 172
    OP_ASSIGN_DEC   shift, and go to state 173
    OP_ASSIGN_MUL   shift, and go to state 174
    OP_ASSIGN_DIV   shift, and go to state 175
    OP_ASSIGN_MOD   shift, and go to state 176


State 178

   35 statements: statements statement .

    $default  reduce using rule 35 (statements)


State 179

   36 statement: assign_object SEMICOLON .

    $default  reduce using rule 36 (statement)


State 180

   37 statement: function_call SEMICOLON .

    $default  reduce using rule 37 (statement)


State 181

   22 data_type: . KW_INTEGER
   23          | . KW_STR
   24          | . KW_REAL
   25          | . KW_BOOLEAN
   26          | . KW_VOID
   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET COLON . data_type

    KW_VOID     shift, and go to state 46
    KW_INTEGER  shift, and go to state 47
    KW_REAL     shift, and go to state 48
    KW_STR      shift, and go to state 49
    KW_BOOLEAN  shift, and go to state 50

    data_type  go to state 204


State 182

   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body . KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 205


State 183

   22 data_type: . KW_INTEGER
   23          | . KW_STR
   24          | . KW_REAL
   25          | . KW_BOOLEAN
   26          | . KW_VOID
   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER . data_type COLON function_body KW_ENDDEF SEMICOLON

    KW_VOID     shift, and go to state 46
    KW_INTEGER  shift, and go to state 47
    KW_REAL     shift, and go to state 48
    KW_STR      shift, and go to state 49
    KW_BOOLEAN  shift, and go to state 50

    data_type  go to state 206


State 184

   62 array_expression: TK_IDENTIFIER L_BRACKET expression . R_BRACKET
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_BRACKET     shift, and go to state 207
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 185

   93 syscall: FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 93 (syscall)


State 186

   95 syscall: FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 95 (syscall)


State 187

   94 syscall: FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 94 (syscall)


State 188

   96 syscall: FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 96 (syscall)


State 189

   53 function_call_chain: function_call_chain COMMA expression .  [R_PARENTHESIS, COMMA]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 53 (function_call_chain)


State 190

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 208


State 191

   92 syscall: var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 209


State 192

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS . SEMICOLON

    SEMICOLON  shift, and go to state 210


State 193

   58 if_block: KW_IF L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_PARENTHESIS  shift, and go to state 211
    OP_PLUS        shift, and go to state 71
    OP_MINUS       shift, and go to state 72
    OP_MUL         shift, and go to state 73
    OP_DIV         shift, and go to state 74
    OP_MOD         shift, and go to state 75
    OP_POW         shift, and go to state 76
    OP_EQ          shift, and go to state 77
    OP_NEQ         shift, and go to state 78
    OP_LESS        shift, and go to state 79
    OP_LESSEQ      shift, and go to state 80
    OP_GREATER     shift, and go to state 81
    OP_GREATEREQ   shift, and go to state 82
    OP_AND         shift, and go to state 83
    OP_OR          shift, and go to state 84


State 194

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN . L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN . L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON

    L_BRACKET  shift, and go to state 212


State 195

   57 while_loop: KW_WHILE L_PARENTHESIS expression . R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_PARENTHESIS  shift, and go to state 213
    OP_PLUS        shift, and go to state 71
    OP_MINUS       shift, and go to state 72
    OP_MUL         shift, and go to state 73
    OP_DIV         shift, and go to state 74
    OP_MOD         shift, and go to state 75
    OP_POW         shift, and go to state 76
    OP_EQ          shift, and go to state 77
    OP_NEQ         shift, and go to state 78
    OP_LESS        shift, and go to state 79
    OP_LESSEQ      shift, and go to state 80
    OP_GREATER     shift, and go to state 81
    OP_GREATEREQ   shift, and go to state 82
    OP_AND         shift, and go to state 83
    OP_OR          shift, and go to state 84


State 196

   61 return_statement: KW_RETURN expression SEMICOLON .

    $default  reduce using rule 61 (return_statement)


State 197

    7 program_main: KW_DEF KW_MAIN L_PARENTHESIS R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON .

    $default  reduce using rule 7 (program_main)


State 198

   45 assign_object: var_strings OP_ASSIGN expression .  [SEMICOLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 45 (assign_object)


State 199

   46 assign_object: var_strings OP_ASSIGN_INCR expression .  [SEMICOLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 46 (assign_object)


State 200

   47 assign_object: var_strings OP_ASSIGN_DEC expression .  [SEMICOLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 47 (assign_object)


State 201

   48 assign_object: var_strings OP_ASSIGN_MUL expression .  [SEMICOLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 48 (assign_object)


State 202

   49 assign_object: var_strings OP_ASSIGN_DIV expression .  [SEMICOLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 49 (assign_object)


State 203

   50 assign_object: var_strings OP_ASSIGN_MOD expression .  [SEMICOLON]
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84

    $default  reduce using rule 50 (assign_object)


State 204

   33 fun_parameter_member: TK_IDENTIFIER L_BRACKET R_BRACKET COLON data_type .

    $default  reduce using rule 33 (fun_parameter_member)


State 205

   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 214


State 206

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type . COLON function_body KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 215


State 207

   62 array_expression: TK_IDENTIFIER L_BRACKET expression R_BRACKET .

    $default  reduce using rule 62 (array_expression)


State 208

   90 syscall: var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 90 (syscall)


State 209

   92 syscall: var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 92 (syscall)


State 210

   91 syscall: var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON .

    $default  reduce using rule 91 (syscall)


State 211

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON

    COLON  shift, and go to state 216


State 212

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET . expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET . expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 217
    syscall           go to state 44


State 213

   57 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS . COLON statements KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 218


State 214

   28 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS COLON function_body KW_ENDDEF SEMICOLON .

    $default  reduce using rule 28 (fun_definition)


State 215

    8 function_body: . local_declarations statements
    9              | . statements
   10 var_const_decl: . var_decl
   11               | . const_declaration
   12 local_declarations: . local_declarations var_const_decl
   13                   | . var_const_decl
   14 const_declaration: . KW_CONST const_assign COLON data_type SEMICOLON
   17 var_decl: . var_chain COLON data_type SEMICOLON
   18 var_chain: . var_strings
   19          | . var_chain COMMA var_strings
   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON . function_body KW_ENDDEF SEMICOLON
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_CONST       shift, and go to state 1
    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    function_body       go to state 219
    var_const_decl      go to state 130
    local_declarations  go to state 131
    const_declaration   go to state 132
    var_decl            go to state 133
    var_chain           go to state 9
    var_strings         go to state 134
    statements          go to state 135
    statement           go to state 136
    assign_object       go to state 137
    function_call       go to state 138
    for_loop            go to state 139
    while_loop          go to state 140
    if_block            go to state 141
    return_statement    go to state 142
    syscall             go to state 143


State 216

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statements        go to state 220
    statement         go to state 136
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 217

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression . COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression . COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    COLON         shift, and go to state 221
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 218

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57           | KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON . statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statements        go to state 222
    statement         go to state 136
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 219

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body . KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 223


State 220

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   58         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_ELSE        shift, and go to state 224
    KW_ENDIF       shift, and go to state 225
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 221

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON . expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON . expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 226
    syscall           go to state 44


State 222

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   57           | KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements . KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_ENDWHILE    shift, and go to state 227
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 223

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF . SEMICOLON

    SEMICOLON  shift, and go to state 228


State 224

   59 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE . COLON statements KW_ENDIF SEMICOLON

    COLON  shift, and go to state 229


State 225

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 230


State 226

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression . R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression . COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_BRACKET     shift, and go to state 231
    COLON         shift, and go to state 232
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 227

   57 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE . SEMICOLON

    SEMICOLON  shift, and go to state 233


State 228

   27 fun_definition: KW_DEF TK_IDENTIFIER L_PARENTHESIS fun_parameters R_PARENTHESIS OP_MINUS OP_GREATER data_type COLON function_body KW_ENDDEF SEMICOLON .

    $default  reduce using rule 27 (fun_definition)


State 229

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON . statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statements        go to state 234
    statement         go to state 136
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 230

   58 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON .

    $default  reduce using rule 58 (if_block)


State 231

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET . COLON statements KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 235


State 232

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   56 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON . expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   62 array_expression: . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   63                 | . TK_IDENTIFIER L_BRACKET R_BRACKET
   64 expression: . OP_MINUS expression
   65           | . OP_PLUS expression
   66           | . L_PARENTHESIS expression R_PARENTHESIS
   67           | . expression OP_PLUS expression
   68           | . expression OP_MINUS expression
   69           | . expression OP_MUL expression
   70           | . expression OP_DIV expression
   71           | . expression OP_MOD expression
   72           | . expression OP_POW expression
   73           | . expression OP_EQ expression
   74           | . expression OP_NEQ expression
   75           | . expression OP_LESS expression
   76           | . expression OP_LESSEQ expression
   77           | . expression OP_GREATER expression
   78           | . expression OP_GREATEREQ expression
   79           | . expression OP_AND expression
   80           | . expression OP_OR expression
   81           | . OP_NOT expression
   82           | . array_expression
   83           | . TK_IDENTIFIER
   84           | . TK_INTEGER
   85           | . TK_REAL
   86           | . KW_TRUE
   87           | . KW_FALSE
   88           | . syscall
   89           | . function_call
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_TRUE        shift, and go to state 27
    KW_FALSE       shift, and go to state 28
    L_PARENTHESIS  shift, and go to state 29
    OP_PLUS        shift, and go to state 30
    OP_MINUS       shift, and go to state 31
    OP_NOT         shift, and go to state 32
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    TK_INTEGER     shift, and go to state 38
    TK_REAL        shift, and go to state 39

    var_strings       go to state 40
    function_call     go to state 41
    array_expression  go to state 42
    expression        go to state 236
    syscall           go to state 44


State 233

   57 while_loop: KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON .

    $default  reduce using rule 57 (while_loop)


State 234

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   59         | KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements . KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_ENDIF       shift, and go to state 237
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 235

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON . statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statements        go to state 238
    statement         go to state 136
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 236

   56 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression . R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   67 expression: expression . OP_PLUS expression
   68           | expression . OP_MINUS expression
   69           | expression . OP_MUL expression
   70           | expression . OP_DIV expression
   71           | expression . OP_MOD expression
   72           | expression . OP_POW expression
   73           | expression . OP_EQ expression
   74           | expression . OP_NEQ expression
   75           | expression . OP_LESS expression
   76           | expression . OP_LESSEQ expression
   77           | expression . OP_GREATER expression
   78           | expression . OP_GREATEREQ expression
   79           | expression . OP_AND expression
   80           | expression . OP_OR expression

    R_BRACKET     shift, and go to state 239
    OP_PLUS       shift, and go to state 71
    OP_MINUS      shift, and go to state 72
    OP_MUL        shift, and go to state 73
    OP_DIV        shift, and go to state 74
    OP_MOD        shift, and go to state 75
    OP_POW        shift, and go to state 76
    OP_EQ         shift, and go to state 77
    OP_NEQ        shift, and go to state 78
    OP_LESS       shift, and go to state 79
    OP_LESSEQ     shift, and go to state 80
    OP_GREATER    shift, and go to state 81
    OP_GREATEREQ  shift, and go to state 82
    OP_AND        shift, and go to state 83
    OP_OR         shift, and go to state 84


State 237

   59 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 240


State 238

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   55         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements . KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_ENDFOR      shift, and go to state 241
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 239

   56 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET . COLON statements KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 242


State 240

   59 if_block: KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON .

    $default  reduce using rule 59 (if_block)


State 241

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR . SEMICOLON

    SEMICOLON  shift, and go to state 243


State 242

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   34 statements: . statement
   35           | . statements statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON . statements KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statements        go to state 244
    statement         go to state 136
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 243

   55 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON .

    $default  reduce using rule 55 (for_loop)


State 244

   20 var_strings: . TK_IDENTIFIER
   21            | . TK_IDENTIFIER L_BRACKET expression R_BRACKET
   35 statements: statements . statement
   36 statement: . assign_object SEMICOLON
   37          | . function_call SEMICOLON
   38          | . KW_CONTINUE SEMICOLON
   39          | . KW_BREAK SEMICOLON
   40          | . for_loop
   41          | . while_loop
   42          | . if_block
   43          | . return_statement
   44          | . syscall
   45 assign_object: . var_strings OP_ASSIGN expression
   46              | . var_strings OP_ASSIGN_INCR expression
   47              | . var_strings OP_ASSIGN_DEC expression
   48              | . var_strings OP_ASSIGN_MUL expression
   49              | . var_strings OP_ASSIGN_DIV expression
   50              | . var_strings OP_ASSIGN_MOD expression
   51 function_call: . TK_IDENTIFIER L_PARENTHESIS function_call_chain R_PARENTHESIS
   55 for_loop: . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | . KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON
   56         | KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements . KW_ENDFOR SEMICOLON
   57 while_loop: . KW_WHILE L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDWHILE SEMICOLON
   58 if_block: . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ENDIF SEMICOLON
   59         | . KW_IF L_PARENTHESIS expression R_PARENTHESIS COLON statements KW_ELSE COLON statements KW_ENDIF SEMICOLON
   60 return_statement: . KW_RETURN SEMICOLON
   61                 | . KW_RETURN expression SEMICOLON
   90 syscall: . var_strings OP_ASSIGN FUNC_RSTR L_PARENTHESIS R_PARENTHESIS SEMICOLON
   91        | . var_strings OP_ASSIGN FUNC_RSCAL L_PARENTHESIS R_PARENTHESIS SEMICOLON
   92        | . var_strings OP_ASSIGN FUNC_RINT L_PARENTHESIS R_PARENTHESIS SEMICOLON
   93        | . FUNC_WSTR L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   94        | . FUNC_WSCAL L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   95        | . FUNC_WINT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON
   96        | . FUNC_WRT L_PARENTHESIS syscall_write_content R_PARENTHESIS SEMICOLON

    KW_IF          shift, and go to state 121
    KW_FOR         shift, and go to state 122
    KW_ENDFOR      shift, and go to state 245
    KW_WHILE       shift, and go to state 123
    KW_BREAK       shift, and go to state 124
    KW_CONTINUE    shift, and go to state 125
    KW_RETURN      shift, and go to state 127
    FUNC_WSTR      shift, and go to state 33
    FUNC_WINT      shift, and go to state 34
    FUNC_WSCAL     shift, and go to state 35
    FUNC_WRT       shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 128

    var_strings       go to state 177
    statement         go to state 178
    assign_object     go to state 137
    function_call     go to state 138
    for_loop          go to state 139
    while_loop        go to state 140
    if_block          go to state 141
    return_statement  go to state 142
    syscall           go to state 143


State 245

   56 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR . SEMICOLON

    SEMICOLON  shift, and go to state 246


State 246

   56 for_loop: KW_FOR TK_IDENTIFIER KW_IN L_BRACKET expression COLON expression COLON expression R_BRACKET COLON statements KW_ENDFOR SEMICOLON .

    $default  reduce using rule 56 (for_loop)
