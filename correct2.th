-- This programs keeps record of the outcome scores
-- of 6 matches between Olympiacos and Panathinaikos
-- It stores the data in arrays and perform multiple
-- operations on them using for and while loops. It
-- prints the scores, the difference between the scores
-- and the average score per team for the 6 matches 
-- by iterating through the arrays

olympiacos[6], panathinaikos[6]: integer;
difference[6]: integer;
olympiacosWins, panathinaikosWins: integer;

const scoreBoardSize = 6: integer;

def allocateScores():

    olympiacosWins = 0;
    panathinaikosWins = 0;
    
    olympiacos[0] = 1;
    panathinaikos[0] = 2;

    olympiacos[1] = 3;
    panathinaikos[1] = 0;

    olympiacos[2] = 2;
    panathinaikos[2] = 2;

    olympiacos[3] = 1;
    panathinaikos[3] = 3;

    olympiacos[4] = 4;
    panathinaikos[4] = 2;

    olympiacos[5] = 2;
    panathinaikos[5] = 1;

enddef;


def calculateDifference(o[]:integer, p[]:integer):

    j, j_out: integer;

    for i in [0:scoreBoardSize]:
        
        if(o[i] == p[i]):
            difference[i] = 0;
            continue;
        endif;

        if(o[i] > p[i]):
            difference[i] = o[i] - p[i];
        else:
            difference[i] = p[i] - o[i];
        endif;
    endfor;

    j = 0;
    j_out = 0;

    while(j != scoreBoardSize):
        writeStr("Score difference for match '");
        j_out = j + 1;
        writeInteger(j_out);
        writeStr("' : ");
        writeInteger(difference[j]);
        writeStr("\n");
        j += 1;
    endwhile;

enddef;


def calculateWins(o[]:integer, p[]:integer):

    for i in [0:scoreBoardSize]:
        if(o[i] == p[i]):
            continue;
        endif;

        if(o[i] > p[i]):
            olympiacosWins = olympiacosWins + 1;
        else:
            panathinaikosWins = panathinaikosWins + 1;
        endif;
    endfor;

    writeStr("\n--> Olympiacos Wins: ");
    writeInteger(olympiacosWins);
    writeStr("\n--> Panathinaikos Wins: ");
    writeInteger(panathinaikosWins);
    writeStr("\n");

enddef;



def printScores(o[]: integer, p[]: integer):

    j:integer;
    j = 0;

    writeStr("\n");
    for i in [0:scoreBoardSize]:
        writeStr("Score for match '");
        j = i + 1;
        writeInteger(j);
        writeStr("' : ");
        writeInteger(o[i]);
        writeStr(" - ");
        writeInteger(p[i]);
        writeStr(" \n");
    endfor;

enddef;


def calcAvgScorePerTeam(o[]: integer, p[]: integer):

    totalOlymp, totalPanath: scalar;

    for i in [0:scoreBoardSize]:
        totalOlymp += o[i];
        totalPanath += p[i];
    endfor;

    totalOlymp /= 6;
    totalPanath /= 6;

    writeStr("\nAVG Score for Olympiacos: ");
    writeScalar(totalOlymp);
    writeStr("\n");

    writeStr("AVG Score for Panathinaikos: ");
    writeScalar(totalPanath);
    writeStr("\n");


enddef;


def main():
    allocateScores();
    printScores(olympiacos, panathinaikos);
    calculateDifference(olympiacos, panathinaikos);
    calculateWins(olympiacos, panathinaikos);
    calcAvgScorePerTeam(olympiacos, panathinaikos);
enddef;


